{"metadata":{"usedHelpers":["classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/js/foundation.orbit.js","filenameRelative":"/packages/zurb:foundation-sites/js/foundation.orbit.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/js/foundation.orbit.js.map","sourceFileName":"/packages/zurb:foundation-sites/js/foundation.orbit.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.orbit"},"ignored":false,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n!function ($) {\n\n  /**\n   * Orbit module.\n   * @module foundation.orbit\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   * @requires foundation.util.timerAndImageLoader\n   * @requires foundation.util.touch\n   */\n\n  var Orbit = function () {\n    /**\n    * Creates a new instance of an orbit carousel.\n    * @class\n    * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\n    * @param {Object} options - Overrides to the default plugin settings.\n    */\n\n    function Orbit(element, options) {\n      (0, _classCallCheck3['default'])(this, Orbit);\n\n      this.$element = element;\n      this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Orbit');\n      Foundation.Keyboard.register('Orbit', {\n        'ltr': {\n          'ARROW_RIGHT': 'next',\n          'ARROW_LEFT': 'previous'\n        },\n        'rtl': {\n          'ARROW_LEFT': 'next',\n          'ARROW_RIGHT': 'previous'\n        }\n      });\n    }\n\n    /**\n    * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\n    * @function\n    * @private\n    */\n\n\n    Orbit.prototype._init = function () {\n      function _init() {\n        this.$wrapper = this.$element.find('.' + this.options.containerClass);\n        this.$slides = this.$element.find('.' + this.options.slideClass);\n        var $images = this.$element.find('img'),\n            initActive = this.$slides.filter('.is-active');\n\n        if (!initActive.length) {\n          this.$slides.eq(0).addClass('is-active');\n        }\n\n        if (!this.options.useMUI) {\n          this.$slides.addClass('no-motionui');\n        }\n\n        if ($images.length) {\n          Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\n        } else {\n          this._prepareForOrbit(); //hehe\n        }\n\n        if (this.options.bullets) {\n          this._loadBullets();\n        }\n\n        this._events();\n\n        if (this.options.autoPlay && this.$slides.length > 1) {\n          this.geoSync();\n        }\n\n        if (this.options.accessible) {\n          // allow wrapper to be focusable to enable arrow navigation\n          this.$wrapper.attr('tabindex', 0);\n        }\n      }\n\n      return _init;\n    }();\n\n    /**\n    * Creates a jQuery collection of bullets, if they are being used.\n    * @function\n    * @private\n    */\n\n\n    Orbit.prototype._loadBullets = function () {\n      function _loadBullets() {\n        this.$bullets = this.$element.find('.' + this.options.boxOfBullets).find('button');\n      }\n\n      return _loadBullets;\n    }();\n\n    /**\n    * Sets a `timer` object on the orbit, and starts the counter for the next slide.\n    * @function\n    */\n\n\n    Orbit.prototype.geoSync = function () {\n      function geoSync() {\n        var _this = this;\n        this.timer = new Foundation.Timer(this.$element, {\n          duration: this.options.timerDelay,\n          infinite: false\n        }, function () {\n          _this.changeSlide(true);\n        });\n        this.timer.start();\n      }\n\n      return geoSync;\n    }();\n\n    /**\n    * Sets wrapper and slide heights for the orbit.\n    * @function\n    * @private\n    */\n\n\n    Orbit.prototype._prepareForOrbit = function () {\n      function _prepareForOrbit() {\n        var _this = this;\n        this._setWrapperHeight(function (max) {\n          _this._setSlideHeight(max);\n        });\n      }\n\n      return _prepareForOrbit;\n    }();\n\n    /**\n    * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\n    * @function\n    * @private\n    * @param {Function} cb - a callback function to fire when complete.\n    */\n\n\n    Orbit.prototype._setWrapperHeight = function () {\n      function _setWrapperHeight(cb) {\n        //rewrite this to `for` loop\n        var max = 0,\n            temp,\n            counter = 0;\n\n        this.$slides.each(function () {\n          temp = this.getBoundingClientRect().height;\n          $(this).attr('data-slide', counter);\n\n          if (counter) {\n            //if not the first slide, set css position and display property\n            $(this).css({ 'position': 'relative', 'display': 'none' });\n          }\n          max = temp > max ? temp : max;\n          counter++;\n        });\n\n        if (counter === this.$slides.length) {\n          this.$wrapper.css({ 'height': max }); //only change the wrapper height property once.\n          cb(max); //fire callback with max height dimension.\n        }\n      }\n\n      return _setWrapperHeight;\n    }();\n\n    /**\n    * Sets the max-height of each slide.\n    * @function\n    * @private\n    */\n\n\n    Orbit.prototype._setSlideHeight = function () {\n      function _setSlideHeight(height) {\n        this.$slides.each(function () {\n          $(this).css('max-height', height);\n        });\n      }\n\n      return _setSlideHeight;\n    }();\n\n    /**\n    * Adds event listeners to basically everything within the element.\n    * @function\n    * @private\n    */\n\n\n    Orbit.prototype._events = function () {\n      function _events() {\n        var _this = this;\n\n        //***************************************\n        //**Now using custom event - thanks to:**\n        //**      Yohai Ararat of Toronto      **\n        //***************************************\n        if (this.$slides.length > 1) {\n\n          if (this.options.swipe) {\n            this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit').on('swipeleft.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide(true);\n            }).on('swiperight.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide(false);\n            });\n          }\n          //***************************************\n\n          if (this.options.autoPlay) {\n            this.$slides.on('click.zf.orbit', function () {\n              _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\n              _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\n            });\n\n            if (this.options.pauseOnHover) {\n              this.$element.on('mouseenter.zf.orbit', function () {\n                _this.timer.pause();\n              }).on('mouseleave.zf.orbit', function () {\n                if (!_this.$element.data('clickedOn')) {\n                  _this.timer.start();\n                }\n              });\n            }\n          }\n\n          if (this.options.navButtons) {\n            var $controls = this.$element.find('.' + this.options.nextClass + ', .' + this.options.prevClass);\n            $controls.attr('tabindex', 0)\n            //also need to handle enter/return and spacebar key presses\n            .on('click.zf.orbit touchend.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide($(this).hasClass(_this.options.nextClass));\n            });\n          }\n\n          if (this.options.bullets) {\n            this.$bullets.on('click.zf.orbit touchend.zf.orbit', function () {\n              if (/is-active/g.test(this.className)) {\n                return false;\n              } //if this is active, kick out of function.\n              var idx = $(this).data('slide'),\n                  ltr = idx > _this.$slides.filter('.is-active').data('slide'),\n                  $slide = _this.$slides.eq(idx);\n\n              _this.changeSlide(ltr, $slide, idx);\n            });\n          }\n\n          this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function (e) {\n            // handle keyboard event with keyboard util\n            Foundation.Keyboard.handleKey(e, 'Orbit', {\n              next: function () {\n                function next() {\n                  _this.changeSlide(true);\n                }\n\n                return next;\n              }(),\n              previous: function () {\n                function previous() {\n                  _this.changeSlide(false);\n                }\n\n                return previous;\n              }(),\n              handled: function () {\n                function handled() {\n                  // if bullet is focused, make sure focus moves\n                  if ($(e.target).is(_this.$bullets)) {\n                    _this.$bullets.filter('.is-active').focus();\n                  }\n                }\n\n                return handled;\n              }()\n            });\n          });\n        }\n      }\n\n      return _events;\n    }();\n\n    /**\n    * Changes the current slide to a new one.\n    * @function\n    * @param {Boolean} isLTR - flag if the slide should move left to right.\n    * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\n    * @param {Number} idx - the index of the new slide in its collection, if one chosen.\n    * @fires Orbit#slidechange\n    */\n\n\n    Orbit.prototype.changeSlide = function () {\n      function changeSlide(isLTR, chosenSlide, idx) {\n        var $curSlide = this.$slides.filter('.is-active').eq(0);\n\n        if (/mui/g.test($curSlide[0].className)) {\n          return false;\n        } //if the slide is currently animating, kick out of the function\n\n        var $firstSlide = this.$slides.first(),\n            $lastSlide = this.$slides.last(),\n            dirIn = isLTR ? 'Right' : 'Left',\n            dirOut = isLTR ? 'Left' : 'Right',\n            _this = this,\n            $newSlide;\n\n        if (!chosenSlide) {\n          //most of the time, this will be auto played or clicked from the navButtons.\n          $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\n          this.options.infiniteWrap ? $curSlide.next('.' + this.options.slideClass).length ? $curSlide.next('.' + this.options.slideClass) : $firstSlide : $curSlide.next('.' + this.options.slideClass) : //pick next slide if moving left to right\n          this.options.infiniteWrap ? $curSlide.prev('.' + this.options.slideClass).length ? $curSlide.prev('.' + this.options.slideClass) : $lastSlide : $curSlide.prev('.' + this.options.slideClass); //pick prev slide if moving right to left\n        } else {\n            $newSlide = chosenSlide;\n          }\n\n        if ($newSlide.length) {\n          if (this.options.bullets) {\n            idx = idx || this.$slides.index($newSlide); //grab index to update bullets\n            this._updateBullets(idx);\n          }\n\n          if (this.options.useMUI) {\n            Foundation.Motion.animateIn($newSlide.addClass('is-active').css({ 'position': 'absolute', 'top': 0 }), this.options['animInFrom' + dirIn], function () {\n              $newSlide.css({ 'position': 'relative', 'display': 'block' }).attr('aria-live', 'polite');\n            });\n\n            Foundation.Motion.animateOut($curSlide.removeClass('is-active'), this.options['animOutTo' + dirOut], function () {\n              $curSlide.removeAttr('aria-live');\n              if (_this.options.autoPlay && !_this.timer.isPaused) {\n                _this.timer.restart();\n              }\n              //do stuff?\n            });\n          } else {\n              $curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();\n              $newSlide.addClass('is-active is-in').attr('aria-live', 'polite').show();\n              if (this.options.autoPlay && !this.timer.isPaused) {\n                this.timer.restart();\n              }\n            }\n          /**\n          * Triggers when the slide has finished animating in.\n          * @event Orbit#slidechange\n          */\n          this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\n        }\n      }\n\n      return changeSlide;\n    }();\n\n    /**\n    * Updates the active state of the bullets, if displayed.\n    * @function\n    * @private\n    * @param {Number} idx - the index of the current slide.\n    */\n\n\n    Orbit.prototype._updateBullets = function () {\n      function _updateBullets(idx) {\n        var $oldBullet = this.$element.find('.' + this.options.boxOfBullets).find('.is-active').removeClass('is-active').blur(),\n            span = $oldBullet.find('span:last').detach(),\n            $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\n      }\n\n      return _updateBullets;\n    }();\n\n    /**\n    * Destroys the carousel and hides the element.\n    * @function\n    */\n\n\n    Orbit.prototype.destroy = function () {\n      function destroy() {\n        this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\n        Foundation.unregisterPlugin(this);\n      }\n\n      return destroy;\n    }();\n\n    return Orbit;\n  }();\n\n  Orbit.defaults = {\n    /**\n    * Tells the JS to look for and loadBullets.\n    * @option\n    * @example true\n    */\n    bullets: true,\n    /**\n    * Tells the JS to apply event listeners to nav buttons\n    * @option\n    * @example true\n    */\n    navButtons: true,\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-in-right'\n    */\n    animInFromRight: 'slide-in-right',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-out-right'\n    */\n    animOutToRight: 'slide-out-right',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-in-left'\n    *\n    */\n    animInFromLeft: 'slide-in-left',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-out-left'\n    */\n    animOutToLeft: 'slide-out-left',\n    /**\n    * Allows Orbit to automatically animate on page load.\n    * @option\n    * @example true\n    */\n    autoPlay: true,\n    /**\n    * Amount of time, in ms, between slide transitions\n    * @option\n    * @example 5000\n    */\n    timerDelay: 5000,\n    /**\n    * Allows Orbit to infinitely loop through the slides\n    * @option\n    * @example true\n    */\n    infiniteWrap: true,\n    /**\n    * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\n    * @option\n    * @example true\n    */\n    swipe: true,\n    /**\n    * Allows the timing function to pause animation on hover.\n    * @option\n    * @example true\n    */\n    pauseOnHover: true,\n    /**\n    * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\n    * @option\n    * @example true\n    */\n    accessible: true,\n    /**\n    * Class applied to the container of Orbit\n    * @option\n    * @example 'orbit-container'\n    */\n    containerClass: 'orbit-container',\n    /**\n    * Class applied to individual slides.\n    * @option\n    * @example 'orbit-slide'\n    */\n    slideClass: 'orbit-slide',\n    /**\n    * Class applied to the bullet container. You're welcome.\n    * @option\n    * @example 'orbit-bullets'\n    */\n    boxOfBullets: 'orbit-bullets',\n    /**\n    * Class applied to the `next` navigation button.\n    * @option\n    * @example 'orbit-next'\n    */\n    nextClass: 'orbit-next',\n    /**\n    * Class applied to the `previous` navigation button.\n    * @option\n    * @example 'orbit-previous'\n    */\n    prevClass: 'orbit-previous',\n    /**\n    * Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\n    * @option\n    * @example true\n    */\n    useMUI: true\n  };\n\n  // Window exports\n  Foundation.plugin(Orbit, 'Orbit');\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/js/foundation.orbit.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/js/foundation.orbit.js.map","sourcesContent":["'use strict';\n\n!function($) {\n\n/**\n * Orbit module.\n * @module foundation.orbit\n * @requires foundation.util.keyboard\n * @requires foundation.util.motion\n * @requires foundation.util.timerAndImageLoader\n * @requires foundation.util.touch\n */\n\nclass Orbit {\n  /**\n  * Creates a new instance of an orbit carousel.\n  * @class\n  * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\n  * @param {Object} options - Overrides to the default plugin settings.\n  */\n  constructor(element, options){\n    this.$element = element;\n    this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Orbit');\n    Foundation.Keyboard.register('Orbit', {\n      'ltr': {\n        'ARROW_RIGHT': 'next',\n        'ARROW_LEFT': 'previous'\n      },\n      'rtl': {\n        'ARROW_LEFT': 'next',\n        'ARROW_RIGHT': 'previous'\n      }\n    });\n  }\n\n  /**\n  * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\n  * @function\n  * @private\n  */\n  _init() {\n    this.$wrapper = this.$element.find(`.${this.options.containerClass}`);\n    this.$slides = this.$element.find(`.${this.options.slideClass}`);\n    var $images = this.$element.find('img'),\n    initActive = this.$slides.filter('.is-active');\n\n    if (!initActive.length) {\n      this.$slides.eq(0).addClass('is-active');\n    }\n\n    if (!this.options.useMUI) {\n      this.$slides.addClass('no-motionui');\n    }\n\n    if ($images.length) {\n      Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\n    } else {\n      this._prepareForOrbit();//hehe\n    }\n\n    if (this.options.bullets) {\n      this._loadBullets();\n    }\n\n    this._events();\n\n    if (this.options.autoPlay && this.$slides.length > 1) {\n      this.geoSync();\n    }\n\n    if (this.options.accessible) { // allow wrapper to be focusable to enable arrow navigation\n      this.$wrapper.attr('tabindex', 0);\n    }\n  }\n\n  /**\n  * Creates a jQuery collection of bullets, if they are being used.\n  * @function\n  * @private\n  */\n  _loadBullets() {\n    this.$bullets = this.$element.find(`.${this.options.boxOfBullets}`).find('button');\n  }\n\n  /**\n  * Sets a `timer` object on the orbit, and starts the counter for the next slide.\n  * @function\n  */\n  geoSync() {\n    var _this = this;\n    this.timer = new Foundation.Timer(\n      this.$element,\n      {\n        duration: this.options.timerDelay,\n        infinite: false\n      },\n      function() {\n        _this.changeSlide(true);\n      });\n    this.timer.start();\n  }\n\n  /**\n  * Sets wrapper and slide heights for the orbit.\n  * @function\n  * @private\n  */\n  _prepareForOrbit() {\n    var _this = this;\n    this._setWrapperHeight(function(max){\n      _this._setSlideHeight(max);\n    });\n  }\n\n  /**\n  * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\n  * @function\n  * @private\n  * @param {Function} cb - a callback function to fire when complete.\n  */\n  _setWrapperHeight(cb) {//rewrite this to `for` loop\n    var max = 0, temp, counter = 0;\n\n    this.$slides.each(function() {\n      temp = this.getBoundingClientRect().height;\n      $(this).attr('data-slide', counter);\n\n      if (counter) {//if not the first slide, set css position and display property\n        $(this).css({'position': 'relative', 'display': 'none'});\n      }\n      max = temp > max ? temp : max;\n      counter++;\n    });\n\n    if (counter === this.$slides.length) {\n      this.$wrapper.css({'height': max}); //only change the wrapper height property once.\n      cb(max); //fire callback with max height dimension.\n    }\n  }\n\n  /**\n  * Sets the max-height of each slide.\n  * @function\n  * @private\n  */\n  _setSlideHeight(height) {\n    this.$slides.each(function() {\n      $(this).css('max-height', height);\n    });\n  }\n\n  /**\n  * Adds event listeners to basically everything within the element.\n  * @function\n  * @private\n  */\n  _events() {\n    var _this = this;\n\n    //***************************************\n    //**Now using custom event - thanks to:**\n    //**      Yohai Ararat of Toronto      **\n    //***************************************\n    if (this.$slides.length > 1) {\n\n      if (this.options.swipe) {\n        this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit')\n        .on('swipeleft.zf.orbit', function(e){\n          e.preventDefault();\n          _this.changeSlide(true);\n        }).on('swiperight.zf.orbit', function(e){\n          e.preventDefault();\n          _this.changeSlide(false);\n        });\n      }\n      //***************************************\n\n      if (this.options.autoPlay) {\n        this.$slides.on('click.zf.orbit', function() {\n          _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\n          _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\n        });\n\n        if (this.options.pauseOnHover) {\n          this.$element.on('mouseenter.zf.orbit', function() {\n            _this.timer.pause();\n          }).on('mouseleave.zf.orbit', function() {\n            if (!_this.$element.data('clickedOn')) {\n              _this.timer.start();\n            }\n          });\n        }\n      }\n\n      if (this.options.navButtons) {\n        var $controls = this.$element.find(`.${this.options.nextClass}, .${this.options.prevClass}`);\n        $controls.attr('tabindex', 0)\n        //also need to handle enter/return and spacebar key presses\n        .on('click.zf.orbit touchend.zf.orbit', function(e){\n\t  e.preventDefault();\n          _this.changeSlide($(this).hasClass(_this.options.nextClass));\n        });\n      }\n\n      if (this.options.bullets) {\n        this.$bullets.on('click.zf.orbit touchend.zf.orbit', function() {\n          if (/is-active/g.test(this.className)) { return false; }//if this is active, kick out of function.\n          var idx = $(this).data('slide'),\n          ltr = idx > _this.$slides.filter('.is-active').data('slide'),\n          $slide = _this.$slides.eq(idx);\n\n          _this.changeSlide(ltr, $slide, idx);\n        });\n      }\n\n      this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function(e) {\n        // handle keyboard event with keyboard util\n        Foundation.Keyboard.handleKey(e, 'Orbit', {\n          next: function() {\n            _this.changeSlide(true);\n          },\n          previous: function() {\n            _this.changeSlide(false);\n          },\n          handled: function() { // if bullet is focused, make sure focus moves\n            if ($(e.target).is(_this.$bullets)) {\n              _this.$bullets.filter('.is-active').focus();\n            }\n          }\n        });\n      });\n    }\n  }\n\n  /**\n  * Changes the current slide to a new one.\n  * @function\n  * @param {Boolean} isLTR - flag if the slide should move left to right.\n  * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\n  * @param {Number} idx - the index of the new slide in its collection, if one chosen.\n  * @fires Orbit#slidechange\n  */\n  changeSlide(isLTR, chosenSlide, idx) {\n    var $curSlide = this.$slides.filter('.is-active').eq(0);\n\n    if (/mui/g.test($curSlide[0].className)) { return false; } //if the slide is currently animating, kick out of the function\n\n    var $firstSlide = this.$slides.first(),\n    $lastSlide = this.$slides.last(),\n    dirIn = isLTR ? 'Right' : 'Left',\n    dirOut = isLTR ? 'Left' : 'Right',\n    _this = this,\n    $newSlide;\n\n    if (!chosenSlide) { //most of the time, this will be auto played or clicked from the navButtons.\n      $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\n      (this.options.infiniteWrap ? $curSlide.next(`.${this.options.slideClass}`).length ? $curSlide.next(`.${this.options.slideClass}`) : $firstSlide : $curSlide.next(`.${this.options.slideClass}`))//pick next slide if moving left to right\n      :\n      (this.options.infiniteWrap ? $curSlide.prev(`.${this.options.slideClass}`).length ? $curSlide.prev(`.${this.options.slideClass}`) : $lastSlide : $curSlide.prev(`.${this.options.slideClass}`));//pick prev slide if moving right to left\n    } else {\n      $newSlide = chosenSlide;\n    }\n\n    if ($newSlide.length) {\n      if (this.options.bullets) {\n        idx = idx || this.$slides.index($newSlide); //grab index to update bullets\n        this._updateBullets(idx);\n      }\n\n      if (this.options.useMUI) {\n        Foundation.Motion.animateIn(\n          $newSlide.addClass('is-active').css({'position': 'absolute', 'top': 0}),\n          this.options[`animInFrom${dirIn}`],\n          function(){\n            $newSlide.css({'position': 'relative', 'display': 'block'})\n            .attr('aria-live', 'polite');\n        });\n\n        Foundation.Motion.animateOut(\n          $curSlide.removeClass('is-active'),\n          this.options[`animOutTo${dirOut}`],\n          function(){\n            $curSlide.removeAttr('aria-live');\n            if(_this.options.autoPlay && !_this.timer.isPaused){\n              _this.timer.restart();\n            }\n            //do stuff?\n          });\n      } else {\n        $curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();\n        $newSlide.addClass('is-active is-in').attr('aria-live', 'polite').show();\n        if (this.options.autoPlay && !this.timer.isPaused) {\n          this.timer.restart();\n        }\n      }\n    /**\n    * Triggers when the slide has finished animating in.\n    * @event Orbit#slidechange\n    */\n      this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\n    }\n  }\n\n  /**\n  * Updates the active state of the bullets, if displayed.\n  * @function\n  * @private\n  * @param {Number} idx - the index of the current slide.\n  */\n  _updateBullets(idx) {\n    var $oldBullet = this.$element.find(`.${this.options.boxOfBullets}`)\n    .find('.is-active').removeClass('is-active').blur(),\n    span = $oldBullet.find('span:last').detach(),\n    $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\n  }\n\n  /**\n  * Destroys the carousel and hides the element.\n  * @function\n  */\n  destroy() {\n    this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nOrbit.defaults = {\n  /**\n  * Tells the JS to look for and loadBullets.\n  * @option\n  * @example true\n  */\n  bullets: true,\n  /**\n  * Tells the JS to apply event listeners to nav buttons\n  * @option\n  * @example true\n  */\n  navButtons: true,\n  /**\n  * motion-ui animation class to apply\n  * @option\n  * @example 'slide-in-right'\n  */\n  animInFromRight: 'slide-in-right',\n  /**\n  * motion-ui animation class to apply\n  * @option\n  * @example 'slide-out-right'\n  */\n  animOutToRight: 'slide-out-right',\n  /**\n  * motion-ui animation class to apply\n  * @option\n  * @example 'slide-in-left'\n  *\n  */\n  animInFromLeft: 'slide-in-left',\n  /**\n  * motion-ui animation class to apply\n  * @option\n  * @example 'slide-out-left'\n  */\n  animOutToLeft: 'slide-out-left',\n  /**\n  * Allows Orbit to automatically animate on page load.\n  * @option\n  * @example true\n  */\n  autoPlay: true,\n  /**\n  * Amount of time, in ms, between slide transitions\n  * @option\n  * @example 5000\n  */\n  timerDelay: 5000,\n  /**\n  * Allows Orbit to infinitely loop through the slides\n  * @option\n  * @example true\n  */\n  infiniteWrap: true,\n  /**\n  * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\n  * @option\n  * @example true\n  */\n  swipe: true,\n  /**\n  * Allows the timing function to pause animation on hover.\n  * @option\n  * @example true\n  */\n  pauseOnHover: true,\n  /**\n  * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\n  * @option\n  * @example true\n  */\n  accessible: true,\n  /**\n  * Class applied to the container of Orbit\n  * @option\n  * @example 'orbit-container'\n  */\n  containerClass: 'orbit-container',\n  /**\n  * Class applied to individual slides.\n  * @option\n  * @example 'orbit-slide'\n  */\n  slideClass: 'orbit-slide',\n  /**\n  * Class applied to the bullet container. You're welcome.\n  * @option\n  * @example 'orbit-bullets'\n  */\n  boxOfBullets: 'orbit-bullets',\n  /**\n  * Class applied to the `next` navigation button.\n  * @option\n  * @example 'orbit-next'\n  */\n  nextClass: 'orbit-next',\n  /**\n  * Class applied to the `previous` navigation button.\n  * @option\n  * @example 'orbit-previous'\n  */\n  prevClass: 'orbit-previous',\n  /**\n  * Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\n  * @option\n  * @example true\n  */\n  useMUI: true\n};\n\n// Window exports\nFoundation.plugin(Orbit, 'Orbit');\n\n}(jQuery);\n"]},"hash":"3b475871de0cb0b9602f2b98df0bfbb1789db49a"}
