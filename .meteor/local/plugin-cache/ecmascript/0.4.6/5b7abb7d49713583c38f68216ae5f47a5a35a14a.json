{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/test/javascript/lib/chai-jquery.js","filenameRelative":"/packages/zurb:foundation-sites/test/javascript/lib/chai-jquery.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/test/javascript/lib/chai-jquery.js.map","sourceFileName":"/packages/zurb:foundation-sites/test/javascript/lib/chai-jquery.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"chai-jquery"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n(function (chaiJquery) {\n  // Module systems magic dance.\n  if (typeof require === \"function\" && (typeof exports === \"undefined\" ? \"undefined\" : (0, _typeof3[\"default\"])(exports)) === \"object\" && (typeof module === \"undefined\" ? \"undefined\" : (0, _typeof3[\"default\"])(module)) === \"object\") {\n    // NodeJS\n    module.exports = chaiJquery;\n  } else if (typeof define === \"function\" && define.amd) {\n    // AMD\n    define(['jquery'], function ($) {\n      return function (chai, utils) {\n        return chaiJquery(chai, utils, $);\n      };\n    });\n  } else {\n    // Other environment (usually <script> tag): plug in to global chai instance directly.\n    chai.use(function (chai, utils) {\n      return chaiJquery(chai, utils, jQuery);\n    });\n  }\n})(function (chai, utils, $) {\n  var inspect = utils.inspect,\n      flag = utils.flag;\n  $ = $ || jQuery;\n\n  var setPrototypeOf = '__proto__' in Object ? function (object, prototype) {\n    object.__proto__ = prototype;\n  } : function (object, prototype) {\n    var excludeNames = /^(?:length|name|arguments|caller)$/;\n\n    function copyProperties(dst, src) {\n      Object.getOwnPropertyNames(src).forEach(function (name) {\n        if (!excludeNames.test(name)) {\n          Object.defineProperty(dst, name, Object.getOwnPropertyDescriptor(src, name));\n        }\n      });\n    }\n\n    copyProperties(object, prototype);\n    copyProperties(object, Object.getPrototypeOf(prototype));\n  };\n\n  $.fn.inspect = function (depth) {\n    var el = $('<div />').append(this.clone());\n    if (depth !== undefined) {\n      var children = el.children();\n      while (depth-- > 0) {\n        children = children.children();\n      }children.html('...');\n    }\n    return el.html();\n  };\n\n  var props = { attr: 'attribute', css: 'CSS property', prop: 'property' };\n  for (var prop in meteorBabelHelpers.sanitizeForInObject(props)) {\n    (function (prop, description) {\n      chai.Assertion.addMethod(prop, function (name, val) {\n        var actual = flag(this, 'object')[prop](name);\n\n        if (!flag(this, 'negate') || undefined === val) {\n          this.assert(undefined !== actual, 'expected #{this} to have a #{exp} ' + description, 'expected #{this} not to have a #{exp} ' + description, name);\n        }\n\n        if (undefined !== val) {\n          this.assert(val === actual, 'expected #{this} to have a ' + inspect(name) + ' ' + description + ' with the value #{exp}, but the value was #{act}', 'expected #{this} not to have a ' + inspect(name) + ' ' + description + ' with the value #{act}', val, actual);\n        }\n\n        flag(this, 'object', actual);\n      });\n    })(prop, props[prop]);\n  }\n\n  chai.Assertion.addMethod('data', function (name, val) {\n    // Work around a chai bug (https://github.com/logicalparadox/chai/issues/16)\n    if (flag(this, 'negate') && undefined !== val && undefined === flag(this, 'object').data(name)) {\n      return;\n    }\n\n    var assertion = new chai.Assertion(flag(this, 'object').data());\n    if (flag(this, 'negate')) assertion = assertion.not;\n    return assertion.property(name, val);\n  });\n\n  chai.Assertion.addMethod('class', function (className) {\n    this.assert(flag(this, 'object').hasClass(className), 'expected #{this} to have class #{exp}', 'expected #{this} not to have class #{exp}', className);\n  });\n\n  chai.Assertion.addMethod('id', function (id) {\n    this.assert(flag(this, 'object').attr('id') === id, 'expected #{this} to have id #{exp}', 'expected #{this} not to have id #{exp}', id);\n  });\n\n  chai.Assertion.addMethod('html', function (html) {\n    var actual = flag(this, 'object').html();\n    this.assert(actual === html, 'expected #{this} to have HTML #{exp}, but the HTML was #{act}', 'expected #{this} not to have HTML #{exp}', html, actual);\n  });\n\n  chai.Assertion.addMethod('text', function (text) {\n    var actual = flag(this, 'object').text();\n    this.assert(actual === text, 'expected #{this} to have text #{exp}, but the text was #{act}', 'expected #{this} not to have text #{exp}', text, actual);\n  });\n\n  chai.Assertion.addMethod('value', function (value) {\n    var actual = flag(this, 'object').val();\n    this.assert(flag(this, 'object').val() === value, 'expected #{this} to have value #{exp}, but the value was #{act}', 'expected #{this} not to have value #{exp}', value, actual);\n  });\n\n  chai.Assertion.addMethod('descendants', function (selector) {\n    this.assert(flag(this, 'object').has(selector).length > 0, 'expected #{this} to have #{exp}', 'expected #{this} not to have #{exp}', selector);\n  });\n\n  $.each(['visible', 'hidden', 'selected', 'checked', 'enabled', 'disabled'], function (i, attr) {\n    chai.Assertion.addProperty(attr, function () {\n      this.assert(flag(this, 'object').is(':' + attr), 'expected #{this} to be ' + attr, 'expected #{this} not to be ' + attr);\n    });\n  });\n\n  chai.Assertion.overwriteProperty('exist', function (_super) {\n    return function () {\n      var obj = flag(this, 'object');\n      if (obj instanceof $) {\n        this.assert(obj.length > 0, 'expected ' + inspect(obj.selector) + ' to exist', 'expected ' + inspect(obj.selector) + ' not to exist');\n      } else {\n        _super.apply(this, arguments);\n      }\n    };\n  });\n\n  chai.Assertion.overwriteProperty('empty', function (_super) {\n    return function () {\n      var obj = flag(this, 'object');\n      if (obj instanceof $) {\n        this.assert(obj.is(':empty'), 'expected #{this} to be empty', 'expected #{this} not to be empty');\n      } else {\n        _super.apply(this, arguments);\n      }\n    };\n  });\n\n  chai.Assertion.overwriteMethod('match', function (_super) {\n    return function (selector) {\n      var obj = flag(this, 'object');\n      if (obj instanceof $) {\n        this.assert(obj.is(selector), 'expected #{this} to match #{exp}', 'expected #{this} not to match #{exp}', selector);\n      } else {\n        _super.apply(this, arguments);\n      }\n    };\n  });\n\n  chai.Assertion.overwriteChainableMethod('contain', function (_super) {\n    return function (text) {\n      var obj = flag(this, 'object');\n      if (obj instanceof $) {\n        this.assert(obj.is(':contains(\\'' + text + '\\')'), 'expected #{this} to contain #{exp}', 'expected #{this} not to contain #{exp}', text);\n      } else {\n        _super.apply(this, arguments);\n      }\n    };\n  }, function (_super) {\n    return function () {\n      _super.call(this);\n    };\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/test/javascript/lib/chai-jquery.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/test/javascript/lib/chai-jquery.js.map","sourcesContent":["(function (chaiJquery) {\n  // Module systems magic dance.\n  if (typeof require === \"function\" && typeof exports === \"object\" && typeof module === \"object\") {\n    // NodeJS\n    module.exports = chaiJquery;\n  } else if (typeof define === \"function\" && define.amd) {\n    // AMD\n    define(['jquery'], function ($) {\n      return function (chai, utils) {\n        return chaiJquery(chai, utils, $);\n      };\n    });\n  } else {\n    // Other environment (usually <script> tag): plug in to global chai instance directly.\n    chai.use(function (chai, utils) {\n      return chaiJquery(chai, utils, jQuery);\n    });\n  }\n}(function (chai, utils, $) {\n  var inspect = utils.inspect,\n      flag = utils.flag;\n  $ = $ || jQuery;\n\n  var setPrototypeOf = '__proto__' in Object ?\n    function (object, prototype) {\n      object.__proto__ = prototype;\n    } :\n    function (object, prototype) {\n      var excludeNames = /^(?:length|name|arguments|caller)$/;\n\n      function copyProperties(dst, src) {\n        Object.getOwnPropertyNames(src).forEach(function (name) {\n          if (!excludeNames.test(name)) {\n            Object.defineProperty(dst, name,\n              Object.getOwnPropertyDescriptor(src, name));\n          }\n        });\n      }\n\n      copyProperties(object, prototype);\n      copyProperties(object, Object.getPrototypeOf(prototype));\n    };\n\n  $.fn.inspect = function (depth) {\n    var el = $('<div />').append(this.clone());\n    if (depth !== undefined) {\n      var children = el.children();\n      while (depth-- > 0)\n        children = children.children();\n      children.html('...');\n    }\n    return el.html();\n  };\n\n  var props = {attr: 'attribute', css: 'CSS property', prop: 'property'};\n  for (var prop in props) {\n    (function (prop, description) {\n      chai.Assertion.addMethod(prop, function (name, val) {\n        var actual = flag(this, 'object')[prop](name);\n\n        if (!flag(this, 'negate') || undefined === val) {\n          this.assert(\n              undefined !== actual\n            , 'expected #{this} to have a #{exp} ' + description\n            , 'expected #{this} not to have a #{exp} ' + description\n            , name\n          );\n        }\n\n        if (undefined !== val) {\n          this.assert(\n              val === actual\n            , 'expected #{this} to have a ' + inspect(name) + ' ' + description + ' with the value #{exp}, but the value was #{act}'\n            , 'expected #{this} not to have a ' + inspect(name) + ' ' + description + ' with the value #{act}'\n            , val\n            , actual\n          );\n        }\n\n        flag(this, 'object', actual);\n      });\n    })(prop, props[prop]);\n  }\n\n  chai.Assertion.addMethod('data', function (name, val) {\n    // Work around a chai bug (https://github.com/logicalparadox/chai/issues/16)\n    if (flag(this, 'negate') && undefined !== val && undefined === flag(this, 'object').data(name)) {\n      return;\n    }\n\n    var assertion = new chai.Assertion(flag(this, 'object').data());\n    if (flag(this, 'negate'))\n      assertion = assertion.not;\n    return assertion.property(name, val);\n  });\n\n  chai.Assertion.addMethod('class', function (className) {\n    this.assert(\n        flag(this, 'object').hasClass(className)\n      , 'expected #{this} to have class #{exp}'\n      , 'expected #{this} not to have class #{exp}'\n      , className\n    );\n  });\n\n  chai.Assertion.addMethod('id', function (id) {\n    this.assert(\n        flag(this, 'object').attr('id') === id\n      , 'expected #{this} to have id #{exp}'\n      , 'expected #{this} not to have id #{exp}'\n      , id\n    );\n  });\n\n  chai.Assertion.addMethod('html', function (html) {\n    var actual = flag(this, 'object').html();\n    this.assert(\n        actual === html\n      , 'expected #{this} to have HTML #{exp}, but the HTML was #{act}'\n      , 'expected #{this} not to have HTML #{exp}'\n      , html\n      , actual\n    );\n  });\n\n  chai.Assertion.addMethod('text', function (text) {\n    var actual = flag(this, 'object').text();\n    this.assert(\n        actual === text\n      , 'expected #{this} to have text #{exp}, but the text was #{act}'\n      , 'expected #{this} not to have text #{exp}'\n      , text\n      , actual\n    );\n  });\n\n  chai.Assertion.addMethod('value', function (value) {\n    var actual = flag(this, 'object').val();\n    this.assert(\n        flag(this, 'object').val() === value\n      , 'expected #{this} to have value #{exp}, but the value was #{act}'\n      , 'expected #{this} not to have value #{exp}'\n      , value\n      , actual\n    );\n  });\n\n  chai.Assertion.addMethod('descendants', function (selector) {\n    this.assert(\n        flag(this, 'object').has(selector).length > 0\n      , 'expected #{this} to have #{exp}'\n      , 'expected #{this} not to have #{exp}'\n      , selector\n    );\n  });\n\n  $.each(['visible', 'hidden', 'selected', 'checked', 'enabled', 'disabled'], function (i, attr) {\n    chai.Assertion.addProperty(attr, function () {\n      this.assert(\n          flag(this, 'object').is(':' + attr)\n        , 'expected #{this} to be ' + attr\n        , 'expected #{this} not to be ' + attr);\n    });\n  });\n\n  chai.Assertion.overwriteProperty('exist', function (_super) {\n    return function () {\n      var obj = flag(this, 'object');\n      if (obj instanceof $) {\n        this.assert(\n            obj.length > 0\n          , 'expected ' + inspect(obj.selector) + ' to exist'\n          , 'expected ' + inspect(obj.selector) + ' not to exist');\n      } else {\n        _super.apply(this, arguments);\n      }\n    };\n  });\n\n  chai.Assertion.overwriteProperty('empty', function (_super) {\n    return function () {\n      var obj = flag(this, 'object');\n      if (obj instanceof $) {\n        this.assert(\n          obj.is(':empty')\n          , 'expected #{this} to be empty'\n          , 'expected #{this} not to be empty');\n      } else {\n        _super.apply(this, arguments);\n      }\n    };\n  });\n\n  chai.Assertion.overwriteMethod('match', function (_super) {\n    return function (selector) {\n      var obj = flag(this, 'object');\n      if (obj instanceof $) {\n        this.assert(\n            obj.is(selector)\n          , 'expected #{this} to match #{exp}'\n          , 'expected #{this} not to match #{exp}'\n          , selector\n        );\n      } else {\n        _super.apply(this, arguments);\n      }\n    }\n  });\n\n  chai.Assertion.overwriteChainableMethod('contain',\n    function (_super) {\n      return function (text) {\n        var obj = flag(this, 'object');\n        if (obj instanceof $) {\n          this.assert(\n              obj.is(':contains(\\'' + text + '\\')')\n            , 'expected #{this} to contain #{exp}'\n            , 'expected #{this} not to contain #{exp}'\n            , text);\n        } else {\n          _super.apply(this, arguments);\n        }\n      }\n    },\n    function(_super) {\n      return function() {\n        _super.call(this);\n      };\n    }\n  );\n}));\n"]},"hash":"5b7abb7d49713583c38f68216ae5f47a5a35a14a"}
