{"metadata":{"usedHelpers":["classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/js/foundation.dropdown.js","filenameRelative":"/packages/zurb:foundation-sites/js/foundation.dropdown.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/js/foundation.dropdown.js.map","sourceFileName":"/packages/zurb:foundation-sites/js/foundation.dropdown.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.dropdown"},"ignored":false,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n!function ($) {\n\n  /**\n   * Dropdown module.\n   * @module foundation.dropdown\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   */\n\n  var Dropdown = function () {\n    /**\n     * Creates a new instance of a dropdown.\n     * @class\n     * @param {jQuery} element - jQuery object to make into a dropdown.\n     *        Object should be of the dropdown panel, rather than its anchor.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Dropdown(element, options) {\n      (0, _classCallCheck3['default'])(this, Dropdown);\n\n      this.$element = element;\n      this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Dropdown');\n      Foundation.Keyboard.register('Dropdown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close',\n        'TAB': 'tab_forward',\n        'SHIFT_TAB': 'tab_backward'\n      });\n    }\n\n    /**\n     * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\n     * @function\n     * @private\n     */\n\n\n    Dropdown.prototype._init = function () {\n      function _init() {\n        var $id = this.$element.attr('id');\n\n        this.$anchor = $('[data-toggle=\"' + $id + '\"]') || $('[data-open=\"' + $id + '\"]');\n        this.$anchor.attr({\n          'aria-controls': $id,\n          'data-is-focus': false,\n          'data-yeti-box': $id,\n          'aria-haspopup': true,\n          'aria-expanded': false\n\n        });\n\n        this.options.positionClass = this.getPositionClass();\n        this.counter = 4;\n        this.usedPositions = [];\n        this.$element.attr({\n          'aria-hidden': 'true',\n          'data-yeti-box': $id,\n          'data-resize': $id,\n          'aria-labelledby': this.$anchor[0].id || Foundation.GetYoDigits(6, 'dd-anchor')\n        });\n        this._events();\n      }\n\n      return _init;\n    }();\n\n    /**\n     * Helper function to determine current orientation of dropdown pane.\n     * @function\n     * @returns {String} position - string value of a position class.\n     */\n\n\n    Dropdown.prototype.getPositionClass = function () {\n      function getPositionClass() {\n        var verticalPosition = this.$element[0].className.match(/(top|left|right|bottom)/g);\n        verticalPosition = verticalPosition ? verticalPosition[0] : '';\n        var horizontalPosition = /float-(\\S+)\\s/.exec(this.$anchor[0].className);\n        horizontalPosition = horizontalPosition ? horizontalPosition[1] : '';\n        var position = horizontalPosition ? horizontalPosition + ' ' + verticalPosition : verticalPosition;\n        return position;\n      }\n\n      return getPositionClass;\n    }();\n\n    /**\n     * Adjusts the dropdown panes orientation by adding/removing positioning classes.\n     * @function\n     * @private\n     * @param {String} position - position class to remove.\n     */\n\n\n    Dropdown.prototype._reposition = function () {\n      function _reposition(position) {\n        this.usedPositions.push(position ? position : 'bottom');\n        //default, try switching to opposite side\n        if (!position && this.usedPositions.indexOf('top') < 0) {\n          this.$element.addClass('top');\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n          this.$element.removeClass(position);\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n          this.$element.removeClass(position).addClass('right');\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n          this.$element.removeClass(position).addClass('left');\n        }\n\n        //if default change didn't work, try bottom or left first\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.addClass('left');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.removeClass(position).addClass('left');\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          }\n          //if nothing cleared, set to bottom\n          else {\n              this.$element.removeClass(position);\n            }\n        this.classChanged = true;\n        this.counter--;\n      }\n\n      return _reposition;\n    }();\n\n    /**\n     * Sets the position and orientation of the dropdown pane, checks for collisions.\n     * Recursively calls itself if a collision is detected, with a new position class.\n     * @function\n     * @private\n     */\n\n\n    Dropdown.prototype._setPosition = function () {\n      function _setPosition() {\n        if (this.$anchor.attr('aria-expanded') === 'false') {\n          return false;\n        }\n        var position = this.getPositionClass(),\n            $eleDims = Foundation.Box.GetDimensions(this.$element),\n            $anchorDims = Foundation.Box.GetDimensions(this.$anchor),\n            _this = this,\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n            param = direction === 'top' ? 'height' : 'width',\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset;\n\n        if ($eleDims.width >= $eleDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.$element)) {\n          this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            'width': $eleDims.windowDims.width - this.options.hOffset * 2,\n            'height': 'auto'\n          });\n          this.classChanged = true;\n          return false;\n        }\n\n        this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, position, this.options.vOffset, this.options.hOffset));\n\n        while (!Foundation.Box.ImNotTouchingYou(this.$element, false, true) && this.counter) {\n          this._reposition(position);\n          this._setPosition();\n        }\n      }\n\n      return _setPosition;\n    }();\n\n    /**\n     * Adds event listeners to the element utilizing the triggers utility library.\n     * @function\n     * @private\n     */\n\n\n    Dropdown.prototype._events = function () {\n      function _events() {\n        var _this = this;\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': this.close.bind(this),\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': this._setPosition.bind(this)\n        });\n\n        if (this.options.hover) {\n          this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function () {\n              _this.open();\n              _this.$anchor.data('hover', true);\n            }, _this.options.hoverDelay);\n          }).on('mouseleave.zf.dropdown', function () {\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function () {\n              _this.close();\n              _this.$anchor.data('hover', false);\n            }, _this.options.hoverDelay);\n          });\n          if (this.options.hoverPane) {\n            this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n            }).on('mouseleave.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function () {\n                _this.close();\n                _this.$anchor.data('hover', false);\n              }, _this.options.hoverDelay);\n            });\n          }\n        }\n        this.$anchor.add(this.$element).on('keydown.zf.dropdown', function (e) {\n\n          var $target = $(this),\n              visibleFocusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n\n          Foundation.Keyboard.handleKey(e, 'Dropdown', {\n            tab_forward: function () {\n              function tab_forward() {\n                if (_this.$element.find(':focus').is(visibleFocusableElements.eq(-1))) {\n                  // left modal downwards, setting focus to first element\n                  if (_this.options.trapFocus) {\n                    // if focus shall be trapped\n                    visibleFocusableElements.eq(0).focus();\n                    e.preventDefault();\n                  } else {\n                    // if focus is not trapped, close dropdown on focus out\n                    _this.close();\n                  }\n                }\n              }\n\n              return tab_forward;\n            }(),\n            tab_backward: function () {\n              function tab_backward() {\n                if (_this.$element.find(':focus').is(visibleFocusableElements.eq(0)) || _this.$element.is(':focus')) {\n                  // left modal upwards, setting focus to last element\n                  if (_this.options.trapFocus) {\n                    // if focus shall be trapped\n                    visibleFocusableElements.eq(-1).focus();\n                    e.preventDefault();\n                  } else {\n                    // if focus is not trapped, close dropdown on focus out\n                    _this.close();\n                  }\n                }\n              }\n\n              return tab_backward;\n            }(),\n            open: function () {\n              function open() {\n                if ($target.is(_this.$anchor)) {\n                  _this.open();\n                  _this.$element.attr('tabindex', -1).focus();\n                  e.preventDefault();\n                }\n              }\n\n              return open;\n            }(),\n            close: function () {\n              function close() {\n                _this.close();\n                _this.$anchor.focus();\n              }\n\n              return close;\n            }()\n          });\n        });\n      }\n\n      return _events;\n    }();\n\n    /**\n     * Adds an event handler to the body to close any dropdowns on a click.\n     * @function\n     * @private\n     */\n\n\n    Dropdown.prototype._addBodyHandler = function () {\n      function _addBodyHandler() {\n        var $body = $(document.body).not(this.$element),\n            _this = this;\n        $body.off('click.zf.dropdown').on('click.zf.dropdown', function (e) {\n          if (_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\n            return;\n          }\n          if (_this.$element.find(e.target).length) {\n            return;\n          }\n          _this.close();\n          $body.off('click.zf.dropdown');\n        });\n      }\n\n      return _addBodyHandler;\n    }();\n\n    /**\n     * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\n     * @function\n     * @fires Dropdown#closeme\n     * @fires Dropdown#show\n     */\n\n\n    Dropdown.prototype.open = function () {\n      function open() {\n        // var _this = this;\n        /**\n         * Fires to close other open dropdowns\n         * @event Dropdown#closeme\n         */\n        this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\n        this.$anchor.addClass('hover').attr({ 'aria-expanded': true });\n        // this.$element/*.show()*/;\n        this._setPosition();\n        this.$element.addClass('is-open').attr({ 'aria-hidden': false });\n\n        if (this.options.autoFocus) {\n          var $focusable = Foundation.Keyboard.findFocusable(this.$element);\n          if ($focusable.length) {\n            $focusable.eq(0).focus();\n          }\n        }\n\n        if (this.options.closeOnClick) {\n          this._addBodyHandler();\n        }\n\n        /**\n         * Fires once the dropdown is visible.\n         * @event Dropdown#show\n         */\n        this.$element.trigger('show.zf.dropdown', [this.$element]);\n      }\n\n      return open;\n    }();\n\n    /**\n     * Closes the open dropdown pane.\n     * @function\n     * @fires Dropdown#hide\n     */\n\n\n    Dropdown.prototype.close = function () {\n      function close() {\n        if (!this.$element.hasClass('is-open')) {\n          return false;\n        }\n        this.$element.removeClass('is-open').attr({ 'aria-hidden': true });\n\n        this.$anchor.removeClass('hover').attr('aria-expanded', false);\n\n        if (this.classChanged) {\n          var curPositionClass = this.getPositionClass();\n          if (curPositionClass) {\n            this.$element.removeClass(curPositionClass);\n          }\n          this.$element.addClass(this.options.positionClass)\n          /*.hide()*/.css({ height: '', width: '' });\n          this.classChanged = false;\n          this.counter = 4;\n          this.usedPositions.length = 0;\n        }\n        this.$element.trigger('hide.zf.dropdown', [this.$element]);\n      }\n\n      return close;\n    }();\n\n    /**\n     * Toggles the dropdown pane's visibility.\n     * @function\n     */\n\n\n    Dropdown.prototype.toggle = function () {\n      function toggle() {\n        if (this.$element.hasClass('is-open')) {\n          if (this.$anchor.data('hover')) return;\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n\n      return toggle;\n    }();\n\n    /**\n     * Destroys the dropdown.\n     * @function\n     */\n\n\n    Dropdown.prototype.destroy = function () {\n      function destroy() {\n        this.$element.off('.zf.trigger').hide();\n        this.$anchor.off('.zf.dropdown');\n\n        Foundation.unregisterPlugin(this);\n      }\n\n      return destroy;\n    }();\n\n    return Dropdown;\n  }();\n\n  Dropdown.defaults = {\n    /**\n     * Amount of time to delay opening a submenu on hover event.\n     * @option\n     * @example 250\n     */\n    hoverDelay: 250,\n    /**\n     * Allow submenus to open on hover events\n     * @option\n     * @example false\n     */\n    hover: false,\n    /**\n     * Don't close dropdown when hovering over dropdown pane\n     * @option\n     * @example true\n     */\n    hoverPane: false,\n    /**\n     * Number of pixels between the dropdown pane and the triggering element on open.\n     * @option\n     * @example 1\n     */\n    vOffset: 1,\n    /**\n     * Number of pixels between the dropdown pane and the triggering element on open.\n     * @option\n     * @example 1\n     */\n    hOffset: 1,\n    /**\n     * Class applied to adjust open position. JS will test and fill this in.\n     * @option\n     * @example 'top'\n     */\n    positionClass: '',\n    /**\n     * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\n     * @option\n     * @example false\n     */\n    trapFocus: false,\n    /**\n     * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\n     * @option\n     * @example true\n     */\n    autoFocus: false,\n    /**\n     * Allows a click on the body to close the dropdown.\n     * @option\n     * @example false\n     */\n    closeOnClick: false\n  };\n\n  // Window exports\n  Foundation.plugin(Dropdown, 'Dropdown');\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/js/foundation.dropdown.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/js/foundation.dropdown.js.map","sourcesContent":["'use strict';\n\n!function($) {\n\n/**\n * Dropdown module.\n * @module foundation.dropdown\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.triggers\n */\n\nclass Dropdown {\n  /**\n   * Creates a new instance of a dropdown.\n   * @class\n   * @param {jQuery} element - jQuery object to make into a dropdown.\n   *        Object should be of the dropdown panel, rather than its anchor.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\n    this._init();\n\n    Foundation.registerPlugin(this, 'Dropdown');\n    Foundation.Keyboard.register('Dropdown', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ESCAPE': 'close',\n      'TAB': 'tab_forward',\n      'SHIFT_TAB': 'tab_backward'\n    });\n  }\n\n  /**\n   * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\n   * @function\n   * @private\n   */\n  _init() {\n    var $id = this.$element.attr('id');\n\n    this.$anchor = $(`[data-toggle=\"${$id}\"]`) || $(`[data-open=\"${$id}\"]`);\n    this.$anchor.attr({\n      'aria-controls': $id,\n      'data-is-focus': false,\n      'data-yeti-box': $id,\n      'aria-haspopup': true,\n      'aria-expanded': false\n\n    });\n\n    this.options.positionClass = this.getPositionClass();\n    this.counter = 4;\n    this.usedPositions = [];\n    this.$element.attr({\n      'aria-hidden': 'true',\n      'data-yeti-box': $id,\n      'data-resize': $id,\n      'aria-labelledby': this.$anchor[0].id || Foundation.GetYoDigits(6, 'dd-anchor')\n    });\n    this._events();\n  }\n\n  /**\n   * Helper function to determine current orientation of dropdown pane.\n   * @function\n   * @returns {String} position - string value of a position class.\n   */\n  getPositionClass() {\n    var verticalPosition = this.$element[0].className.match(/(top|left|right|bottom)/g);\n        verticalPosition = verticalPosition ? verticalPosition[0] : '';\n    var horizontalPosition = /float-(\\S+)\\s/.exec(this.$anchor[0].className);\n        horizontalPosition = horizontalPosition ? horizontalPosition[1] : '';\n    var position = horizontalPosition ? horizontalPosition + ' ' + verticalPosition : verticalPosition;\n    return position;\n  }\n\n  /**\n   * Adjusts the dropdown panes orientation by adding/removing positioning classes.\n   * @function\n   * @private\n   * @param {String} position - position class to remove.\n   */\n  _reposition(position) {\n    this.usedPositions.push(position ? position : 'bottom');\n    //default, try switching to opposite side\n    if(!position && (this.usedPositions.indexOf('top') < 0)){\n      this.$element.addClass('top');\n    }else if(position === 'top' && (this.usedPositions.indexOf('bottom') < 0)){\n      this.$element.removeClass(position);\n    }else if(position === 'left' && (this.usedPositions.indexOf('right') < 0)){\n      this.$element.removeClass(position)\n          .addClass('right');\n    }else if(position === 'right' && (this.usedPositions.indexOf('left') < 0)){\n      this.$element.removeClass(position)\n          .addClass('left');\n    }\n\n    //if default change didn't work, try bottom or left first\n    else if(!position && (this.usedPositions.indexOf('top') > -1) && (this.usedPositions.indexOf('left') < 0)){\n      this.$element.addClass('left');\n    }else if(position === 'top' && (this.usedPositions.indexOf('bottom') > -1) && (this.usedPositions.indexOf('left') < 0)){\n      this.$element.removeClass(position)\n          .addClass('left');\n    }else if(position === 'left' && (this.usedPositions.indexOf('right') > -1) && (this.usedPositions.indexOf('bottom') < 0)){\n      this.$element.removeClass(position);\n    }else if(position === 'right' && (this.usedPositions.indexOf('left') > -1) && (this.usedPositions.indexOf('bottom') < 0)){\n      this.$element.removeClass(position);\n    }\n    //if nothing cleared, set to bottom\n    else{\n      this.$element.removeClass(position);\n    }\n    this.classChanged = true;\n    this.counter--;\n  }\n\n  /**\n   * Sets the position and orientation of the dropdown pane, checks for collisions.\n   * Recursively calls itself if a collision is detected, with a new position class.\n   * @function\n   * @private\n   */\n  _setPosition() {\n    if(this.$anchor.attr('aria-expanded') === 'false'){ return false; }\n    var position = this.getPositionClass(),\n        $eleDims = Foundation.Box.GetDimensions(this.$element),\n        $anchorDims = Foundation.Box.GetDimensions(this.$anchor),\n        _this = this,\n        direction = (position === 'left' ? 'left' : ((position === 'right') ? 'left' : 'top')),\n        param = (direction === 'top') ? 'height' : 'width',\n        offset = (param === 'height') ? this.options.vOffset : this.options.hOffset;\n\n\n\n    if(($eleDims.width >= $eleDims.windowDims.width) || (!this.counter && !Foundation.Box.ImNotTouchingYou(this.$element))){\n      this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n        'width': $eleDims.windowDims.width - (this.options.hOffset * 2),\n        'height': 'auto'\n      });\n      this.classChanged = true;\n      return false;\n    }\n\n    this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, position, this.options.vOffset, this.options.hOffset));\n\n    while(!Foundation.Box.ImNotTouchingYou(this.$element, false, true) && this.counter){\n      this._reposition(position);\n      this._setPosition();\n    }\n  }\n\n  /**\n   * Adds event listeners to the element utilizing the triggers utility library.\n   * @function\n   * @private\n   */\n  _events() {\n    var _this = this;\n    this.$element.on({\n      'open.zf.trigger': this.open.bind(this),\n      'close.zf.trigger': this.close.bind(this),\n      'toggle.zf.trigger': this.toggle.bind(this),\n      'resizeme.zf.trigger': this._setPosition.bind(this)\n    });\n\n    if(this.options.hover){\n      this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown')\n          .on('mouseenter.zf.dropdown', function(){\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function(){\n              _this.open();\n              _this.$anchor.data('hover', true);\n            }, _this.options.hoverDelay);\n          }).on('mouseleave.zf.dropdown', function(){\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function(){\n              _this.close();\n              _this.$anchor.data('hover', false);\n            }, _this.options.hoverDelay);\n          });\n      if(this.options.hoverPane){\n        this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown')\n            .on('mouseenter.zf.dropdown', function(){\n              clearTimeout(_this.timeout);\n            }).on('mouseleave.zf.dropdown', function(){\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function(){\n                _this.close();\n                _this.$anchor.data('hover', false);\n              }, _this.options.hoverDelay);\n            });\n      }\n    }\n    this.$anchor.add(this.$element).on('keydown.zf.dropdown', function(e) {\n\n      var $target = $(this),\n        visibleFocusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n\n      Foundation.Keyboard.handleKey(e, 'Dropdown', {\n        tab_forward: function() {\n          if (_this.$element.find(':focus').is(visibleFocusableElements.eq(-1))) { // left modal downwards, setting focus to first element\n            if (_this.options.trapFocus) { // if focus shall be trapped\n              visibleFocusableElements.eq(0).focus();\n              e.preventDefault();\n            } else { // if focus is not trapped, close dropdown on focus out\n              _this.close();\n            }\n          }\n        },\n        tab_backward: function() {\n          if (_this.$element.find(':focus').is(visibleFocusableElements.eq(0)) || _this.$element.is(':focus')) { // left modal upwards, setting focus to last element\n            if (_this.options.trapFocus) { // if focus shall be trapped\n              visibleFocusableElements.eq(-1).focus();\n              e.preventDefault();\n            } else { // if focus is not trapped, close dropdown on focus out\n              _this.close();\n            }\n          }\n        },\n        open: function() {\n          if ($target.is(_this.$anchor)) {\n            _this.open();\n            _this.$element.attr('tabindex', -1).focus();\n            e.preventDefault();\n          }\n        },\n        close: function() {\n          _this.close();\n          _this.$anchor.focus();\n        }\n      });\n    });\n  }\n\n  /**\n   * Adds an event handler to the body to close any dropdowns on a click.\n   * @function\n   * @private\n   */\n  _addBodyHandler() {\n     var $body = $(document.body).not(this.$element),\n         _this = this;\n     $body.off('click.zf.dropdown')\n          .on('click.zf.dropdown', function(e){\n            if(_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\n              return;\n            }\n            if(_this.$element.find(e.target).length) {\n              return;\n            }\n            _this.close();\n            $body.off('click.zf.dropdown');\n          });\n  }\n\n  /**\n   * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\n   * @function\n   * @fires Dropdown#closeme\n   * @fires Dropdown#show\n   */\n  open() {\n    // var _this = this;\n    /**\n     * Fires to close other open dropdowns\n     * @event Dropdown#closeme\n     */\n    this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\n    this.$anchor.addClass('hover')\n        .attr({'aria-expanded': true});\n    // this.$element/*.show()*/;\n    this._setPosition();\n    this.$element.addClass('is-open')\n        .attr({'aria-hidden': false});\n\n    if(this.options.autoFocus){\n      var $focusable = Foundation.Keyboard.findFocusable(this.$element);\n      if($focusable.length){\n        $focusable.eq(0).focus();\n      }\n    }\n\n    if(this.options.closeOnClick){ this._addBodyHandler(); }\n\n    /**\n     * Fires once the dropdown is visible.\n     * @event Dropdown#show\n     */\n    this.$element.trigger('show.zf.dropdown', [this.$element]);\n  }\n\n  /**\n   * Closes the open dropdown pane.\n   * @function\n   * @fires Dropdown#hide\n   */\n  close() {\n    if(!this.$element.hasClass('is-open')){\n      return false;\n    }\n    this.$element.removeClass('is-open')\n        .attr({'aria-hidden': true});\n\n    this.$anchor.removeClass('hover')\n        .attr('aria-expanded', false);\n\n    if(this.classChanged){\n      var curPositionClass = this.getPositionClass();\n      if(curPositionClass){\n        this.$element.removeClass(curPositionClass);\n      }\n      this.$element.addClass(this.options.positionClass)\n          /*.hide()*/.css({height: '', width: ''});\n      this.classChanged = false;\n      this.counter = 4;\n      this.usedPositions.length = 0;\n    }\n    this.$element.trigger('hide.zf.dropdown', [this.$element]);\n  }\n\n  /**\n   * Toggles the dropdown pane's visibility.\n   * @function\n   */\n  toggle() {\n    if(this.$element.hasClass('is-open')){\n      if(this.$anchor.data('hover')) return;\n      this.close();\n    }else{\n      this.open();\n    }\n  }\n\n  /**\n   * Destroys the dropdown.\n   * @function\n   */\n  destroy() {\n    this.$element.off('.zf.trigger').hide();\n    this.$anchor.off('.zf.dropdown');\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nDropdown.defaults = {\n  /**\n   * Amount of time to delay opening a submenu on hover event.\n   * @option\n   * @example 250\n   */\n  hoverDelay: 250,\n  /**\n   * Allow submenus to open on hover events\n   * @option\n   * @example false\n   */\n  hover: false,\n  /**\n   * Don't close dropdown when hovering over dropdown pane\n   * @option\n   * @example true\n   */\n  hoverPane: false,\n  /**\n   * Number of pixels between the dropdown pane and the triggering element on open.\n   * @option\n   * @example 1\n   */\n  vOffset: 1,\n  /**\n   * Number of pixels between the dropdown pane and the triggering element on open.\n   * @option\n   * @example 1\n   */\n  hOffset: 1,\n  /**\n   * Class applied to adjust open position. JS will test and fill this in.\n   * @option\n   * @example 'top'\n   */\n  positionClass: '',\n  /**\n   * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\n   * @option\n   * @example false\n   */\n  trapFocus: false,\n  /**\n   * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\n   * @option\n   * @example true\n   */\n  autoFocus: false,\n  /**\n   * Allows a click on the body to close the dropdown.\n   * @option\n   * @example false\n   */\n  closeOnClick: false\n}\n\n// Window exports\nFoundation.plugin(Dropdown, 'Dropdown');\n\n}(jQuery);\n"]},"hash":"89ce015f4ad02fe051c15d589ae3323402d92f0c"}
