{"metadata":{"usedHelpers":["classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/js/foundation.dropdownMenu.js","filenameRelative":"/packages/zurb:foundation-sites/js/foundation.dropdownMenu.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/js/foundation.dropdownMenu.js.map","sourceFileName":"/packages/zurb:foundation-sites/js/foundation.dropdownMenu.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.dropdownMenu"},"ignored":false,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n!function ($) {\n\n  /**\n   * DropdownMenu module.\n   * @module foundation.dropdown-menu\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.nest\n   */\n\n  var DropdownMenu = function () {\n    /**\n     * Creates a new instance of DropdownMenu.\n     * @class\n     * @fires DropdownMenu#init\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function DropdownMenu(element, options) {\n      (0, _classCallCheck3['default'])(this, DropdownMenu);\n\n      this.$element = element;\n      this.options = $.extend({}, DropdownMenu.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'dropdown');\n      this._init();\n\n      Foundation.registerPlugin(this, 'DropdownMenu');\n      Foundation.Keyboard.register('DropdownMenu', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'previous',\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\n     * Initializes the plugin, and calls _prepareMenu\n     * @private\n     * @function\n     */\n\n\n    DropdownMenu.prototype._init = function () {\n      function _init() {\n        var subs = this.$element.find('li.is-dropdown-submenu-parent');\n        this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');\n\n        this.$menuItems = this.$element.find('[role=\"menuitem\"]');\n        this.$tabs = this.$element.children('[role=\"menuitem\"]');\n        this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);\n\n        if (this.$element.hasClass(this.options.rightClass) || this.options.alignment === 'right' || Foundation.rtl() || this.$element.parents('.top-bar-right').is('*')) {\n          this.options.alignment = 'right';\n          subs.addClass('opens-left');\n        } else {\n          subs.addClass('opens-right');\n        }\n        this.changed = false;\n        this._events();\n      }\n\n      return _init;\n    }();\n\n    /**\n     * Adds event listeners to elements within the menu\n     * @private\n     * @function\n     */\n\n    DropdownMenu.prototype._events = function () {\n      function _events() {\n        var _this = this,\n            hasTouch = 'ontouchstart' in window || typeof window.ontouchstart !== 'undefined',\n            parClass = 'is-dropdown-submenu-parent';\n\n        // used for onClick and in the keyboard handlers\n        var handleClickFn = function () {\n          function handleClickFn(e) {\n            var $elem = $(e.target).parentsUntil('ul', '.' + parClass),\n                hasSub = $elem.hasClass(parClass),\n                hasClicked = $elem.attr('data-is-click') === 'true',\n                $sub = $elem.children('.is-dropdown-submenu');\n\n            if (hasSub) {\n              if (hasClicked) {\n                if (!_this.options.closeOnClick || !_this.options.clickOpen && !hasTouch || _this.options.forceFollow && hasTouch) {\n                  return;\n                } else {\n                  e.stopImmediatePropagation();\n                  e.preventDefault();\n                  _this._hide($elem);\n                }\n              } else {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                _this._show($elem.children('.is-dropdown-submenu'));\n                $elem.add($elem.parentsUntil(_this.$element, '.' + parClass)).attr('data-is-click', true);\n              }\n            } else {\n              return;\n            }\n          }\n\n          return handleClickFn;\n        }();\n\n        if (this.options.clickOpen || hasTouch) {\n          this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu', handleClickFn);\n        }\n\n        if (!this.options.disableHover) {\n          this.$menuItems.on('mouseenter.zf.dropdownmenu', function (e) {\n            var $elem = $(this),\n                hasSub = $elem.hasClass(parClass);\n\n            if (hasSub) {\n              clearTimeout(_this.delay);\n              _this.delay = setTimeout(function () {\n                _this._show($elem.children('.is-dropdown-submenu'));\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.dropdownmenu', function (e) {\n            var $elem = $(this),\n                hasSub = $elem.hasClass(parClass);\n            if (hasSub && _this.options.autoclose) {\n              if ($elem.attr('data-is-click') === 'true' && _this.options.clickOpen) {\n                return false;\n              }\n\n              clearTimeout(_this.delay);\n              _this.delay = setTimeout(function () {\n                _this._hide($elem);\n              }, _this.options.closingTime);\n            }\n          });\n        }\n        this.$menuItems.on('keydown.zf.dropdownmenu', function (e) {\n          var $element = $(e.target).parentsUntil('ul', '[role=\"menuitem\"]'),\n              isTab = _this.$tabs.index($element) > -1,\n              $elements = isTab ? _this.$tabs : $element.siblings('li').add($element),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(i - 1);\n              $nextElement = $elements.eq(i + 1);\n              return;\n            }\n          });\n\n          var nextSibling = function () {\n            function nextSibling() {\n              if (!$element.is(':last-child')) {\n                $nextElement.children('a:first').focus();\n                e.preventDefault();\n              }\n            }\n\n            return nextSibling;\n          }(),\n              prevSibling = function () {\n            function prevSibling() {\n              $prevElement.children('a:first').focus();\n              e.preventDefault();\n            }\n\n            return prevSibling;\n          }(),\n              openSub = function () {\n            function openSub() {\n              var $sub = $element.children('ul.is-dropdown-submenu');\n              if ($sub.length) {\n                _this._show($sub);\n                $element.find('li > a:first').focus();\n                e.preventDefault();\n              } else {\n                return;\n              }\n            }\n\n            return openSub;\n          }(),\n              closeSub = function () {\n            function closeSub() {\n              //if ($element.is(':first-child')) {\n              var close = $element.parent('ul').parent('li');\n              close.children('a:first').focus();\n              _this._hide(close);\n              e.preventDefault();\n              //}\n            }\n\n            return closeSub;\n          }();\n          var functions = {\n            open: openSub,\n            close: function () {\n              function close() {\n                _this._hide(_this.$element);\n                _this.$menuItems.find('a:first').focus(); // focus to first element\n                e.preventDefault();\n              }\n\n              return close;\n            }(),\n            handled: function () {\n              function handled() {\n                e.stopImmediatePropagation();\n              }\n\n              return handled;\n            }()\n          };\n\n          if (isTab) {\n            if (_this.$element.hasClass(_this.options.verticalClass)) {\n              // vertical menu\n              if (_this.options.alignment === 'left') {\n                // left aligned\n                $.extend(functions, {\n                  down: nextSibling,\n                  up: prevSibling,\n                  next: openSub,\n                  previous: closeSub\n                });\n              } else {\n                // right aligned\n                $.extend(functions, {\n                  down: nextSibling,\n                  up: prevSibling,\n                  next: closeSub,\n                  previous: openSub\n                });\n              }\n            } else {\n              // horizontal menu\n              $.extend(functions, {\n                next: nextSibling,\n                previous: prevSibling,\n                down: openSub,\n                up: closeSub\n              });\n            }\n          } else {\n            // not tabs -> one sub\n            if (_this.options.alignment === 'left') {\n              // left aligned\n              $.extend(functions, {\n                next: openSub,\n                previous: closeSub,\n                down: nextSibling,\n                up: prevSibling\n              });\n            } else {\n              // right aligned\n              $.extend(functions, {\n                next: closeSub,\n                previous: openSub,\n                down: nextSibling,\n                up: prevSibling\n              });\n            }\n          }\n          Foundation.Keyboard.handleKey(e, 'DropdownMenu', functions);\n        });\n      }\n\n      return _events;\n    }();\n\n    /**\n     * Adds an event handler to the body to close any dropdowns on a click.\n     * @function\n     * @private\n     */\n\n\n    DropdownMenu.prototype._addBodyHandler = function () {\n      function _addBodyHandler() {\n        var $body = $(document.body),\n            _this = this;\n        $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu').on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu', function (e) {\n          var $link = _this.$element.find(e.target);\n          if ($link.length) {\n            return;\n          }\n\n          _this._hide();\n          $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');\n        });\n      }\n\n      return _addBodyHandler;\n    }();\n\n    /**\n     * Opens a dropdown pane, and checks for collisions first.\n     * @param {jQuery} $sub - ul element that is a submenu to show\n     * @function\n     * @private\n     * @fires DropdownMenu#show\n     */\n\n\n    DropdownMenu.prototype._show = function () {\n      function _show($sub) {\n        var idx = this.$tabs.index(this.$tabs.filter(function (i, el) {\n          return $(el).find($sub).length > 0;\n        }));\n        var $sibs = $sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');\n        this._hide($sibs, idx);\n        $sub.css('visibility', 'hidden').addClass('js-dropdown-active').attr({ 'aria-hidden': false }).parent('li.is-dropdown-submenu-parent').addClass('is-active').attr({ 'aria-expanded': true });\n        var clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n        if (!clear) {\n          var oldClass = this.options.alignment === 'left' ? '-right' : '-left',\n              $parentLi = $sub.parent('.is-dropdown-submenu-parent');\n          $parentLi.removeClass('opens' + oldClass).addClass('opens-' + this.options.alignment);\n          clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n          if (!clear) {\n            $parentLi.removeClass('opens-' + this.options.alignment).addClass('opens-inner');\n          }\n          this.changed = true;\n        }\n        $sub.css('visibility', '');\n        if (this.options.closeOnClick) {\n          this._addBodyHandler();\n        }\n        /**\n         * Fires when the new dropdown pane is visible.\n         * @event DropdownMenu#show\n         */\n        this.$element.trigger('show.zf.dropdownmenu', [$sub]);\n      }\n\n      return _show;\n    }();\n\n    /**\n     * Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\n     * @function\n     * @param {jQuery} $elem - element with a submenu to hide\n     * @param {Number} idx - index of the $tabs collection to hide\n     * @private\n     */\n\n\n    DropdownMenu.prototype._hide = function () {\n      function _hide($elem, idx) {\n        var $toClose;\n        if ($elem && $elem.length) {\n          $toClose = $elem;\n        } else if (idx !== undefined) {\n          $toClose = this.$tabs.not(function (i, el) {\n            return i === idx;\n          });\n        } else {\n          $toClose = this.$element;\n        }\n        var somethingToClose = $toClose.hasClass('is-active') || $toClose.find('.is-active').length > 0;\n\n        if (somethingToClose) {\n          $toClose.find('li.is-active').add($toClose).attr({\n            'aria-expanded': false,\n            'data-is-click': false\n          }).removeClass('is-active');\n\n          $toClose.find('ul.js-dropdown-active').attr({\n            'aria-hidden': true\n          }).removeClass('js-dropdown-active');\n\n          if (this.changed || $toClose.find('opens-inner').length) {\n            var oldClass = this.options.alignment === 'left' ? 'right' : 'left';\n            $toClose.find('li.is-dropdown-submenu-parent').add($toClose).removeClass('opens-inner opens-' + this.options.alignment).addClass('opens-' + oldClass);\n            this.changed = false;\n          }\n          /**\n           * Fires when the open menus are closed.\n           * @event DropdownMenu#hide\n           */\n          this.$element.trigger('hide.zf.dropdownmenu', [$toClose]);\n        }\n      }\n\n      return _hide;\n    }();\n\n    /**\n     * Destroys the plugin.\n     * @function\n     */\n\n\n    DropdownMenu.prototype.destroy = function () {\n      function destroy() {\n        this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click').removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');\n        $(document.body).off('.zf.dropdownmenu');\n        Foundation.Nest.Burn(this.$element, 'dropdown');\n        Foundation.unregisterPlugin(this);\n      }\n\n      return destroy;\n    }();\n\n    return DropdownMenu;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  DropdownMenu.defaults = {\n    /**\n     * Disallows hover events from opening submenus\n     * @option\n     * @example false\n     */\n    disableHover: false,\n    /**\n     * Allow a submenu to automatically close on a mouseleave event, if not clicked open.\n     * @option\n     * @example true\n     */\n    autoclose: true,\n    /**\n     * Amount of time to delay opening a submenu on hover event.\n     * @option\n     * @example 50\n     */\n    hoverDelay: 50,\n    /**\n     * Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\n     * @option\n     * @example true\n     */\n    clickOpen: false,\n    /**\n     * Amount of time to delay closing a submenu on a mouseleave event.\n     * @option\n     * @example 500\n     */\n\n    closingTime: 500,\n    /**\n     * Position of the menu relative to what direction the submenus should open. Handled by JS.\n     * @option\n     * @example 'left'\n     */\n    alignment: 'left',\n    /**\n     * Allow clicks on the body to close any open submenus.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\n     * @option\n     * @example 'vertical'\n     */\n    verticalClass: 'vertical',\n    /**\n     * Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\n     * @option\n     * @example 'align-right'\n     */\n    rightClass: 'align-right',\n    /**\n     * Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\n     * @option\n     * @example false\n     */\n    forceFollow: true\n  };\n\n  // Window exports\n  Foundation.plugin(DropdownMenu, 'DropdownMenu');\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/js/foundation.dropdownMenu.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/js/foundation.dropdownMenu.js.map","sourcesContent":["'use strict';\n\n!function($) {\n\n/**\n * DropdownMenu module.\n * @module foundation.dropdown-menu\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.nest\n */\n\nclass DropdownMenu {\n  /**\n   * Creates a new instance of DropdownMenu.\n   * @class\n   * @fires DropdownMenu#init\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, DropdownMenu.defaults, this.$element.data(), options);\n\n    Foundation.Nest.Feather(this.$element, 'dropdown');\n    this._init();\n\n    Foundation.registerPlugin(this, 'DropdownMenu');\n    Foundation.Keyboard.register('DropdownMenu', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ARROW_RIGHT': 'next',\n      'ARROW_UP': 'up',\n      'ARROW_DOWN': 'down',\n      'ARROW_LEFT': 'previous',\n      'ESCAPE': 'close'\n    });\n  }\n\n  /**\n   * Initializes the plugin, and calls _prepareMenu\n   * @private\n   * @function\n   */\n  _init() {\n    var subs = this.$element.find('li.is-dropdown-submenu-parent');\n    this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');\n\n    this.$menuItems = this.$element.find('[role=\"menuitem\"]');\n    this.$tabs = this.$element.children('[role=\"menuitem\"]');\n    this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);\n\n    if (this.$element.hasClass(this.options.rightClass) || this.options.alignment === 'right' || Foundation.rtl() || this.$element.parents('.top-bar-right').is('*')) {\n      this.options.alignment = 'right';\n      subs.addClass('opens-left');\n    } else {\n      subs.addClass('opens-right');\n    }\n    this.changed = false;\n    this._events();\n  };\n  /**\n   * Adds event listeners to elements within the menu\n   * @private\n   * @function\n   */\n  _events() {\n    var _this = this,\n        hasTouch = 'ontouchstart' in window || (typeof window.ontouchstart !== 'undefined'),\n        parClass = 'is-dropdown-submenu-parent';\n\n    // used for onClick and in the keyboard handlers\n    var handleClickFn = function(e) {\n      var $elem = $(e.target).parentsUntil('ul', `.${parClass}`),\n          hasSub = $elem.hasClass(parClass),\n          hasClicked = $elem.attr('data-is-click') === 'true',\n          $sub = $elem.children('.is-dropdown-submenu');\n\n      if (hasSub) {\n        if (hasClicked) {\n          if (!_this.options.closeOnClick || (!_this.options.clickOpen && !hasTouch) || (_this.options.forceFollow && hasTouch)) { return; }\n          else {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n            _this._hide($elem);\n          }\n        } else {\n          e.preventDefault();\n          e.stopImmediatePropagation();\n          _this._show($elem.children('.is-dropdown-submenu'));\n          $elem.add($elem.parentsUntil(_this.$element, `.${parClass}`)).attr('data-is-click', true);\n        }\n      } else { return; }\n    };\n\n    if (this.options.clickOpen || hasTouch) {\n      this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu', handleClickFn);\n    }\n\n    if (!this.options.disableHover) {\n      this.$menuItems.on('mouseenter.zf.dropdownmenu', function(e) {\n        var $elem = $(this),\n            hasSub = $elem.hasClass(parClass);\n\n        if (hasSub) {\n          clearTimeout(_this.delay);\n          _this.delay = setTimeout(function() {\n            _this._show($elem.children('.is-dropdown-submenu'));\n          }, _this.options.hoverDelay);\n        }\n      }).on('mouseleave.zf.dropdownmenu', function(e) {\n        var $elem = $(this),\n            hasSub = $elem.hasClass(parClass);\n        if (hasSub && _this.options.autoclose) {\n          if ($elem.attr('data-is-click') === 'true' && _this.options.clickOpen) { return false; }\n\n          clearTimeout(_this.delay);\n          _this.delay = setTimeout(function() {\n            _this._hide($elem);\n          }, _this.options.closingTime);\n        }\n      });\n    }\n    this.$menuItems.on('keydown.zf.dropdownmenu', function(e) {\n      var $element = $(e.target).parentsUntil('ul', '[role=\"menuitem\"]'),\n          isTab = _this.$tabs.index($element) > -1,\n          $elements = isTab ? _this.$tabs : $element.siblings('li').add($element),\n          $prevElement,\n          $nextElement;\n\n      $elements.each(function(i) {\n        if ($(this).is($element)) {\n          $prevElement = $elements.eq(i-1);\n          $nextElement = $elements.eq(i+1);\n          return;\n        }\n      });\n\n      var nextSibling = function() {\n        if (!$element.is(':last-child')) {\n          $nextElement.children('a:first').focus();\n          e.preventDefault();\n        }\n      }, prevSibling = function() {\n        $prevElement.children('a:first').focus();\n        e.preventDefault();\n      }, openSub = function() {\n        var $sub = $element.children('ul.is-dropdown-submenu');\n        if ($sub.length) {\n          _this._show($sub);\n          $element.find('li > a:first').focus();\n          e.preventDefault();\n        } else { return; }\n      }, closeSub = function() {\n        //if ($element.is(':first-child')) {\n        var close = $element.parent('ul').parent('li');\n        close.children('a:first').focus();\n        _this._hide(close);\n        e.preventDefault();\n        //}\n      };\n      var functions = {\n        open: openSub,\n        close: function() {\n          _this._hide(_this.$element);\n          _this.$menuItems.find('a:first').focus(); // focus to first element\n          e.preventDefault();\n        },\n        handled: function() {\n          e.stopImmediatePropagation();\n        }\n      };\n\n      if (isTab) {\n        if (_this.$element.hasClass(_this.options.verticalClass)) { // vertical menu\n          if (_this.options.alignment === 'left') { // left aligned\n            $.extend(functions, {\n              down: nextSibling,\n              up: prevSibling,\n              next: openSub,\n              previous: closeSub\n            });\n          } else { // right aligned\n            $.extend(functions, {\n              down: nextSibling,\n              up: prevSibling,\n              next: closeSub,\n              previous: openSub\n            });\n          }\n        } else { // horizontal menu\n          $.extend(functions, {\n            next: nextSibling,\n            previous: prevSibling,\n            down: openSub,\n            up: closeSub\n          });\n        }\n      } else { // not tabs -> one sub\n        if (_this.options.alignment === 'left') { // left aligned\n          $.extend(functions, {\n            next: openSub,\n            previous: closeSub,\n            down: nextSibling,\n            up: prevSibling\n          });\n        } else { // right aligned\n          $.extend(functions, {\n            next: closeSub,\n            previous: openSub,\n            down: nextSibling,\n            up: prevSibling\n          });\n        }\n      }\n      Foundation.Keyboard.handleKey(e, 'DropdownMenu', functions);\n\n    });\n  }\n\n  /**\n   * Adds an event handler to the body to close any dropdowns on a click.\n   * @function\n   * @private\n   */\n  _addBodyHandler() {\n    var $body = $(document.body),\n        _this = this;\n    $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu')\n         .on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu', function(e) {\n           var $link = _this.$element.find(e.target);\n           if ($link.length) { return; }\n\n           _this._hide();\n           $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');\n         });\n  }\n\n  /**\n   * Opens a dropdown pane, and checks for collisions first.\n   * @param {jQuery} $sub - ul element that is a submenu to show\n   * @function\n   * @private\n   * @fires DropdownMenu#show\n   */\n  _show($sub) {\n    var idx = this.$tabs.index(this.$tabs.filter(function(i, el) {\n      return $(el).find($sub).length > 0;\n    }));\n    var $sibs = $sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');\n    this._hide($sibs, idx);\n    $sub.css('visibility', 'hidden').addClass('js-dropdown-active').attr({'aria-hidden': false})\n        .parent('li.is-dropdown-submenu-parent').addClass('is-active')\n        .attr({'aria-expanded': true});\n    var clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n    if (!clear) {\n      var oldClass = this.options.alignment === 'left' ? '-right' : '-left',\n          $parentLi = $sub.parent('.is-dropdown-submenu-parent');\n      $parentLi.removeClass(`opens${oldClass}`).addClass(`opens-${this.options.alignment}`);\n      clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n      if (!clear) {\n        $parentLi.removeClass(`opens-${this.options.alignment}`).addClass('opens-inner');\n      }\n      this.changed = true;\n    }\n    $sub.css('visibility', '');\n    if (this.options.closeOnClick) { this._addBodyHandler(); }\n    /**\n     * Fires when the new dropdown pane is visible.\n     * @event DropdownMenu#show\n     */\n    this.$element.trigger('show.zf.dropdownmenu', [$sub]);\n  }\n\n  /**\n   * Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\n   * @function\n   * @param {jQuery} $elem - element with a submenu to hide\n   * @param {Number} idx - index of the $tabs collection to hide\n   * @private\n   */\n  _hide($elem, idx) {\n    var $toClose;\n    if ($elem && $elem.length) {\n      $toClose = $elem;\n    } else if (idx !== undefined) {\n      $toClose = this.$tabs.not(function(i, el) {\n        return i === idx;\n      });\n    }\n    else {\n      $toClose = this.$element;\n    }\n    var somethingToClose = $toClose.hasClass('is-active') || $toClose.find('.is-active').length > 0;\n\n    if (somethingToClose) {\n      $toClose.find('li.is-active').add($toClose).attr({\n        'aria-expanded': false,\n        'data-is-click': false\n      }).removeClass('is-active');\n\n      $toClose.find('ul.js-dropdown-active').attr({\n        'aria-hidden': true\n      }).removeClass('js-dropdown-active');\n\n      if (this.changed || $toClose.find('opens-inner').length) {\n        var oldClass = this.options.alignment === 'left' ? 'right' : 'left';\n        $toClose.find('li.is-dropdown-submenu-parent').add($toClose)\n                .removeClass(`opens-inner opens-${this.options.alignment}`)\n                .addClass(`opens-${oldClass}`);\n        this.changed = false;\n      }\n      /**\n       * Fires when the open menus are closed.\n       * @event DropdownMenu#hide\n       */\n      this.$element.trigger('hide.zf.dropdownmenu', [$toClose]);\n    }\n  }\n\n  /**\n   * Destroys the plugin.\n   * @function\n   */\n  destroy() {\n    this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click')\n        .removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');\n    $(document.body).off('.zf.dropdownmenu');\n    Foundation.Nest.Burn(this.$element, 'dropdown');\n    Foundation.unregisterPlugin(this);\n  }\n}\n\n/**\n * Default settings for plugin\n */\nDropdownMenu.defaults = {\n  /**\n   * Disallows hover events from opening submenus\n   * @option\n   * @example false\n   */\n  disableHover: false,\n  /**\n   * Allow a submenu to automatically close on a mouseleave event, if not clicked open.\n   * @option\n   * @example true\n   */\n  autoclose: true,\n  /**\n   * Amount of time to delay opening a submenu on hover event.\n   * @option\n   * @example 50\n   */\n  hoverDelay: 50,\n  /**\n   * Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\n   * @option\n   * @example true\n   */\n  clickOpen: false,\n  /**\n   * Amount of time to delay closing a submenu on a mouseleave event.\n   * @option\n   * @example 500\n   */\n\n  closingTime: 500,\n  /**\n   * Position of the menu relative to what direction the submenus should open. Handled by JS.\n   * @option\n   * @example 'left'\n   */\n  alignment: 'left',\n  /**\n   * Allow clicks on the body to close any open submenus.\n   * @option\n   * @example true\n   */\n  closeOnClick: true,\n  /**\n   * Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\n   * @option\n   * @example 'vertical'\n   */\n  verticalClass: 'vertical',\n  /**\n   * Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\n   * @option\n   * @example 'align-right'\n   */\n  rightClass: 'align-right',\n  /**\n   * Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\n   * @option\n   * @example false\n   */\n  forceFollow: true\n};\n\n// Window exports\nFoundation.plugin(DropdownMenu, 'DropdownMenu');\n\n}(jQuery);\n"]},"hash":"bba90dcd3bb53b275fedbbded7578734a12bd938"}
