{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/dist/plugins/foundation.interchange.js","filenameRelative":"/packages/zurb:foundation-sites/dist/plugins/foundation.interchange.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/dist/plugins/foundation.interchange.js.map","sourceFileName":"/packages/zurb:foundation-sites/dist/plugins/foundation.interchange.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.interchange"},"ignored":false,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n!function ($) {\n\n  /**\n   * Interchange module.\n   * @module foundation.interchange\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.timerAndImageLoader\n   */\n\n  var Interchange = function () {\n    /**\n     * Creates a new instance of Interchange.\n     * @class\n     * @fires Interchange#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Interchange(element, options) {\n      _classCallCheck(this, Interchange);\n\n      this.$element = element;\n      this.options = $.extend({}, Interchange.defaults, options);\n      this.rules = [];\n      this.currentPath = '';\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'Interchange');\n    }\n\n    /**\n     * Initializes the Interchange plugin and calls functions to get interchange functioning on load.\n     * @function\n     * @private\n     */\n\n    _createClass(Interchange, [{\n      key: '_init',\n      value: function () {\n        function _init() {\n          this._addBreakpoints();\n          this._generateRules();\n          this._reflow();\n        }\n\n        return _init;\n      }()\n\n      /**\n       * Initializes events for Interchange.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function () {\n        function _events() {\n          $(window).on('resize.zf.interchange', Foundation.util.throttle(this._reflow.bind(this), 50));\n        }\n\n        return _events;\n      }()\n\n      /**\n       * Calls necessary functions to update Interchange upon DOM change\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_reflow',\n      value: function () {\n        function _reflow() {\n          var match;\n\n          // Iterate through each rule, but only save the last match\n          for (var i in meteorBabelHelpers.sanitizeForInObject(this.rules)) {\n            if (this.rules.hasOwnProperty(i)) {\n              var rule = this.rules[i];\n\n              if (window.matchMedia(rule.query).matches) {\n                match = rule;\n              }\n            }\n          }\n\n          if (match) {\n            this.replace(match.path);\n          }\n        }\n\n        return _reflow;\n      }()\n\n      /**\n       * Gets the Foundation breakpoints and adds them to the Interchange.SPECIAL_QUERIES object.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBreakpoints',\n      value: function () {\n        function _addBreakpoints() {\n          for (var i in meteorBabelHelpers.sanitizeForInObject(Foundation.MediaQuery.queries)) {\n            if (Foundation.MediaQuery.queries.hasOwnProperty(i)) {\n              var query = Foundation.MediaQuery.queries[i];\n              Interchange.SPECIAL_QUERIES[query.name] = query.value;\n            }\n          }\n        }\n\n        return _addBreakpoints;\n      }()\n\n      /**\n       * Checks the Interchange element for the provided media query + content pairings\n       * @function\n       * @private\n       * @param {Object} element - jQuery object that is an Interchange instance\n       * @returns {Array} scenarios - Array of objects that have 'mq' and 'path' keys with corresponding keys\n       */\n\n    }, {\n      key: '_generateRules',\n      value: function () {\n        function _generateRules(element) {\n          var rulesList = [];\n          var rules;\n\n          if (this.options.rules) {\n            rules = this.options.rules;\n          } else {\n            rules = this.$element.data('interchange').match(/\\[.*?\\]/g);\n          }\n\n          for (var i in meteorBabelHelpers.sanitizeForInObject(rules)) {\n            if (rules.hasOwnProperty(i)) {\n              var rule = rules[i].slice(1, -1).split(', ');\n              var path = rule.slice(0, -1).join('');\n              var query = rule[rule.length - 1];\n\n              if (Interchange.SPECIAL_QUERIES[query]) {\n                query = Interchange.SPECIAL_QUERIES[query];\n              }\n\n              rulesList.push({\n                path: path,\n                query: query\n              });\n            }\n          }\n\n          this.rules = rulesList;\n        }\n\n        return _generateRules;\n      }()\n\n      /**\n       * Update the `src` property of an image, or change the HTML of a container, to the specified path.\n       * @function\n       * @param {String} path - Path to the image or HTML partial.\n       * @fires Interchange#replaced\n       */\n\n    }, {\n      key: 'replace',\n      value: function () {\n        function replace(path) {\n          if (this.currentPath === path) return;\n\n          var _this = this,\n              trigger = 'replaced.zf.interchange';\n\n          // Replacing images\n          if (this.$element[0].nodeName === 'IMG') {\n            this.$element.attr('src', path).load(function () {\n              _this.currentPath = path;\n            }).trigger(trigger);\n          }\n          // Replacing background images\n          else if (path.match(/\\.(gif|jpg|jpeg|png|svg|tiff)([?#].*)?/i)) {\n              this.$element.css({ 'background-image': 'url(' + path + ')' }).trigger(trigger);\n            }\n            // Replacing HTML\n            else {\n                $.get(path, function (response) {\n                  _this.$element.html(response).trigger(trigger);\n                  $(response).foundation();\n                  _this.currentPath = path;\n                });\n              }\n\n          /**\n           * Fires when content in an Interchange element is done being loaded.\n           * @event Interchange#replaced\n           */\n          // this.$element.trigger('replaced.zf.interchange');\n        }\n\n        return replace;\n      }()\n\n      /**\n       * Destroys an instance of interchange.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function () {\n        function destroy() {\n          //TODO this.\n        }\n\n        return destroy;\n      }()\n    }]);\n\n    return Interchange;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n  Interchange.defaults = {\n    /**\n     * Rules to be applied to Interchange elements. Set with the `data-interchange` array notation.\n     * @option\n     */\n    rules: null\n  };\n\n  Interchange.SPECIAL_QUERIES = {\n    'landscape': 'screen and (orientation: landscape)',\n    'portrait': 'screen and (orientation: portrait)',\n    'retina': 'only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)'\n  };\n\n  // Window exports\n  Foundation.plugin(Interchange, 'Interchange');\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/dist/plugins/foundation.interchange.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/dist/plugins/foundation.interchange.js.map","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Interchange module.\n   * @module foundation.interchange\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.timerAndImageLoader\n   */\n\n  var Interchange = function () {\n    /**\n     * Creates a new instance of Interchange.\n     * @class\n     * @fires Interchange#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Interchange(element, options) {\n      _classCallCheck(this, Interchange);\n\n      this.$element = element;\n      this.options = $.extend({}, Interchange.defaults, options);\n      this.rules = [];\n      this.currentPath = '';\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'Interchange');\n    }\n\n    /**\n     * Initializes the Interchange plugin and calls functions to get interchange functioning on load.\n     * @function\n     * @private\n     */\n\n\n    _createClass(Interchange, [{\n      key: '_init',\n      value: function _init() {\n        this._addBreakpoints();\n        this._generateRules();\n        this._reflow();\n      }\n\n      /**\n       * Initializes events for Interchange.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        $(window).on('resize.zf.interchange', Foundation.util.throttle(this._reflow.bind(this), 50));\n      }\n\n      /**\n       * Calls necessary functions to update Interchange upon DOM change\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        var match;\n\n        // Iterate through each rule, but only save the last match\n        for (var i in this.rules) {\n          if (this.rules.hasOwnProperty(i)) {\n            var rule = this.rules[i];\n\n            if (window.matchMedia(rule.query).matches) {\n              match = rule;\n            }\n          }\n        }\n\n        if (match) {\n          this.replace(match.path);\n        }\n      }\n\n      /**\n       * Gets the Foundation breakpoints and adds them to the Interchange.SPECIAL_QUERIES object.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBreakpoints',\n      value: function _addBreakpoints() {\n        for (var i in Foundation.MediaQuery.queries) {\n          if (Foundation.MediaQuery.queries.hasOwnProperty(i)) {\n            var query = Foundation.MediaQuery.queries[i];\n            Interchange.SPECIAL_QUERIES[query.name] = query.value;\n          }\n        }\n      }\n\n      /**\n       * Checks the Interchange element for the provided media query + content pairings\n       * @function\n       * @private\n       * @param {Object} element - jQuery object that is an Interchange instance\n       * @returns {Array} scenarios - Array of objects that have 'mq' and 'path' keys with corresponding keys\n       */\n\n    }, {\n      key: '_generateRules',\n      value: function _generateRules(element) {\n        var rulesList = [];\n        var rules;\n\n        if (this.options.rules) {\n          rules = this.options.rules;\n        } else {\n          rules = this.$element.data('interchange').match(/\\[.*?\\]/g);\n        }\n\n        for (var i in rules) {\n          if (rules.hasOwnProperty(i)) {\n            var rule = rules[i].slice(1, -1).split(', ');\n            var path = rule.slice(0, -1).join('');\n            var query = rule[rule.length - 1];\n\n            if (Interchange.SPECIAL_QUERIES[query]) {\n              query = Interchange.SPECIAL_QUERIES[query];\n            }\n\n            rulesList.push({\n              path: path,\n              query: query\n            });\n          }\n        }\n\n        this.rules = rulesList;\n      }\n\n      /**\n       * Update the `src` property of an image, or change the HTML of a container, to the specified path.\n       * @function\n       * @param {String} path - Path to the image or HTML partial.\n       * @fires Interchange#replaced\n       */\n\n    }, {\n      key: 'replace',\n      value: function replace(path) {\n        if (this.currentPath === path) return;\n\n        var _this = this,\n            trigger = 'replaced.zf.interchange';\n\n        // Replacing images\n        if (this.$element[0].nodeName === 'IMG') {\n          this.$element.attr('src', path).load(function () {\n            _this.currentPath = path;\n          }).trigger(trigger);\n        }\n        // Replacing background images\n        else if (path.match(/\\.(gif|jpg|jpeg|png|svg|tiff)([?#].*)?/i)) {\n            this.$element.css({ 'background-image': 'url(' + path + ')' }).trigger(trigger);\n          }\n          // Replacing HTML\n          else {\n              $.get(path, function (response) {\n                _this.$element.html(response).trigger(trigger);\n                $(response).foundation();\n                _this.currentPath = path;\n              });\n            }\n\n        /**\n         * Fires when content in an Interchange element is done being loaded.\n         * @event Interchange#replaced\n         */\n        // this.$element.trigger('replaced.zf.interchange');\n      }\n\n      /**\n       * Destroys an instance of interchange.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        //TODO this.\n      }\n    }]);\n\n    return Interchange;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Interchange.defaults = {\n    /**\n     * Rules to be applied to Interchange elements. Set with the `data-interchange` array notation.\n     * @option\n     */\n    rules: null\n  };\n\n  Interchange.SPECIAL_QUERIES = {\n    'landscape': 'screen and (orientation: landscape)',\n    'portrait': 'screen and (orientation: portrait)',\n    'retina': 'only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)'\n  };\n\n  // Window exports\n  Foundation.plugin(Interchange, 'Interchange');\n}(jQuery);"]},"hash":"fe4e145f4cd9e74a65c2b6bc774c3154b546fd7a"}
