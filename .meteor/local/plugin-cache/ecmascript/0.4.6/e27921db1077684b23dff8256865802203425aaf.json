{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/test/javascript/components/abide.js","filenameRelative":"/packages/zurb:foundation-sites/test/javascript/components/abide.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/test/javascript/components/abide.js.map","sourceFileName":"/packages/zurb:foundation-sites/test/javascript/components/abide.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"abide"},"ignored":false,"code":"/* jslint mocha: true */\n/*global describe, it, before, beforeEach, after, afterEach, $, Foundation */\n\ndescribe('Abide', function () {\n  var plugin;\n  var $html;\n\n  afterEach(function () {\n    plugin.destroy();\n    $html.remove();\n  });\n\n  describe('constructor()', function () {\n    it('stores the element & plugin options', function () {\n      $html = $('<form data-abide novalidate></form>').appendTo('body');\n      plugin = new Foundation.Abide($html, {});\n\n      plugin.$element.should.be.an('object');\n      plugin.options.should.be.an('object');\n    });\n  });\n\n  describe('validateInput()', function () {\n    it('returns true for hidden inputs', function () {\n      $html = $(\"<form data-abide novalidate><input type='hidden' required></form>\").appendTo(\"body\");\n      plugin = new Foundation.Abide($html, {});\n\n      plugin.validateInput($html.find(\"input\")).should.equal(true);\n    });\n\n    it('returns true for inputs with [data-abide-ignore]', function () {\n      $html = $(\"<form data-abide novalidate><input type='text' required data-abide-ignore></form>\").appendTo(\"body\");\n      plugin = new Foundation.Abide($html, {});\n\n      plugin.validateInput($html.find(\"input\")).should.equal(true);\n    });\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/test/javascript/components/abide.js"],"names":[],"mappings":";;;AAGA,SAAS,OAAT,EAAkB,YAAW;AAC3B,MAAI,MAAJ;AACA,MAAI,KAAJ;;AAEA,YAAU,YAAW;AACnB,WAAO,OAAP;AACA,UAAM,MAAN;AACD,GAHD;;AAKA,WAAS,eAAT,EAA0B,YAAW;AACnC,OAAG,qCAAH,EAA0C,YAAW;AACnD,cAAQ,EAAE,qCAAF,EAAyC,QAAzC,CAAkD,MAAlD,CAAR;AACA,eAAS,IAAI,WAAW,KAAf,CAAqB,KAArB,EAA4B,EAA5B,CAAT;;AAEA,aAAO,QAAP,CAAgB,MAAhB,CAAuB,EAAvB,CAA0B,EAA1B,CAA6B,QAA7B;AACA,aAAO,OAAP,CAAe,MAAf,CAAsB,EAAtB,CAAyB,EAAzB,CAA4B,QAA5B;AACD,KAND;AAOD,GARD;;AAUA,WAAS,iBAAT,EAA4B,YAAW;AACrC,OAAG,gCAAH,EAAqC,YAAW;AAC9C,cAAQ,EAAE,mEAAF,EAAuE,QAAvE,CAAgF,MAAhF,CAAR;AACA,eAAS,IAAI,WAAW,KAAf,CAAqB,KAArB,EAA4B,EAA5B,CAAT;;AAEA,aAAO,aAAP,CAAqB,MAAM,IAAN,CAAW,OAAX,CAArB,EAA0C,MAA1C,CAAiD,KAAjD,CAAuD,IAAvD;AACD,KALD;;AAOA,OAAG,kDAAH,EAAuD,YAAW;AAChE,cAAQ,EAAE,mFAAF,EAAuF,QAAvF,CAAgG,MAAhG,CAAR;AACA,eAAS,IAAI,WAAW,KAAf,CAAqB,KAArB,EAA4B,EAA5B,CAAT;;AAEA,aAAO,aAAP,CAAqB,MAAM,IAAN,CAAW,OAAX,CAArB,EAA0C,MAA1C,CAAiD,KAAjD,CAAuD,IAAvD;AACD,KALD;AAMD,GAdD;AAgBD,CAnCD","file":"/packages/zurb:foundation-sites/test/javascript/components/abide.js.map","sourcesContent":["/* jslint mocha: true */\n/*global describe, it, before, beforeEach, after, afterEach, $, Foundation */\n\ndescribe('Abide', function() {\n  var plugin;\n  var $html;\n\n  afterEach(function() {\n    plugin.destroy();\n    $html.remove();\n  });\n\n  describe('constructor()', function() {\n    it('stores the element & plugin options', function() {\n      $html = $('<form data-abide novalidate></form>').appendTo('body');\n      plugin = new Foundation.Abide($html, {});\n\n      plugin.$element.should.be.an('object');\n      plugin.options.should.be.an('object');\n    });\n  });\n\n  describe('validateInput()', function() {\n    it('returns true for hidden inputs', function() {\n      $html = $(\"<form data-abide novalidate><input type='hidden' required></form>\").appendTo(\"body\");\n      plugin = new Foundation.Abide($html, {});\n\n      plugin.validateInput($html.find(\"input\")).should.equal(true);\n    });\n\n    it('returns true for inputs with [data-abide-ignore]', function() {\n      $html = $(\"<form data-abide novalidate><input type='text' required data-abide-ignore></form>\").appendTo(\"body\");\n      plugin = new Foundation.Abide($html, {});\n\n      plugin.validateInput($html.find(\"input\")).should.equal(true);\n    });\n  });\n\n});\n"]},"hash":"e27921db1077684b23dff8256865802203425aaf"}
