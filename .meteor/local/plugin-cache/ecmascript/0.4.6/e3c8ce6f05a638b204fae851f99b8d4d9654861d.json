{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/docs/assets/img/gulpfile.js","filenameRelative":"/packages/zurb:foundation-sites/docs/assets/img/gulpfile.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/docs/assets/img/gulpfile.js.map","sourceFileName":"/packages/zurb:foundation-sites/docs/assets/img/gulpfile.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"gulpfile"},"ignored":false,"code":"var $ = require('gulp-load-plugins')();\nvar argv = require('yargs').argv;\nvar gulp = require('gulp');\nvar rimraf = require('rimraf');\nvar panini = require('panini');\nvar sequence = require('run-sequence');\n\n// Check for --production flag\nvar isProduction = !!argv.production;\n\n// File paths to various assets are defined here.\nvar paths = {\n  assets: ['src/assets/**/*', '!src/assets/{!img,js,scss}/**/*'],\n  downloads: ['src/downloads/**/*.*'],\n  sass: ['bower_components/foundation-sites/scss'],\n  javascript: ['node_modules/jquery/dist/jquery.js', 'bower_components/foundation-sites/dist/foundation.js', 'bower_components/what-input/what-input.js', 'src/assets/js/**/*.js', 'bower_components/lodash/lodash.js', 'src/assets/js/app.js']\n};\n\n// Delete the \"dist\" folder\n// This happens every time a build starts\ngulp.task('clean', function (done) {\n  rimraf('./dist', done);\n});\n\n// Copy files out of the assets folder\n// This task skips over the \"img\", \"js\", and \"scss\" folders, which are parsed separately\ngulp.task('copy', function (done) {\n  gulp.src(paths.assets).pipe(gulp.dest('./dist/assets'));\n});\ngulp.task('downloads', function (done) {\n  gulp.src('src/downloads/**/*.*').pipe(gulp.dest('./dist/downloads'));\n  done();\n});\n\n// Copy page templates into finished HTML files\ngulp.task('pages', function () {\n  gulp.src('./src/pages/**/*.html').pipe(panini({\n    root: './src/pages/',\n    layouts: './src/layouts/',\n    partials: './src/partials/',\n    data: './src/data/'\n  })).pipe($.cacheBust({ type: 'MD5' })).pipe(gulp.dest('./dist'));\n});\n\ngulp.task('pages:reset', function () {\n  panini.refresh();\n  gulp.run('pages');\n});\n\n// Compile Sass into CSS\n// In production, the CSS is compressed\ngulp.task('sass', function () {\n  var uncss = $['if'](isProduction, $.uncss({\n    html: ['src/**/*.html'],\n    ignore: [new RegExp('^meta\\..*'), new RegExp('^\\.is-.*')]\n  }));\n\n  return gulp.src('./src/assets/scss/app.scss').pipe($.sass({\n    includePaths: paths.sass,\n    outputStyle: isProduction ? 'compressed' : 'nested'\n  }).on('error', $.sass.logError)).pipe($.autoprefixer({\n    browsers: ['last 2 versions', 'ie >= 9']\n  }))\n  // .pipe(uncss)\n  .pipe(gulp.dest('./dist/assets/css'));\n});\n\n// Combine JavaScript into one file\n// In production, the file is minified\ngulp.task('javascript', function () {\n  var uglify = $['if'](isProduction, $.uglify({\n    mangle: false\n  }).on('error', function (e) {\n    console.log(e);\n  }));\n\n  return gulp.src(paths.javascript).pipe($.concat('app.js')).pipe(uglify).pipe(gulp.dest('./dist/assets/js'));\n});\n\n// Compiles HTML templates into JST\ngulp.task('jst', function () {\n  gulp.src('src/templates/*.html').pipe($.jstConcat('templates.js', {\n    renameKeys: ['^.*marketing/(src.*.html)$', '$1']\n  })).pipe(gulp.dest('dist/assets/js'));\n});\n\n// Copy images to the \"dist\" folder\n// In production, the images are compressed\ngulp.task('images', function () {\n  var imagemin = $['if'](isProduction, $.imagemin({\n    progressive: true\n  }));\n\n  return gulp.src('./src/assets/img/**/*')\n  // .pipe(imagemin)\n  .pipe(gulp.dest('./dist/assets/img'));\n});\n\n// Deploy to the live server\ngulp.task('deploy', ['build'], function () {\n  return gulp.src('./dist/**').pipe($.prompt.confirm('Make sure everything looks right before you deploy.')).pipe($.rsync({\n    root: './dist',\n    hostname: 'deployer@72.32.134.77',\n    destination: '/home/deployer/sites/foundation-sites-6-marketing'\n  }));\n});\n\n// Build the \"dist\" folder by running all of the above tasks\ngulp.task('build', function (done) {\n  sequence('clean', ['pages', 'sass', 'javascript', 'images', 'jst', 'downloads'], done);\n});\n\n// Start a server with LiveReload to preview the site in\ngulp.task('server', ['build'], function () {\n  return gulp.src('./dist').pipe($.webserver({\n    host: 'localhost',\n    port: 8000,\n    livereload: true,\n    open: true\n  }));\n});\n\n// Build the site, run the server, and watch for file changes\ngulp.task('default', ['build', 'server'], function () {\n  gulp.watch(paths.assets, ['copy']);\n  gulp.watch(['./src/pages/**/*.html'], ['pages']);\n  gulp.watch(['./src/{layouts,partials}/**/*.html'], ['pages:reset']);\n  gulp.watch(['./src/assets/scss/**/*.scss'], ['sass']);\n  gulp.watch(['./src/assets/js/**/*.js'], ['javascript']);\n  gulp.watch(['bower_components/foundation-sites/dist/foundation.js'], ['javascript']);\n  gulp.watch(['./src/assets/img/**/*'], ['images']);\n  gulp.watch(['./src/templates/**/*'], ['jst']);\n});","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/docs/assets/img/gulpfile.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/docs/assets/img/gulpfile.js.map","sourcesContent":["var $      = require('gulp-load-plugins')();\nvar argv   = require('yargs').argv;\nvar gulp   = require('gulp');\nvar rimraf = require('rimraf');\nvar panini = require('panini');\nvar sequence = require('run-sequence');\n\n// Check for --production flag\nvar isProduction = !!(argv.production);\n\n// File paths to various assets are defined here.\nvar paths = {\n  assets: [\n    'src/assets/**/*',\n    '!src/assets/{!img,js,scss}/**/*'\n  ],\n  downloads: [\n    'src/downloads/**/*.*'\n  ],\n  sass: [\n    'bower_components/foundation-sites/scss'\n  ],\n  javascript: [\n    'node_modules/jquery/dist/jquery.js',\n    'bower_components/foundation-sites/dist/foundation.js',\n    'bower_components/what-input/what-input.js',\n    'src/assets/js/**/*.js',\n    'bower_components/lodash/lodash.js',\n    'src/assets/js/app.js'\n  ]\n};\n\n// Delete the \"dist\" folder\n// This happens every time a build starts\ngulp.task('clean', function(done) {\n  rimraf('./dist', done);\n});\n\n// Copy files out of the assets folder\n// This task skips over the \"img\", \"js\", and \"scss\" folders, which are parsed separately\ngulp.task('copy', function(done) {\n  gulp.src(paths.assets)\n    .pipe(gulp.dest('./dist/assets'));\n});\ngulp.task('downloads', function(done){\n  gulp.src('src/downloads/**/*.*')\n      .pipe(gulp.dest('./dist/downloads'));\n      done();\n});\n\n// Copy page templates into finished HTML files\ngulp.task('pages', function() {\n  gulp.src('./src/pages/**/*.html')\n    .pipe(panini({\n      root: './src/pages/',\n      layouts: './src/layouts/',\n      partials: './src/partials/',\n      data: './src/data/'\n    }))\n    .pipe($.cacheBust({ type: 'MD5' }))\n    .pipe(gulp.dest('./dist'));\n});\n\ngulp.task('pages:reset', function() {\n  panini.refresh();\n  gulp.run('pages');\n});\n\n// Compile Sass into CSS\n// In production, the CSS is compressed\ngulp.task('sass', function() {\n  var uncss = $.if(isProduction, $.uncss({\n    html: ['src/**/*.html'],\n    ignore: [\n      new RegExp('^meta\\..*'),\n      new RegExp('^\\.is-.*')\n    ]\n  }));\n\n  return gulp.src('./src/assets/scss/app.scss')\n    .pipe($.sass({\n      includePaths: paths.sass,\n      outputStyle: isProduction ? 'compressed' : 'nested'\n    })\n      .on('error', $.sass.logError))\n    .pipe($.autoprefixer({\n      browsers: ['last 2 versions', 'ie >= 9']\n    }))\n    // .pipe(uncss)\n    .pipe(gulp.dest('./dist/assets/css'));\n});\n\n// Combine JavaScript into one file\n// In production, the file is minified\ngulp.task('javascript', function() {\n  var uglify = $.if(isProduction, $.uglify({\n      mangle: false\n    })\n    .on('error', function (e) {\n      console.log(e);\n    }));\n\n  return gulp.src(paths.javascript)\n    .pipe($.concat('app.js'))\n    .pipe(uglify)\n    .pipe(gulp.dest('./dist/assets/js'));\n});\n\n// Compiles HTML templates into JST\ngulp.task('jst', function() {\n  gulp.src('src/templates/*.html')\n    .pipe($.jstConcat('templates.js', {\n      renameKeys: ['^.*marketing/(src.*.html)$', '$1']\n    }))\n    .pipe(gulp.dest('dist/assets/js'));\n});\n\n// Copy images to the \"dist\" folder\n// In production, the images are compressed\ngulp.task('images', function() {\n  var imagemin = $.if(isProduction, $.imagemin({\n    progressive: true\n  }));\n\n  return gulp.src('./src/assets/img/**/*')\n    // .pipe(imagemin)\n    .pipe(gulp.dest('./dist/assets/img'));\n});\n\n// Deploy to the live server\ngulp.task('deploy', ['build'], function() {\n  return gulp.src('./dist/**')\n    .pipe($.prompt.confirm('Make sure everything looks right before you deploy.'))\n    .pipe($.rsync({\n      root: './dist',\n      hostname: 'deployer@72.32.134.77',\n      destination: '/home/deployer/sites/foundation-sites-6-marketing'\n    }));\n});\n\n// Build the \"dist\" folder by running all of the above tasks\ngulp.task('build', function(done) {\n  sequence('clean', ['pages', 'sass', 'javascript', 'images', 'jst', 'downloads'], done);\n});\n\n// Start a server with LiveReload to preview the site in\ngulp.task('server', ['build'], function() {\n  return gulp.src('./dist')\n    .pipe($.webserver({\n      host: 'localhost',\n      port: 8000,\n      livereload: true,\n      open: true\n    }));\n});\n\n// Build the site, run the server, and watch for file changes\ngulp.task('default', ['build', 'server'], function() {\n  gulp.watch(paths.assets, ['copy']);\n  gulp.watch(['./src/pages/**/*.html'], ['pages']);\n  gulp.watch(['./src/{layouts,partials}/**/*.html'], ['pages:reset']);\n  gulp.watch(['./src/assets/scss/**/*.scss'], ['sass']);\n  gulp.watch(['./src/assets/js/**/*.js'], ['javascript']);\n  gulp.watch(['bower_components/foundation-sites/dist/foundation.js'], ['javascript']);\n  gulp.watch(['./src/assets/img/**/*'], ['images']);\n  gulp.watch(['./src/templates/**/*'], ['jst']);\n});\n"]},"hash":"e3c8ce6f05a638b204fae851f99b8d4d9654861d"}
