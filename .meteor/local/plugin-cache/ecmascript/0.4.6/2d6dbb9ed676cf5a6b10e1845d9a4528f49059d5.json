{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/vendor/jquery/src/data.js","filenameRelative":"/packages/zurb:foundation-sites/vendor/jquery/src/data.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/vendor/jquery/src/data.js.map","sourceFileName":"/packages/zurb:foundation-sites/vendor/jquery/src/data.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"data"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\ndefine([\"./core\", \"./core/access\", \"./data/var/dataPriv\", \"./data/var/dataUser\"], function (jQuery, access, dataPriv, dataUser) {\n\n\t//\tImplementation Summary\n\t//\n\t//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n\t//\t2. Improve the module's maintainability by reducing the storage\n\t//\t\tpaths to a single mechanism.\n\t//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n\t//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n\t//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n\t//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\n\tvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\t    rmultiDash = /[A-Z]/g;\n\n\tfunction dataAttr(elem, key, data) {\n\t\tvar name;\n\n\t\t// If nothing was found internally, try to fetch any\n\t\t// data from the HTML5 data-* attribute\n\t\tif (data === undefined && elem.nodeType === 1) {\n\t\t\tname = \"data-\" + key.replace(rmultiDash, \"-$&\").toLowerCase();\n\t\t\tdata = elem.getAttribute(name);\n\n\t\t\tif (typeof data === \"string\") {\n\t\t\t\ttry {\n\t\t\t\t\tdata = data === \"true\" ? true : data === \"false\" ? false : data === \"null\" ? null :\n\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data;\n\t\t\t\t} catch (e) {}\n\n\t\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\t\tdataUser.set(elem, key, data);\n\t\t\t} else {\n\t\t\t\tdata = undefined;\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t}\n\n\tjQuery.extend({\n\t\thasData: function () {\n\t\t\tfunction hasData(elem) {\n\t\t\t\treturn dataUser.hasData(elem) || dataPriv.hasData(elem);\n\t\t\t}\n\n\t\t\treturn hasData;\n\t\t}(),\n\n\t\tdata: function () {\n\t\t\tfunction data(elem, name, _data) {\n\t\t\t\treturn dataUser.access(elem, name, _data);\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}(),\n\n\t\tremoveData: function () {\n\t\t\tfunction removeData(elem, name) {\n\t\t\t\tdataUser.remove(elem, name);\n\t\t\t}\n\n\t\t\treturn removeData;\n\t\t}(),\n\n\t\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t\t// with direct calls to dataPriv methods, these can be deprecated.\n\t\t_data: function () {\n\t\t\tfunction _data(elem, name, data) {\n\t\t\t\treturn dataPriv.access(elem, name, data);\n\t\t\t}\n\n\t\t\treturn _data;\n\t\t}(),\n\n\t\t_removeData: function () {\n\t\t\tfunction _removeData(elem, name) {\n\t\t\t\tdataPriv.remove(elem, name);\n\t\t\t}\n\n\t\t\treturn _removeData;\n\t\t}()\n\t});\n\n\tjQuery.fn.extend({\n\t\tdata: function () {\n\t\t\tfunction data(key, value) {\n\t\t\t\tvar i,\n\t\t\t\t    name,\n\t\t\t\t    data,\n\t\t\t\t    elem = this[0],\n\t\t\t\t    attrs = elem && elem.attributes;\n\n\t\t\t\t// Gets all values\n\t\t\t\tif (key === undefined) {\n\t\t\t\t\tif (this.length) {\n\t\t\t\t\t\tdata = dataUser.get(elem);\n\n\t\t\t\t\t\tif (elem.nodeType === 1 && !dataPriv.get(elem, \"hasDataAttrs\")) {\n\t\t\t\t\t\t\ti = attrs.length;\n\t\t\t\t\t\t\twhile (i--) {\n\n\t\t\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\t\t\tif (attrs[i]) {\n\t\t\t\t\t\t\t\t\tname = attrs[i].name;\n\t\t\t\t\t\t\t\t\tif (name.indexOf(\"data-\") === 0) {\n\t\t\t\t\t\t\t\t\t\tname = jQuery.camelCase(name.slice(5));\n\t\t\t\t\t\t\t\t\t\tdataAttr(elem, name, data[name]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdataPriv.set(elem, \"hasDataAttrs\", true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Sets multiple values\n\t\t\t\tif ((typeof key === \"undefined\" ? \"undefined\" : (0, _typeof3[\"default\"])(key)) === \"object\") {\n\t\t\t\t\treturn this.each(function () {\n\t\t\t\t\t\tdataUser.set(this, key);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn access(this, function (value) {\n\t\t\t\t\tvar data, camelKey;\n\n\t\t\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\t\t\tif (elem && value === undefined) {\n\n\t\t\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t\t\t// with the key as-is\n\t\t\t\t\t\tdata = dataUser.get(elem, key) ||\n\n\t\t\t\t\t\t// Try to find dashed key if it exists (gh-2779)\n\t\t\t\t\t\t// This is for 2.2.x only\n\t\t\t\t\t\tdataUser.get(elem, key.replace(rmultiDash, \"-$&\").toLowerCase());\n\n\t\t\t\t\t\tif (data !== undefined) {\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcamelKey = jQuery.camelCase(key);\n\n\t\t\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t\t\t// with the key camelized\n\t\t\t\t\t\tdata = dataUser.get(elem, camelKey);\n\t\t\t\t\t\tif (data !== undefined) {\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\t\t\tdata = dataAttr(elem, camelKey, undefined);\n\t\t\t\t\t\tif (data !== undefined) {\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set the data...\n\t\t\t\t\tcamelKey = jQuery.camelCase(key);\n\t\t\t\t\tthis.each(function () {\n\n\t\t\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\t\t\tvar data = dataUser.get(this, camelKey);\n\n\t\t\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t\t\t// This might not apply to all properties...*\n\t\t\t\t\t\tdataUser.set(this, camelKey, value);\n\n\t\t\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t\t\t// unchanged property.\n\t\t\t\t\t\tif (key.indexOf(\"-\") > -1 && data !== undefined) {\n\t\t\t\t\t\t\tdataUser.set(this, key, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, null, value, arguments.length > 1, null, true);\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}(),\n\n\t\tremoveData: function () {\n\t\t\tfunction removeData(key) {\n\t\t\t\treturn this.each(function () {\n\t\t\t\t\tdataUser.remove(this, key);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn removeData;\n\t\t}()\n\t});\n\n\treturn jQuery;\n});","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/vendor/jquery/src/data.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/vendor/jquery/src/data.js.map","sourcesContent":["define( [\n\t\"./core\",\n\t\"./core/access\",\n\t\"./data/var/dataPriv\",\n\t\"./data/var/dataUser\"\n], function( jQuery, access, dataPriv, dataUser ) {\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data, camelKey;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = dataUser.get( elem, key ) ||\n\n\t\t\t\t\t// Try to find dashed key if it exists (gh-2779)\n\t\t\t\t\t// This is for 2.2.x only\n\t\t\t\t\tdataUser.get( elem, key.replace( rmultiDash, \"-$&\" ).toLowerCase() );\n\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = dataUser.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tcamelKey = jQuery.camelCase( key );\n\t\t\tthis.each( function() {\n\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = dataUser.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdataUser.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf( \"-\" ) > -1 && data !== undefined ) {\n\t\t\t\t\tdataUser.set( this, key, value );\n\t\t\t\t}\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\nreturn jQuery;\n} );\n"]},"hash":"2d6dbb9ed676cf5a6b10e1845d9a4528f49059d5"}
