{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/js/foundation.util.timerAndImageLoader.js","filenameRelative":"/packages/zurb:foundation-sites/js/foundation.util.timerAndImageLoader.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/js/foundation.util.timerAndImageLoader.js.map","sourceFileName":"/packages/zurb:foundation-sites/js/foundation.util.timerAndImageLoader.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.util.timerAndImageLoader"},"ignored":false,"code":"'use strict';\n\n!function ($) {\n\n  function Timer(elem, options, cb) {\n    var _this = this,\n        duration = options.duration,\n        //options is an object for easily adding features later.\n    nameSpace = Object.keys(elem.data())[0] || 'timer',\n        remain = -1,\n        start,\n        timer;\n\n    this.isPaused = false;\n\n    this.restart = function () {\n      remain = -1;\n      clearTimeout(timer);\n      this.start();\n    };\n\n    this.start = function () {\n      this.isPaused = false;\n      // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      remain = remain <= 0 ? duration : remain;\n      elem.data('paused', false);\n      start = Date.now();\n      timer = setTimeout(function () {\n        if (options.infinite) {\n          _this.restart(); //rerun the timer.\n        }\n        cb();\n      }, remain);\n      elem.trigger('timerstart.zf.' + nameSpace);\n    };\n\n    this.pause = function () {\n      this.isPaused = true;\n      //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      elem.data('paused', true);\n      var end = Date.now();\n      remain = remain - (end - start);\n      elem.trigger('timerpaused.zf.' + nameSpace);\n    };\n  }\n\n  /**\n   * Runs a callback function when images are fully loaded.\n   * @param {Object} images - Image(s) to check if loaded.\n   * @param {Func} callback - Function to execute when image is fully loaded.\n   */\n  function onImagesLoaded(images, callback) {\n    var self = this,\n        unloaded = images.length;\n\n    if (unloaded === 0) {\n      callback();\n    }\n\n    images.each(function () {\n      if (this.complete) {\n        singleImageLoaded();\n      } else if (typeof this.naturalWidth !== 'undefined' && this.naturalWidth > 0) {\n        singleImageLoaded();\n      } else {\n        $(this).one('load', function () {\n          singleImageLoaded();\n        });\n      }\n    });\n\n    function singleImageLoaded() {\n      unloaded--;\n      if (unloaded === 0) {\n        callback();\n      }\n    }\n  }\n\n  Foundation.Timer = Timer;\n  Foundation.onImagesLoaded = onImagesLoaded;\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/js/foundation.util.timerAndImageLoader.js"],"names":[],"mappings":"AAAA;;AAEA,CAAC,UAAS,CAAT,EAAY;;AAEb,WAAS,KAAT,CAAe,IAAf,EAAqB,OAArB,EAA8B,EAA9B,EAAkC;AAChC,QAAI,QAAQ,IAAZ;AAAA,QACI,WAAW,QAAQ,QADvB;AAAA,Q;AAEI,gBAAY,OAAO,IAAP,CAAY,KAAK,IAAL,EAAZ,EAAyB,CAAzB,KAA+B,OAF/C;AAAA,QAGI,SAAS,CAAC,CAHd;AAAA,QAII,KAJJ;AAAA,QAKI,KALJ;;AAOA,SAAK,QAAL,GAAgB,KAAhB;;AAEA,SAAK,OAAL,GAAe,YAAW;AACxB,eAAS,CAAC,CAAV;AACA,mBAAa,KAAb;AACA,WAAK,KAAL;AACD,KAJD;;AAMA,SAAK,KAAL,GAAa,YAAW;AACtB,WAAK,QAAL,GAAgB,KAAhB;;AAEA,mBAAa,KAAb;AACA,eAAS,UAAU,CAAV,GAAc,QAAd,GAAyB,MAAlC;AACA,WAAK,IAAL,CAAU,QAAV,EAAoB,KAApB;AACA,cAAQ,KAAK,GAAL,EAAR;AACA,cAAQ,WAAW,YAAU;AAC3B,YAAG,QAAQ,QAAX,EAAoB;AAClB,gBAAM,OAAN,G;AACD;AACD;AACD,OALO,EAKL,MALK,CAAR;AAMA,WAAK,OAAL,oBAA8B,SAA9B;AACD,KAdD;;AAgBA,SAAK,KAAL,GAAa,YAAW;AACtB,WAAK,QAAL,GAAgB,IAAhB;;AAEA,mBAAa,KAAb;AACA,WAAK,IAAL,CAAU,QAAV,EAAoB,IAApB;AACA,UAAI,MAAM,KAAK,GAAL,EAAV;AACA,eAAS,UAAU,MAAM,KAAhB,CAAT;AACA,WAAK,OAAL,qBAA+B,SAA/B;AACD,KARD;AASD;;;;;;;AAOD,WAAS,cAAT,CAAwB,MAAxB,EAAgC,QAAhC,EAAyC;AACvC,QAAI,OAAO,IAAX;AAAA,QACI,WAAW,OAAO,MADtB;;AAGA,QAAI,aAAa,CAAjB,EAAoB;AAClB;AACD;;AAED,WAAO,IAAP,CAAY,YAAW;AACrB,UAAI,KAAK,QAAT,EAAmB;AACjB;AACD,OAFD,MAGK,IAAI,OAAO,KAAK,YAAZ,KAA6B,WAA7B,IAA4C,KAAK,YAAL,GAAoB,CAApE,EAAuE;AAC1E;AACD,OAFI,MAGA;AACH,UAAE,IAAF,EAAQ,GAAR,CAAY,MAAZ,EAAoB,YAAW;AAC7B;AACD,SAFD;AAGD;AACF,KAZD;;AAcA,aAAS,iBAAT,GAA6B;AAC3B;AACA,UAAI,aAAa,CAAjB,EAAoB;AAClB;AACD;AACF;AACF;;AAED,aAAW,KAAX,GAAmB,KAAnB;AACA,aAAW,cAAX,GAA4B,cAA5B;AAEC,CAnFA,CAmFC,MAnFD,CAAD","file":"/packages/zurb:foundation-sites/js/foundation.util.timerAndImageLoader.js.map","sourcesContent":["'use strict';\n\n!function($) {\n\nfunction Timer(elem, options, cb) {\n  var _this = this,\n      duration = options.duration,//options is an object for easily adding features later.\n      nameSpace = Object.keys(elem.data())[0] || 'timer',\n      remain = -1,\n      start,\n      timer;\n\n  this.isPaused = false;\n\n  this.restart = function() {\n    remain = -1;\n    clearTimeout(timer);\n    this.start();\n  }\n\n  this.start = function() {\n    this.isPaused = false;\n    // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n    clearTimeout(timer);\n    remain = remain <= 0 ? duration : remain;\n    elem.data('paused', false);\n    start = Date.now();\n    timer = setTimeout(function(){\n      if(options.infinite){\n        _this.restart();//rerun the timer.\n      }\n      cb();\n    }, remain);\n    elem.trigger(`timerstart.zf.${nameSpace}`);\n  }\n\n  this.pause = function() {\n    this.isPaused = true;\n    //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n    clearTimeout(timer);\n    elem.data('paused', true);\n    var end = Date.now();\n    remain = remain - (end - start);\n    elem.trigger(`timerpaused.zf.${nameSpace}`);\n  }\n}\n\n/**\n * Runs a callback function when images are fully loaded.\n * @param {Object} images - Image(s) to check if loaded.\n * @param {Func} callback - Function to execute when image is fully loaded.\n */\nfunction onImagesLoaded(images, callback){\n  var self = this,\n      unloaded = images.length;\n\n  if (unloaded === 0) {\n    callback();\n  }\n\n  images.each(function() {\n    if (this.complete) {\n      singleImageLoaded();\n    }\n    else if (typeof this.naturalWidth !== 'undefined' && this.naturalWidth > 0) {\n      singleImageLoaded();\n    }\n    else {\n      $(this).one('load', function() {\n        singleImageLoaded();\n      });\n    }\n  });\n\n  function singleImageLoaded() {\n    unloaded--;\n    if (unloaded === 0) {\n      callback();\n    }\n  }\n}\n\nFoundation.Timer = Timer;\nFoundation.onImagesLoaded = onImagesLoaded;\n\n}(jQuery);\n"]},"hash":"57aef95b78dfdd8c72be0aed37d7e6886c56525e"}
