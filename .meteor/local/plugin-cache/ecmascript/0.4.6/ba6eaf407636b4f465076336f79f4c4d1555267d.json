{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/js/foundation.core.js","filenameRelative":"/packages/zurb:foundation-sites/js/foundation.core.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/js/foundation.core.js.map","sourceFileName":"/packages/zurb:foundation-sites/js/foundation.core.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.core"},"ignored":false,"code":"var _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n!function ($) {\n\n  \"use strict\";\n\n  var FOUNDATION_VERSION = '6.2.2';\n\n  // Global Foundation object\n  // This is attached to the window, or used as a module for AMD/Browserify\n  var Foundation = {\n    version: FOUNDATION_VERSION,\n\n    /**\n     * Stores initialized plugins.\n     */\n    _plugins: {},\n\n    /**\n     * Stores generated unique ids for plugin instances\n     */\n    _uuids: [],\n\n    /**\n     * Returns a boolean for RTL support\n     */\n    rtl: function () {\n      function rtl() {\n        return $('html').attr('dir') === 'rtl';\n      }\n\n      return rtl;\n    }(),\n    /**\n     * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n     * @param {Object} plugin - The constructor of the plugin.\n     */\n    plugin: function () {\n      function plugin(_plugin, name) {\n        // Object key to use when adding to global Foundation object\n        // Examples: Foundation.Reveal, Foundation.OffCanvas\n        var className = name || functionName(_plugin);\n        // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n        // Examples: data-reveal, data-off-canvas\n        var attrName = hyphenate(className);\n\n        // Add to the Foundation object and the plugins list (for reflowing)\n        this._plugins[attrName] = this[className] = _plugin;\n      }\n\n      return plugin;\n    }(),\n    /**\n     * @function\n     * Populates the _uuids array with pointers to each individual plugin instance.\n     * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n     * Also fires the initialization event for each plugin, consolidating repetitive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @param {String} name - the name of the plugin, passed as a camelCased string.\n     * @fires Plugin#init\n     */\n    registerPlugin: function () {\n      function registerPlugin(plugin, name) {\n        var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n        plugin.uuid = this.GetYoDigits(6, pluginName);\n\n        if (!plugin.$element.attr('data-' + pluginName)) {\n          plugin.$element.attr('data-' + pluginName, plugin.uuid);\n        }\n        if (!plugin.$element.data('zfPlugin')) {\n          plugin.$element.data('zfPlugin', plugin);\n        }\n        /**\n         * Fires when the plugin has initialized.\n         * @event Plugin#init\n         */\n        plugin.$element.trigger('init.zf.' + pluginName);\n\n        this._uuids.push(plugin.uuid);\n\n        return;\n      }\n\n      return registerPlugin;\n    }(),\n    /**\n     * @function\n     * Removes the plugins uuid from the _uuids array.\n     * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n     * Also fires the destroyed event for the plugin, consolidating repetitive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @fires Plugin#destroyed\n     */\n    unregisterPlugin: function () {\n      function unregisterPlugin(plugin) {\n        var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n        this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n        plugin.$element.removeAttr('data-' + pluginName).removeData('zfPlugin')\n        /**\n         * Fires when the plugin has been destroyed.\n         * @event Plugin#destroyed\n         */\n        .trigger('destroyed.zf.' + pluginName);\n        for (var prop in meteorBabelHelpers.sanitizeForInObject(plugin)) {\n          plugin[prop] = null; //clean up script to prep for garbage collection.\n        }\n        return;\n      }\n\n      return unregisterPlugin;\n    }(),\n\n    /**\n     * @function\n     * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n     * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n     * @default If no argument is passed, reflow all currently active plugins.\n     */\n    reInit: function () {\n      function reInit(plugins) {\n        var isJQ = plugins instanceof $;\n        try {\n          if (isJQ) {\n            plugins.each(function () {\n              $(this).data('zfPlugin')._init();\n            });\n          } else {\n            var type = typeof plugins === 'undefined' ? 'undefined' : (0, _typeof3['default'])(plugins),\n                _this = this,\n                fns = {\n              'object': function () {\n                function object(plgs) {\n                  plgs.forEach(function (p) {\n                    p = hyphenate(p);\n                    $('[data-' + p + ']').foundation('_init');\n                  });\n                }\n\n                return object;\n              }(),\n              'string': function () {\n                function string() {\n                  plugins = hyphenate(plugins);\n                  $('[data-' + plugins + ']').foundation('_init');\n                }\n\n                return string;\n              }(),\n              'undefined': function () {\n                function undefined() {\n                  this['object'](Object.keys(_this._plugins));\n                }\n\n                return undefined;\n              }()\n            };\n            fns[type](plugins);\n          }\n        } catch (err) {\n          console.error(err);\n        } finally {\n          return plugins;\n        }\n      }\n\n      return reInit;\n    }(),\n\n    /**\n     * returns a random base-36 uid with namespacing\n     * @function\n     * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\n     * @param {String} namespace - name of plugin to be incorporated in uid, optional.\n     * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\n     * @returns {String} - unique id\n     */\n    GetYoDigits: function () {\n      function GetYoDigits(length, namespace) {\n        length = length || 6;\n        return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)).toString(36).slice(1) + (namespace ? '-' + namespace : '');\n      }\n\n      return GetYoDigits;\n    }(),\n    /**\n     * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n     * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n     * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n     */\n    reflow: function () {\n      function reflow(elem, plugins) {\n\n        // If plugins is undefined, just grab everything\n        if (typeof plugins === 'undefined') {\n          plugins = Object.keys(this._plugins);\n        }\n        // If plugins is a string, convert it to an array with one item\n        else if (typeof plugins === 'string') {\n            plugins = [plugins];\n          }\n\n        var _this = this;\n\n        // Iterate through each plugin\n        $.each(plugins, function (i, name) {\n          // Get the current plugin\n          var plugin = _this._plugins[name];\n\n          // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n          var $elem = $(elem).find('[data-' + name + ']').addBack('[data-' + name + ']');\n\n          // For each plugin found, initialize it\n          $elem.each(function () {\n            var $el = $(this),\n                opts = {};\n            // Don't double-dip on plugins\n            if ($el.data('zfPlugin')) {\n              console.warn(\"Tried to initialize \" + name + \" on an element that already has a Foundation plugin.\");\n              return;\n            }\n\n            if ($el.attr('data-options')) {\n              var thing = $el.attr('data-options').split(';').forEach(function (e, i) {\n                var opt = e.split(':').map(function (el) {\n                  return el.trim();\n                });\n                if (opt[0]) opts[opt[0]] = parseValue(opt[1]);\n              });\n            }\n            try {\n              $el.data('zfPlugin', new plugin($(this), opts));\n            } catch (er) {\n              console.error(er);\n            } finally {\n              return;\n            }\n          });\n        });\n      }\n\n      return reflow;\n    }(),\n    getFnName: functionName,\n    transitionend: function () {\n      function transitionend($elem) {\n        var transitions = {\n          'transition': 'transitionend',\n          'WebkitTransition': 'webkitTransitionEnd',\n          'MozTransition': 'transitionend',\n          'OTransition': 'otransitionend'\n        };\n        var elem = document.createElement('div'),\n            end;\n\n        for (var t in meteorBabelHelpers.sanitizeForInObject(transitions)) {\n          if (typeof elem.style[t] !== 'undefined') {\n            end = transitions[t];\n          }\n        }\n        if (end) {\n          return end;\n        } else {\n          end = setTimeout(function () {\n            $elem.triggerHandler('transitionend', [$elem]);\n          }, 1);\n          return 'transitionend';\n        }\n      }\n\n      return transitionend;\n    }()\n  };\n\n  Foundation.util = {\n    /**\n     * Function for applying a debounce effect to a function call.\n     * @function\n     * @param {Function} func - Function to be called at end of timeout.\n     * @param {Number} delay - Time in ms to delay the call of `func`.\n     * @returns function\n     */\n    throttle: function () {\n      function throttle(func, delay) {\n        var timer = null;\n\n        return function () {\n          var context = this,\n              args = arguments;\n\n          if (timer === null) {\n            timer = setTimeout(function () {\n              func.apply(context, args);\n              timer = null;\n            }, delay);\n          }\n        };\n      }\n\n      return throttle;\n    }()\n  };\n\n  // TODO: consider not making this a jQuery function\n  // TODO: need way to reflow vs. re-initialize\n  /**\n   * The Foundation jQuery method.\n   * @param {String|Array} method - An action to perform on the current jQuery object.\n   */\n  var foundation = function foundation(method) {\n    var type = typeof method === 'undefined' ? 'undefined' : (0, _typeof3['default'])(method),\n        $meta = $('meta.foundation-mq'),\n        $noJS = $('.no-js');\n\n    if (!$meta.length) {\n      $('<meta class=\"foundation-mq\">').appendTo(document.head);\n    }\n    if ($noJS.length) {\n      $noJS.removeClass('no-js');\n    }\n\n    if (type === 'undefined') {\n      //needs to initialize the Foundation object, or an individual plugin.\n      Foundation.MediaQuery._init();\n      Foundation.reflow(this);\n    } else if (type === 'string') {\n      //an individual method to invoke on a plugin or group of plugins\n      var args = Array.prototype.slice.call(arguments, 1); //collect all the arguments, if necessary\n      var plugClass = this.data('zfPlugin'); //determine the class of plugin\n\n      if (plugClass !== undefined && plugClass[method] !== undefined) {\n        //make sure both the class and method exist\n        if (this.length === 1) {\n          //if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n        } else {\n          this.each(function (i, el) {\n            //otherwise loop through the jQuery collection and invoke the method on each\n            plugClass[method].apply($(el).data('zfPlugin'), args);\n          });\n        }\n      } else {\n        //error for no class or no method\n        throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n      }\n    } else {\n      //error for invalid argument type\n      throw new TypeError('We\\'re sorry, ' + type + ' is not a valid parameter. You must use a string representing the method you wish to invoke.');\n    }\n    return this;\n  };\n\n  window.Foundation = Foundation;\n  $.fn.foundation = foundation;\n\n  // Polyfill for requestAnimationFrame\n  (function () {\n    if (!Date.now || !window.Date.now) window.Date.now = Date.now = function () {\n      return new Date().getTime();\n    };\n\n    var vendors = ['webkit', 'moz'];\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    }\n    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n      var lastTime = 0;\n      window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n          callback(lastTime = nextTime);\n        }, nextTime - now);\n      };\n      window.cancelAnimationFrame = clearTimeout;\n    }\n    /**\n     * Polyfill for performance.now, required by rAF\n     */\n    if (!window.performance || !window.performance.now) {\n      window.performance = {\n        start: Date.now(),\n        now: function () {\n          function now() {\n            return Date.now() - this.start;\n          }\n\n          return now;\n        }()\n      };\n    }\n  })();\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== 'function') {\n        // closest thing possible to the ECMAScript 5\n        // internal IsCallable function\n        throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function fNOP() {},\n          fBound = function fBound() {\n        return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      if (this.prototype) {\n        // native functions don't have a prototype\n        fNOP.prototype = this.prototype;\n      }\n      fBound.prototype = new fNOP();\n\n      return fBound;\n    };\n  }\n  // Polyfill to get the name of a function in IE9\n  function functionName(fn) {\n    if (Function.prototype.name === undefined) {\n      var funcNameRegex = /function\\s([^(]{1,})\\(/;\n      var results = funcNameRegex.exec(fn.toString());\n      return results && results.length > 1 ? results[1].trim() : \"\";\n    } else if (fn.prototype === undefined) {\n      return fn.constructor.name;\n    } else {\n      return fn.prototype.constructor.name;\n    }\n  }\n  function parseValue(str) {\n    if (/true/.test(str)) return true;else if (/false/.test(str)) return false;else if (!isNaN(str * 1)) return parseFloat(str);\n    return str;\n  }\n  // Convert PascalCase to kebab-case\n  // Thank you: http://stackoverflow.com/a/8955580\n  function hyphenate(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/js/foundation.core.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/js/foundation.core.js.map","sourcesContent":["!function($) {\n\n\"use strict\";\n\nvar FOUNDATION_VERSION = '6.2.2';\n\n// Global Foundation object\n// This is attached to the window, or used as a module for AMD/Browserify\nvar Foundation = {\n  version: FOUNDATION_VERSION,\n\n  /**\n   * Stores initialized plugins.\n   */\n  _plugins: {},\n\n  /**\n   * Stores generated unique ids for plugin instances\n   */\n  _uuids: [],\n\n  /**\n   * Returns a boolean for RTL support\n   */\n  rtl: function(){\n    return $('html').attr('dir') === 'rtl';\n  },\n  /**\n   * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n   * @param {Object} plugin - The constructor of the plugin.\n   */\n  plugin: function(plugin, name) {\n    // Object key to use when adding to global Foundation object\n    // Examples: Foundation.Reveal, Foundation.OffCanvas\n    var className = (name || functionName(plugin));\n    // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n    // Examples: data-reveal, data-off-canvas\n    var attrName  = hyphenate(className);\n\n    // Add to the Foundation object and the plugins list (for reflowing)\n    this._plugins[attrName] = this[className] = plugin;\n  },\n  /**\n   * @function\n   * Populates the _uuids array with pointers to each individual plugin instance.\n   * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n   * Also fires the initialization event for each plugin, consolidating repetitive code.\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n   * @param {String} name - the name of the plugin, passed as a camelCased string.\n   * @fires Plugin#init\n   */\n  registerPlugin: function(plugin, name){\n    var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n    plugin.uuid = this.GetYoDigits(6, pluginName);\n\n    if(!plugin.$element.attr(`data-${pluginName}`)){ plugin.$element.attr(`data-${pluginName}`, plugin.uuid); }\n    if(!plugin.$element.data('zfPlugin')){ plugin.$element.data('zfPlugin', plugin); }\n          /**\n           * Fires when the plugin has initialized.\n           * @event Plugin#init\n           */\n    plugin.$element.trigger(`init.zf.${pluginName}`);\n\n    this._uuids.push(plugin.uuid);\n\n    return;\n  },\n  /**\n   * @function\n   * Removes the plugins uuid from the _uuids array.\n   * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n   * Also fires the destroyed event for the plugin, consolidating repetitive code.\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n   * @fires Plugin#destroyed\n   */\n  unregisterPlugin: function(plugin){\n    var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n    this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n    plugin.$element.removeAttr(`data-${pluginName}`).removeData('zfPlugin')\n          /**\n           * Fires when the plugin has been destroyed.\n           * @event Plugin#destroyed\n           */\n          .trigger(`destroyed.zf.${pluginName}`);\n    for(var prop in plugin){\n      plugin[prop] = null;//clean up script to prep for garbage collection.\n    }\n    return;\n  },\n\n  /**\n   * @function\n   * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n   * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n   * @default If no argument is passed, reflow all currently active plugins.\n   */\n   reInit: function(plugins){\n     var isJQ = plugins instanceof $;\n     try{\n       if(isJQ){\n         plugins.each(function(){\n           $(this).data('zfPlugin')._init();\n         });\n       }else{\n         var type = typeof plugins,\n         _this = this,\n         fns = {\n           'object': function(plgs){\n             plgs.forEach(function(p){\n               p = hyphenate(p);\n               $('[data-'+ p +']').foundation('_init');\n             });\n           },\n           'string': function(){\n             plugins = hyphenate(plugins);\n             $('[data-'+ plugins +']').foundation('_init');\n           },\n           'undefined': function(){\n             this['object'](Object.keys(_this._plugins));\n           }\n         };\n         fns[type](plugins);\n       }\n     }catch(err){\n       console.error(err);\n     }finally{\n       return plugins;\n     }\n   },\n\n  /**\n   * returns a random base-36 uid with namespacing\n   * @function\n   * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\n   * @param {String} namespace - name of plugin to be incorporated in uid, optional.\n   * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\n   * @returns {String} - unique id\n   */\n  GetYoDigits: function(length, namespace){\n    length = length || 6;\n    return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1) + (namespace ? `-${namespace}` : '');\n  },\n  /**\n   * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n   * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n   * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n   */\n  reflow: function(elem, plugins) {\n\n    // If plugins is undefined, just grab everything\n    if (typeof plugins === 'undefined') {\n      plugins = Object.keys(this._plugins);\n    }\n    // If plugins is a string, convert it to an array with one item\n    else if (typeof plugins === 'string') {\n      plugins = [plugins];\n    }\n\n    var _this = this;\n\n    // Iterate through each plugin\n    $.each(plugins, function(i, name) {\n      // Get the current plugin\n      var plugin = _this._plugins[name];\n\n      // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n      var $elem = $(elem).find('[data-'+name+']').addBack('[data-'+name+']');\n\n      // For each plugin found, initialize it\n      $elem.each(function() {\n        var $el = $(this),\n            opts = {};\n        // Don't double-dip on plugins\n        if ($el.data('zfPlugin')) {\n          console.warn(\"Tried to initialize \"+name+\" on an element that already has a Foundation plugin.\");\n          return;\n        }\n\n        if($el.attr('data-options')){\n          var thing = $el.attr('data-options').split(';').forEach(function(e, i){\n            var opt = e.split(':').map(function(el){ return el.trim(); });\n            if(opt[0]) opts[opt[0]] = parseValue(opt[1]);\n          });\n        }\n        try{\n          $el.data('zfPlugin', new plugin($(this), opts));\n        }catch(er){\n          console.error(er);\n        }finally{\n          return;\n        }\n      });\n    });\n  },\n  getFnName: functionName,\n  transitionend: function($elem){\n    var transitions = {\n      'transition': 'transitionend',\n      'WebkitTransition': 'webkitTransitionEnd',\n      'MozTransition': 'transitionend',\n      'OTransition': 'otransitionend'\n    };\n    var elem = document.createElement('div'),\n        end;\n\n    for (var t in transitions){\n      if (typeof elem.style[t] !== 'undefined'){\n        end = transitions[t];\n      }\n    }\n    if(end){\n      return end;\n    }else{\n      end = setTimeout(function(){\n        $elem.triggerHandler('transitionend', [$elem]);\n      }, 1);\n      return 'transitionend';\n    }\n  }\n};\n\nFoundation.util = {\n  /**\n   * Function for applying a debounce effect to a function call.\n   * @function\n   * @param {Function} func - Function to be called at end of timeout.\n   * @param {Number} delay - Time in ms to delay the call of `func`.\n   * @returns function\n   */\n  throttle: function (func, delay) {\n    var timer = null;\n\n    return function () {\n      var context = this, args = arguments;\n\n      if (timer === null) {\n        timer = setTimeout(function () {\n          func.apply(context, args);\n          timer = null;\n        }, delay);\n      }\n    };\n  }\n};\n\n// TODO: consider not making this a jQuery function\n// TODO: need way to reflow vs. re-initialize\n/**\n * The Foundation jQuery method.\n * @param {String|Array} method - An action to perform on the current jQuery object.\n */\nvar foundation = function(method) {\n  var type = typeof method,\n      $meta = $('meta.foundation-mq'),\n      $noJS = $('.no-js');\n\n  if(!$meta.length){\n    $('<meta class=\"foundation-mq\">').appendTo(document.head);\n  }\n  if($noJS.length){\n    $noJS.removeClass('no-js');\n  }\n\n  if(type === 'undefined'){//needs to initialize the Foundation object, or an individual plugin.\n    Foundation.MediaQuery._init();\n    Foundation.reflow(this);\n  }else if(type === 'string'){//an individual method to invoke on a plugin or group of plugins\n    var args = Array.prototype.slice.call(arguments, 1);//collect all the arguments, if necessary\n    var plugClass = this.data('zfPlugin');//determine the class of plugin\n\n    if(plugClass !== undefined && plugClass[method] !== undefined){//make sure both the class and method exist\n      if(this.length === 1){//if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n      }else{\n        this.each(function(i, el){//otherwise loop through the jQuery collection and invoke the method on each\n          plugClass[method].apply($(el).data('zfPlugin'), args);\n        });\n      }\n    }else{//error for no class or no method\n      throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n    }\n  }else{//error for invalid argument type\n    throw new TypeError(`We're sorry, ${type} is not a valid parameter. You must use a string representing the method you wish to invoke.`);\n  }\n  return this;\n};\n\nwindow.Foundation = Foundation;\n$.fn.foundation = foundation;\n\n// Polyfill for requestAnimationFrame\n(function() {\n  if (!Date.now || !window.Date.now)\n    window.Date.now = Date.now = function() { return new Date().getTime(); };\n\n  var vendors = ['webkit', 'moz'];\n  for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp+'RequestAnimationFrame'];\n      window.cancelAnimationFrame = (window[vp+'CancelAnimationFrame']\n                                 || window[vp+'CancelRequestAnimationFrame']);\n  }\n  if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)\n    || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    window.requestAnimationFrame = function(callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function() { callback(lastTime = nextTime); },\n                          nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n  }\n  /**\n   * Polyfill for performance.now, required by rAF\n   */\n  if(!window.performance || !window.performance.now){\n    window.performance = {\n      start: Date.now(),\n      now: function(){ return Date.now() - this.start; }\n    };\n  }\n})();\nif (!Function.prototype.bind) {\n  Function.prototype.bind = function(oThis) {\n    if (typeof this !== 'function') {\n      // closest thing possible to the ECMAScript 5\n      // internal IsCallable function\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n    }\n\n    var aArgs   = Array.prototype.slice.call(arguments, 1),\n        fToBind = this,\n        fNOP    = function() {},\n        fBound  = function() {\n          return fToBind.apply(this instanceof fNOP\n                 ? this\n                 : oThis,\n                 aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n    if (this.prototype) {\n      // native functions don't have a prototype\n      fNOP.prototype = this.prototype;\n    }\n    fBound.prototype = new fNOP();\n\n    return fBound;\n  };\n}\n// Polyfill to get the name of a function in IE9\nfunction functionName(fn) {\n  if (Function.prototype.name === undefined) {\n    var funcNameRegex = /function\\s([^(]{1,})\\(/;\n    var results = (funcNameRegex).exec((fn).toString());\n    return (results && results.length > 1) ? results[1].trim() : \"\";\n  }\n  else if (fn.prototype === undefined) {\n    return fn.constructor.name;\n  }\n  else {\n    return fn.prototype.constructor.name;\n  }\n}\nfunction parseValue(str){\n  if(/true/.test(str)) return true;\n  else if(/false/.test(str)) return false;\n  else if(!isNaN(str * 1)) return parseFloat(str);\n  return str;\n}\n// Convert PascalCase to kebab-case\n// Thank you: http://stackoverflow.com/a/8955580\nfunction hyphenate(str) {\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\n}(jQuery);\n"]},"hash":"ba6eaf407636b4f465076336f79f4c4d1555267d"}
