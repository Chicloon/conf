{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/vendor/jquery/src/core/ready.js","filenameRelative":"/packages/zurb:foundation-sites/vendor/jquery/src/core/ready.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/vendor/jquery/src/core/ready.js.map","sourceFileName":"/packages/zurb:foundation-sites/vendor/jquery/src/core/ready.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"ready"},"ignored":false,"code":"define([\"../core\", \"../var/document\", \"../core/init\", \"../deferred\"], function (jQuery, document) {\n\n\t// The deferred used on DOM ready\n\tvar readyList;\n\n\tjQuery.fn.ready = function (fn) {\n\n\t\t// Add the callback\n\t\tjQuery.ready.promise().done(fn);\n\n\t\treturn this;\n\t};\n\n\tjQuery.extend({\n\n\t\t// Is the DOM ready to be used? Set to true once it occurs.\n\t\tisReady: false,\n\n\t\t// A counter to track how many items to wait for before\n\t\t// the ready event fires. See #6781\n\t\treadyWait: 1,\n\n\t\t// Hold (or release) the ready event\n\t\tholdReady: function () {\n\t\t\tfunction holdReady(hold) {\n\t\t\t\tif (hold) {\n\t\t\t\t\tjQuery.readyWait++;\n\t\t\t\t} else {\n\t\t\t\t\tjQuery.ready(true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn holdReady;\n\t\t}(),\n\n\t\t// Handle when the DOM is ready\n\t\tready: function () {\n\t\t\tfunction ready(wait) {\n\n\t\t\t\t// Abort if there are pending holds or we're already ready\n\t\t\t\tif (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Remember that the DOM is ready\n\t\t\t\tjQuery.isReady = true;\n\n\t\t\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\t\t\tif (wait !== true && --jQuery.readyWait > 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// If there are functions bound, to execute\n\t\t\t\treadyList.resolveWith(document, [jQuery]);\n\n\t\t\t\t// Trigger any bound ready events\n\t\t\t\tif (jQuery.fn.triggerHandler) {\n\t\t\t\t\tjQuery(document).triggerHandler(\"ready\");\n\t\t\t\t\tjQuery(document).off(\"ready\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ready;\n\t\t}()\n\t});\n\n\t/**\n  * The ready event handler and self cleanup method\n  */\n\tfunction completed() {\n\t\tdocument.removeEventListener(\"DOMContentLoaded\", completed);\n\t\twindow.removeEventListener(\"load\", completed);\n\t\tjQuery.ready();\n\t}\n\n\tjQuery.ready.promise = function (obj) {\n\t\tif (!readyList) {\n\n\t\t\treadyList = jQuery.Deferred();\n\n\t\t\t// Catch cases where $(document).ready() is called\n\t\t\t// after the browser event has already occurred.\n\t\t\t// Support: IE9-10 only\n\t\t\t// Older IE sometimes signals \"interactive\" too soon\n\t\t\tif (document.readyState === \"complete\" || document.readyState !== \"loading\" && !document.documentElement.doScroll) {\n\n\t\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\t\twindow.setTimeout(jQuery.ready);\n\t\t\t} else {\n\n\t\t\t\t// Use the handy event callback\n\t\t\t\tdocument.addEventListener(\"DOMContentLoaded\", completed);\n\n\t\t\t\t// A fallback to window.onload, that will always work\n\t\t\t\twindow.addEventListener(\"load\", completed);\n\t\t\t}\n\t\t}\n\t\treturn readyList.promise(obj);\n\t};\n\n\t// Kick off the DOM ready check even if the user does not\n\tjQuery.ready.promise();\n});","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/vendor/jquery/src/core/ready.js"],"names":[],"mappings":"AAAA,OAAQ,CACP,SADO,EAEP,iBAFO,EAGP,cAHO,EAIP,aAJO,CAAR,EAKG,UAAU,MAAV,EAAkB,QAAlB,EAA6B;;;AAGhC,KAAI,SAAJ;;AAEA,QAAO,EAAP,CAAU,KAAV,GAAkB,UAAU,EAAV,EAAe;;;AAGhC,SAAO,KAAP,CAAa,OAAb,GAAuB,IAAvB,CAA6B,EAA7B;;AAEA,SAAO,IAAP;AACA,EAND;;AAQA,QAAO,MAAP,CAAe;;;AAGd,WAAS,KAHK;;;;AAOd,aAAW,CAPG;;;AAUd;AAAW,sBAAU,IAAV,EAAiB;AAC3B,QAAK,IAAL,EAAY;AACX,YAAO,SAAP;AACA,KAFD,MAEO;AACN,YAAO,KAAP,CAAc,IAAd;AACA;AACD;;AAND;AAAA,KAVc;;;AAmBd;AAAO,kBAAU,IAAV,EAAiB;;;AAGvB,QAAK,SAAS,IAAT,GAAgB,EAAE,OAAO,SAAzB,GAAqC,OAAO,OAAjD,EAA2D;AAC1D;AACA;;;AAGD,WAAO,OAAP,GAAiB,IAAjB;;;AAGA,QAAK,SAAS,IAAT,IAAiB,EAAE,OAAO,SAAT,GAAqB,CAA3C,EAA+C;AAC9C;AACA;;;AAGD,cAAU,WAAV,CAAuB,QAAvB,EAAiC,CAAE,MAAF,CAAjC;;;AAGA,QAAK,OAAO,EAAP,CAAU,cAAf,EAAgC;AAC/B,YAAQ,QAAR,EAAmB,cAAnB,CAAmC,OAAnC;AACA,YAAQ,QAAR,EAAmB,GAAnB,CAAwB,OAAxB;AACA;AACD;;AAvBD;AAAA;AAnBc,EAAf;;;;;AAgDA,UAAS,SAAT,GAAqB;AACpB,WAAS,mBAAT,CAA8B,kBAA9B,EAAkD,SAAlD;AACA,SAAO,mBAAP,CAA4B,MAA5B,EAAoC,SAApC;AACA,SAAO,KAAP;AACA;;AAED,QAAO,KAAP,CAAa,OAAb,GAAuB,UAAU,GAAV,EAAgB;AACtC,MAAK,CAAC,SAAN,EAAkB;;AAEjB,eAAY,OAAO,QAAP,EAAZ;;;;;;AAMA,OAAK,SAAS,UAAT,KAAwB,UAAxB,IACF,SAAS,UAAT,KAAwB,SAAxB,IAAqC,CAAC,SAAS,eAAT,CAAyB,QADlE,EAC+E;;;AAG9E,WAAO,UAAP,CAAmB,OAAO,KAA1B;AAEA,IAND,MAMO;;;AAGN,aAAS,gBAAT,CAA2B,kBAA3B,EAA+C,SAA/C;;;AAGA,WAAO,gBAAP,CAAyB,MAAzB,EAAiC,SAAjC;AACA;AACD;AACD,SAAO,UAAU,OAAV,CAAmB,GAAnB,CAAP;AACA,EAzBD;;;AA4BA,QAAO,KAAP,CAAa,OAAb;AAEC,CAtGD","file":"/packages/zurb:foundation-sites/vendor/jquery/src/core/ready.js.map","sourcesContent":["define( [\n\t\"../core\",\n\t\"../var/document\",\n\t\"../core/init\",\n\t\"../deferred\"\n], function( jQuery, document ) {\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n} );\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called\n\t\t// after the browser event has already occurred.\n\t\t// Support: IE9-10 only\n\t\t// Older IE sometimes signals \"interactive\" too soon\n\t\tif ( document.readyState === \"complete\" ||\n\t\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\twindow.setTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n} );\n"]},"hash":"f7fe62a0193267854ec3f633e56ded487f2279a3"}
