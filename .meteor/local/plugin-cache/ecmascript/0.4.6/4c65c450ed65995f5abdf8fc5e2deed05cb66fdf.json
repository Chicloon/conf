{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/dist/plugins/foundation.dropdown.js","filenameRelative":"/packages/zurb:foundation-sites/dist/plugins/foundation.dropdown.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/dist/plugins/foundation.dropdown.js.map","sourceFileName":"/packages/zurb:foundation-sites/dist/plugins/foundation.dropdown.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.dropdown"},"ignored":false,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n!function ($) {\n\n  /**\n   * Dropdown module.\n   * @module foundation.dropdown\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   */\n\n  var Dropdown = function () {\n    /**\n     * Creates a new instance of a dropdown.\n     * @class\n     * @param {jQuery} element - jQuery object to make into a dropdown.\n     *        Object should be of the dropdown panel, rather than its anchor.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Dropdown(element, options) {\n      _classCallCheck(this, Dropdown);\n\n      this.$element = element;\n      this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Dropdown');\n      Foundation.Keyboard.register('Dropdown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close',\n        'TAB': 'tab_forward',\n        'SHIFT_TAB': 'tab_backward'\n      });\n    }\n\n    /**\n     * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\n     * @function\n     * @private\n     */\n\n    _createClass(Dropdown, [{\n      key: '_init',\n      value: function () {\n        function _init() {\n          var $id = this.$element.attr('id');\n\n          this.$anchor = $('[data-toggle=\"' + $id + '\"]') || $('[data-open=\"' + $id + '\"]');\n          this.$anchor.attr({\n            'aria-controls': $id,\n            'data-is-focus': false,\n            'data-yeti-box': $id,\n            'aria-haspopup': true,\n            'aria-expanded': false\n\n          });\n\n          this.options.positionClass = this.getPositionClass();\n          this.counter = 4;\n          this.usedPositions = [];\n          this.$element.attr({\n            'aria-hidden': 'true',\n            'data-yeti-box': $id,\n            'data-resize': $id,\n            'aria-labelledby': this.$anchor[0].id || Foundation.GetYoDigits(6, 'dd-anchor')\n          });\n          this._events();\n        }\n\n        return _init;\n      }()\n\n      /**\n       * Helper function to determine current orientation of dropdown pane.\n       * @function\n       * @returns {String} position - string value of a position class.\n       */\n\n    }, {\n      key: 'getPositionClass',\n      value: function () {\n        function getPositionClass() {\n          var verticalPosition = this.$element[0].className.match(/(top|left|right|bottom)/g);\n          verticalPosition = verticalPosition ? verticalPosition[0] : '';\n          var horizontalPosition = /float-(\\S+)\\s/.exec(this.$anchor[0].className);\n          horizontalPosition = horizontalPosition ? horizontalPosition[1] : '';\n          var position = horizontalPosition ? horizontalPosition + ' ' + verticalPosition : verticalPosition;\n          return position;\n        }\n\n        return getPositionClass;\n      }()\n\n      /**\n       * Adjusts the dropdown panes orientation by adding/removing positioning classes.\n       * @function\n       * @private\n       * @param {String} position - position class to remove.\n       */\n\n    }, {\n      key: '_reposition',\n      value: function () {\n        function _reposition(position) {\n          this.usedPositions.push(position ? position : 'bottom');\n          //default, try switching to opposite side\n          if (!position && this.usedPositions.indexOf('top') < 0) {\n            this.$element.addClass('top');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n            this.$element.removeClass(position).addClass('right');\n          } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n            this.$element.removeClass(position).addClass('left');\n          }\n\n          //if default change didn't work, try bottom or left first\n          else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n              this.$element.addClass('left');\n            } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n              this.$element.removeClass(position).addClass('left');\n            } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n              this.$element.removeClass(position);\n            } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n              this.$element.removeClass(position);\n            }\n            //if nothing cleared, set to bottom\n            else {\n                this.$element.removeClass(position);\n              }\n          this.classChanged = true;\n          this.counter--;\n        }\n\n        return _reposition;\n      }()\n\n      /**\n       * Sets the position and orientation of the dropdown pane, checks for collisions.\n       * Recursively calls itself if a collision is detected, with a new position class.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_setPosition',\n      value: function () {\n        function _setPosition() {\n          if (this.$anchor.attr('aria-expanded') === 'false') {\n            return false;\n          }\n          var position = this.getPositionClass(),\n              $eleDims = Foundation.Box.GetDimensions(this.$element),\n              $anchorDims = Foundation.Box.GetDimensions(this.$anchor),\n              _this = this,\n              direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n              param = direction === 'top' ? 'height' : 'width',\n              offset = param === 'height' ? this.options.vOffset : this.options.hOffset;\n\n          if ($eleDims.width >= $eleDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.$element)) {\n            this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n              'width': $eleDims.windowDims.width - this.options.hOffset * 2,\n              'height': 'auto'\n            });\n            this.classChanged = true;\n            return false;\n          }\n\n          this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, position, this.options.vOffset, this.options.hOffset));\n\n          while (!Foundation.Box.ImNotTouchingYou(this.$element, false, true) && this.counter) {\n            this._reposition(position);\n            this._setPosition();\n          }\n        }\n\n        return _setPosition;\n      }()\n\n      /**\n       * Adds event listeners to the element utilizing the triggers utility library.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function () {\n        function _events() {\n          var _this = this;\n          this.$element.on({\n            'open.zf.trigger': this.open.bind(this),\n            'close.zf.trigger': this.close.bind(this),\n            'toggle.zf.trigger': this.toggle.bind(this),\n            'resizeme.zf.trigger': this._setPosition.bind(this)\n          });\n\n          if (this.options.hover) {\n            this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function () {\n                _this.open();\n                _this.$anchor.data('hover', true);\n              }, _this.options.hoverDelay);\n            }).on('mouseleave.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function () {\n                _this.close();\n                _this.$anchor.data('hover', false);\n              }, _this.options.hoverDelay);\n            });\n            if (this.options.hoverPane) {\n              this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n                clearTimeout(_this.timeout);\n              }).on('mouseleave.zf.dropdown', function () {\n                clearTimeout(_this.timeout);\n                _this.timeout = setTimeout(function () {\n                  _this.close();\n                  _this.$anchor.data('hover', false);\n                }, _this.options.hoverDelay);\n              });\n            }\n          }\n          this.$anchor.add(this.$element).on('keydown.zf.dropdown', function (e) {\n\n            var $target = $(this),\n                visibleFocusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n\n            Foundation.Keyboard.handleKey(e, 'Dropdown', {\n              tab_forward: function () {\n                function tab_forward() {\n                  if (_this.$element.find(':focus').is(visibleFocusableElements.eq(-1))) {\n                    // left modal downwards, setting focus to first element\n                    if (_this.options.trapFocus) {\n                      // if focus shall be trapped\n                      visibleFocusableElements.eq(0).focus();\n                      e.preventDefault();\n                    } else {\n                      // if focus is not trapped, close dropdown on focus out\n                      _this.close();\n                    }\n                  }\n                }\n\n                return tab_forward;\n              }(),\n              tab_backward: function () {\n                function tab_backward() {\n                  if (_this.$element.find(':focus').is(visibleFocusableElements.eq(0)) || _this.$element.is(':focus')) {\n                    // left modal upwards, setting focus to last element\n                    if (_this.options.trapFocus) {\n                      // if focus shall be trapped\n                      visibleFocusableElements.eq(-1).focus();\n                      e.preventDefault();\n                    } else {\n                      // if focus is not trapped, close dropdown on focus out\n                      _this.close();\n                    }\n                  }\n                }\n\n                return tab_backward;\n              }(),\n              open: function () {\n                function open() {\n                  if ($target.is(_this.$anchor)) {\n                    _this.open();\n                    _this.$element.attr('tabindex', -1).focus();\n                    e.preventDefault();\n                  }\n                }\n\n                return open;\n              }(),\n              close: function () {\n                function close() {\n                  _this.close();\n                  _this.$anchor.focus();\n                }\n\n                return close;\n              }()\n            });\n          });\n        }\n\n        return _events;\n      }()\n\n      /**\n       * Adds an event handler to the body to close any dropdowns on a click.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBodyHandler',\n      value: function () {\n        function _addBodyHandler() {\n          var $body = $(document.body).not(this.$element),\n              _this = this;\n          $body.off('click.zf.dropdown').on('click.zf.dropdown', function (e) {\n            if (_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\n              return;\n            }\n            if (_this.$element.find(e.target).length) {\n              return;\n            }\n            _this.close();\n            $body.off('click.zf.dropdown');\n          });\n        }\n\n        return _addBodyHandler;\n      }()\n\n      /**\n       * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\n       * @function\n       * @fires Dropdown#closeme\n       * @fires Dropdown#show\n       */\n\n    }, {\n      key: 'open',\n      value: function () {\n        function open() {\n          // var _this = this;\n          /**\n           * Fires to close other open dropdowns\n           * @event Dropdown#closeme\n           */\n          this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\n          this.$anchor.addClass('hover').attr({ 'aria-expanded': true });\n          // this.$element/*.show()*/;\n          this._setPosition();\n          this.$element.addClass('is-open').attr({ 'aria-hidden': false });\n\n          if (this.options.autoFocus) {\n            var $focusable = Foundation.Keyboard.findFocusable(this.$element);\n            if ($focusable.length) {\n              $focusable.eq(0).focus();\n            }\n          }\n\n          if (this.options.closeOnClick) {\n            this._addBodyHandler();\n          }\n\n          /**\n           * Fires once the dropdown is visible.\n           * @event Dropdown#show\n           */\n          this.$element.trigger('show.zf.dropdown', [this.$element]);\n        }\n\n        return open;\n      }()\n\n      /**\n       * Closes the open dropdown pane.\n       * @function\n       * @fires Dropdown#hide\n       */\n\n    }, {\n      key: 'close',\n      value: function () {\n        function close() {\n          if (!this.$element.hasClass('is-open')) {\n            return false;\n          }\n          this.$element.removeClass('is-open').attr({ 'aria-hidden': true });\n\n          this.$anchor.removeClass('hover').attr('aria-expanded', false);\n\n          if (this.classChanged) {\n            var curPositionClass = this.getPositionClass();\n            if (curPositionClass) {\n              this.$element.removeClass(curPositionClass);\n            }\n            this.$element.addClass(this.options.positionClass)\n            /*.hide()*/.css({ height: '', width: '' });\n            this.classChanged = false;\n            this.counter = 4;\n            this.usedPositions.length = 0;\n          }\n          this.$element.trigger('hide.zf.dropdown', [this.$element]);\n        }\n\n        return close;\n      }()\n\n      /**\n       * Toggles the dropdown pane's visibility.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function () {\n        function toggle() {\n          if (this.$element.hasClass('is-open')) {\n            if (this.$anchor.data('hover')) return;\n            this.close();\n          } else {\n            this.open();\n          }\n        }\n\n        return toggle;\n      }()\n\n      /**\n       * Destroys the dropdown.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function () {\n        function destroy() {\n          this.$element.off('.zf.trigger').hide();\n          this.$anchor.off('.zf.dropdown');\n\n          Foundation.unregisterPlugin(this);\n        }\n\n        return destroy;\n      }()\n    }]);\n\n    return Dropdown;\n  }();\n\n  Dropdown.defaults = {\n    /**\n     * Amount of time to delay opening a submenu on hover event.\n     * @option\n     * @example 250\n     */\n    hoverDelay: 250,\n    /**\n     * Allow submenus to open on hover events\n     * @option\n     * @example false\n     */\n    hover: false,\n    /**\n     * Don't close dropdown when hovering over dropdown pane\n     * @option\n     * @example true\n     */\n    hoverPane: false,\n    /**\n     * Number of pixels between the dropdown pane and the triggering element on open.\n     * @option\n     * @example 1\n     */\n    vOffset: 1,\n    /**\n     * Number of pixels between the dropdown pane and the triggering element on open.\n     * @option\n     * @example 1\n     */\n    hOffset: 1,\n    /**\n     * Class applied to adjust open position. JS will test and fill this in.\n     * @option\n     * @example 'top'\n     */\n    positionClass: '',\n    /**\n     * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\n     * @option\n     * @example false\n     */\n    trapFocus: false,\n    /**\n     * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\n     * @option\n     * @example true\n     */\n    autoFocus: false,\n    /**\n     * Allows a click on the body to close the dropdown.\n     * @option\n     * @example false\n     */\n    closeOnClick: false\n  };\n\n  // Window exports\n  Foundation.plugin(Dropdown, 'Dropdown');\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/dist/plugins/foundation.dropdown.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,YAAY;AAAE,WAAS,gBAAT,CAA0B,MAA1B,EAAkC,KAAlC,EAAyC;AAAE,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAAM,MAA1B,EAAkC,GAAlC,EAAuC;AAAE,UAAI,aAAa,MAAM,CAAN,CAAjB,CAA2B,WAAW,UAAX,GAAwB,WAAW,UAAX,IAAyB,KAAjD,CAAwD,WAAW,YAAX,GAA0B,IAA1B,CAAgC,IAAI,WAAW,UAAf,EAA2B,WAAW,QAAX,GAAsB,IAAtB,CAA4B,OAAO,cAAP,CAAsB,MAAtB,EAA8B,WAAW,GAAzC,EAA8C,UAA9C;AAA4D;AAAE,GAAC,OAAO,UAAU,WAAV,EAAuB,UAAvB,EAAmC,WAAnC,EAAgD;AAAE,QAAI,UAAJ,EAAgB,iBAAiB,YAAY,SAA7B,EAAwC,UAAxC,EAAqD,IAAI,WAAJ,EAAiB,iBAAiB,WAAjB,EAA8B,WAA9B,EAA4C,OAAO,WAAP;AAAqB,GAAhN;AAAmN,CAA9hB,EAAnB;;AAEA,SAAS,eAAT,CAAyB,QAAzB,EAAmC,WAAnC,EAAgD;AAAE,MAAI,EAAE,oBAAoB,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAI,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,CAAC,UAAU,CAAV,EAAa;;;;;;;;;;AAUZ,MAAI,WAAW,YAAY;;;;;;;;;AASzB,aAAS,QAAT,CAAkB,OAAlB,EAA2B,OAA3B,EAAoC;AAClC,sBAAgB,IAAhB,EAAsB,QAAtB;;AAEA,WAAK,QAAL,GAAgB,OAAhB;AACA,WAAK,OAAL,GAAe,EAAE,MAAF,CAAS,EAAT,EAAa,SAAS,QAAtB,EAAgC,KAAK,QAAL,CAAc,IAAd,EAAhC,EAAsD,OAAtD,CAAf;AACA,WAAK,KAAL;;AAEA,iBAAW,cAAX,CAA0B,IAA1B,EAAgC,UAAhC;AACA,iBAAW,QAAX,CAAoB,QAApB,CAA6B,UAA7B,EAAyC;AACvC,iBAAS,MAD8B;AAEvC,iBAAS,MAF8B;AAGvC,kBAAU,OAH6B;AAIvC,eAAO,aAJgC;AAKvC,qBAAa;AAL0B,OAAzC;AAOD;;;;;;;;AASD,iBAAa,QAAb,EAAuB,CAAC;AACtB,WAAK,OADiB;AAEtB;AAAO,iBAAS,KAAT,GAAiB;AACtB,cAAI,MAAM,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB,CAAV;;AAEA,eAAK,OAAL,GAAe,EAAE,mBAAmB,GAAnB,GAAyB,IAA3B,KAAoC,EAAE,iBAAiB,GAAjB,GAAuB,IAAzB,CAAnD;AACA,eAAK,OAAL,CAAa,IAAb,CAAkB;AAChB,6BAAiB,GADD;AAEhB,6BAAiB,KAFD;AAGhB,6BAAiB,GAHD;AAIhB,6BAAiB,IAJD;AAKhB,6BAAiB;;AALD,WAAlB;;AASA,eAAK,OAAL,CAAa,aAAb,GAA6B,KAAK,gBAAL,EAA7B;AACA,eAAK,OAAL,GAAe,CAAf;AACA,eAAK,aAAL,GAAqB,EAArB;AACA,eAAK,QAAL,CAAc,IAAd,CAAmB;AACjB,2BAAe,MADE;AAEjB,6BAAiB,GAFA;AAGjB,2BAAe,GAHE;AAIjB,+BAAmB,KAAK,OAAL,CAAa,CAAb,EAAgB,EAAhB,IAAsB,WAAW,WAAX,CAAuB,CAAvB,EAA0B,WAA1B;AAJxB,WAAnB;AAMA,eAAK,OAAL;AACD;;AAvBD,eAAgB,KAAhB;AAAA;;;;;;;;AAFsB,KAAD,EAiCpB;AACD,WAAK,kBADJ;AAED;AAAO,iBAAS,gBAAT,GAA4B;AACjC,cAAI,mBAAmB,KAAK,QAAL,CAAc,CAAd,EAAiB,SAAjB,CAA2B,KAA3B,CAAiC,0BAAjC,CAAvB;AACA,6BAAmB,mBAAmB,iBAAiB,CAAjB,CAAnB,GAAyC,EAA5D;AACA,cAAI,qBAAqB,gBAAgB,IAAhB,CAAqB,KAAK,OAAL,CAAa,CAAb,EAAgB,SAArC,CAAzB;AACA,+BAAqB,qBAAqB,mBAAmB,CAAnB,CAArB,GAA6C,EAAlE;AACA,cAAI,WAAW,qBAAqB,qBAAqB,GAArB,GAA2B,gBAAhD,GAAmE,gBAAlF;AACA,iBAAO,QAAP;AACD;;AAPD,eAAgB,gBAAhB;AAAA;;;;;;;;;AAFC,KAjCoB,EAmDpB;AACD,WAAK,aADJ;AAED;AAAO,iBAAS,WAAT,CAAqB,QAArB,EAA+B;AACpC,eAAK,aAAL,CAAmB,IAAnB,CAAwB,WAAW,QAAX,GAAsB,QAA9C;;AAEA,cAAI,CAAC,QAAD,IAAa,KAAK,aAAL,CAAmB,OAAnB,CAA2B,KAA3B,IAAoC,CAArD,EAAwD;AACtD,iBAAK,QAAL,CAAc,QAAd,CAAuB,KAAvB;AACD,WAFD,MAEO,IAAI,aAAa,KAAb,IAAsB,KAAK,aAAL,CAAmB,OAAnB,CAA2B,QAA3B,IAAuC,CAAjE,EAAoE;AACzE,iBAAK,QAAL,CAAc,WAAd,CAA0B,QAA1B;AACD,WAFM,MAEA,IAAI,aAAa,MAAb,IAAuB,KAAK,aAAL,CAAmB,OAAnB,CAA2B,OAA3B,IAAsC,CAAjE,EAAoE;AACzE,iBAAK,QAAL,CAAc,WAAd,CAA0B,QAA1B,EAAoC,QAApC,CAA6C,OAA7C;AACD,WAFM,MAEA,IAAI,aAAa,OAAb,IAAwB,KAAK,aAAL,CAAmB,OAAnB,CAA2B,MAA3B,IAAqC,CAAjE,EAAoE;AACzE,iBAAK,QAAL,CAAc,WAAd,CAA0B,QAA1B,EAAoC,QAApC,CAA6C,MAA7C;AACD;;;AAFM,eAKF,IAAI,CAAC,QAAD,IAAa,KAAK,aAAL,CAAmB,OAAnB,CAA2B,KAA3B,IAAoC,CAAC,CAAlD,IAAuD,KAAK,aAAL,CAAmB,OAAnB,CAA2B,MAA3B,IAAqC,CAAhG,EAAmG;AACpG,mBAAK,QAAL,CAAc,QAAd,CAAuB,MAAvB;AACD,aAFE,MAEI,IAAI,aAAa,KAAb,IAAsB,KAAK,aAAL,CAAmB,OAAnB,CAA2B,QAA3B,IAAuC,CAAC,CAA9D,IAAmE,KAAK,aAAL,CAAmB,OAAnB,CAA2B,MAA3B,IAAqC,CAA5G,EAA+G;AACpH,mBAAK,QAAL,CAAc,WAAd,CAA0B,QAA1B,EAAoC,QAApC,CAA6C,MAA7C;AACD,aAFM,MAEA,IAAI,aAAa,MAAb,IAAuB,KAAK,aAAL,CAAmB,OAAnB,CAA2B,OAA3B,IAAsC,CAAC,CAA9D,IAAmE,KAAK,aAAL,CAAmB,OAAnB,CAA2B,QAA3B,IAAuC,CAA9G,EAAiH;AACtH,mBAAK,QAAL,CAAc,WAAd,CAA0B,QAA1B;AACD,aAFM,MAEA,IAAI,aAAa,OAAb,IAAwB,KAAK,aAAL,CAAmB,OAAnB,CAA2B,MAA3B,IAAqC,CAAC,CAA9D,IAAmE,KAAK,aAAL,CAAmB,OAAnB,CAA2B,QAA3B,IAAuC,CAA9G,EAAiH;AACtH,mBAAK,QAAL,CAAc,WAAd,CAA0B,QAA1B;AACD;;AAFM,iBAIF;AACD,qBAAK,QAAL,CAAc,WAAd,CAA0B,QAA1B;AACD;AACL,eAAK,YAAL,GAAoB,IAApB;AACA,eAAK,OAAL;AACD;;AA7BD,eAAgB,WAAhB;AAAA;;;;;;;;;AAFC,KAnDoB,EA2FpB;AACD,WAAK,cADJ;AAED;AAAO,iBAAS,YAAT,GAAwB;AAC7B,cAAI,KAAK,OAAL,CAAa,IAAb,CAAkB,eAAlB,MAAuC,OAA3C,EAAoD;AAClD,mBAAO,KAAP;AACD;AACD,cAAI,WAAW,KAAK,gBAAL,EAAf;AAAA,cACI,WAAW,WAAW,GAAX,CAAe,aAAf,CAA6B,KAAK,QAAlC,CADf;AAAA,cAEI,cAAc,WAAW,GAAX,CAAe,aAAf,CAA6B,KAAK,OAAlC,CAFlB;AAAA,cAGI,QAAQ,IAHZ;AAAA,cAII,YAAY,aAAa,MAAb,GAAsB,MAAtB,GAA+B,aAAa,OAAb,GAAuB,MAAvB,GAAgC,KAJ/E;AAAA,cAKI,QAAQ,cAAc,KAAd,GAAsB,QAAtB,GAAiC,OAL7C;AAAA,cAMI,SAAS,UAAU,QAAV,GAAqB,KAAK,OAAL,CAAa,OAAlC,GAA4C,KAAK,OAAL,CAAa,OANtE;;AAQA,cAAI,SAAS,KAAT,IAAkB,SAAS,UAAT,CAAoB,KAAtC,IAA+C,CAAC,KAAK,OAAN,IAAiB,CAAC,WAAW,GAAX,CAAe,gBAAf,CAAgC,KAAK,QAArC,CAArE,EAAqH;AACnH,iBAAK,QAAL,CAAc,MAAd,CAAqB,WAAW,GAAX,CAAe,UAAf,CAA0B,KAAK,QAA/B,EAAyC,KAAK,OAA9C,EAAuD,eAAvD,EAAwE,KAAK,OAAL,CAAa,OAArF,EAA8F,KAAK,OAAL,CAAa,OAA3G,EAAoH,IAApH,CAArB,EAAgJ,GAAhJ,CAAoJ;AAClJ,uBAAS,SAAS,UAAT,CAAoB,KAApB,GAA4B,KAAK,OAAL,CAAa,OAAb,GAAuB,CADsF;AAElJ,wBAAU;AAFwI,aAApJ;AAIA,iBAAK,YAAL,GAAoB,IAApB;AACA,mBAAO,KAAP;AACD;;AAED,eAAK,QAAL,CAAc,MAAd,CAAqB,WAAW,GAAX,CAAe,UAAf,CAA0B,KAAK,QAA/B,EAAyC,KAAK,OAA9C,EAAuD,QAAvD,EAAiE,KAAK,OAAL,CAAa,OAA9E,EAAuF,KAAK,OAAL,CAAa,OAApG,CAArB;;AAEA,iBAAO,CAAC,WAAW,GAAX,CAAe,gBAAf,CAAgC,KAAK,QAArC,EAA+C,KAA/C,EAAsD,IAAtD,CAAD,IAAgE,KAAK,OAA5E,EAAqF;AACnF,iBAAK,WAAL,CAAiB,QAAjB;AACA,iBAAK,YAAL;AACD;AACF;;AA3BD,eAAgB,YAAhB;AAAA;;;;;;;;AAFC,KA3FoB,EAgIpB;AACD,WAAK,SADJ;AAED;AAAO,iBAAS,OAAT,GAAmB;AACxB,cAAI,QAAQ,IAAZ;AACA,eAAK,QAAL,CAAc,EAAd,CAAiB;AACf,+BAAmB,KAAK,IAAL,CAAU,IAAV,CAAe,IAAf,CADJ;AAEf,gCAAoB,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAFL;AAGf,iCAAqB,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,CAHN;AAIf,mCAAuB,KAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB;AAJR,WAAjB;;AAOA,cAAI,KAAK,OAAL,CAAa,KAAjB,EAAwB;AACtB,iBAAK,OAAL,CAAa,GAAb,CAAiB,+CAAjB,EAAkE,EAAlE,CAAqE,wBAArE,EAA+F,YAAY;AACzG,2BAAa,MAAM,OAAnB;AACA,oBAAM,OAAN,GAAgB,WAAW,YAAY;AACrC,sBAAM,IAAN;AACA,sBAAM,OAAN,CAAc,IAAd,CAAmB,OAAnB,EAA4B,IAA5B;AACD,eAHe,EAGb,MAAM,OAAN,CAAc,UAHD,CAAhB;AAID,aAND,EAMG,EANH,CAMM,wBANN,EAMgC,YAAY;AAC1C,2BAAa,MAAM,OAAnB;AACA,oBAAM,OAAN,GAAgB,WAAW,YAAY;AACrC,sBAAM,KAAN;AACA,sBAAM,OAAN,CAAc,IAAd,CAAmB,OAAnB,EAA4B,KAA5B;AACD,eAHe,EAGb,MAAM,OAAN,CAAc,UAHD,CAAhB;AAID,aAZD;AAaA,gBAAI,KAAK,OAAL,CAAa,SAAjB,EAA4B;AAC1B,mBAAK,QAAL,CAAc,GAAd,CAAkB,+CAAlB,EAAmE,EAAnE,CAAsE,wBAAtE,EAAgG,YAAY;AAC1G,6BAAa,MAAM,OAAnB;AACD,eAFD,EAEG,EAFH,CAEM,wBAFN,EAEgC,YAAY;AAC1C,6BAAa,MAAM,OAAnB;AACA,sBAAM,OAAN,GAAgB,WAAW,YAAY;AACrC,wBAAM,KAAN;AACA,wBAAM,OAAN,CAAc,IAAd,CAAmB,OAAnB,EAA4B,KAA5B;AACD,iBAHe,EAGb,MAAM,OAAN,CAAc,UAHD,CAAhB;AAID,eARD;AASD;AACF;AACD,eAAK,OAAL,CAAa,GAAb,CAAiB,KAAK,QAAtB,EAAgC,EAAhC,CAAmC,qBAAnC,EAA0D,UAAU,CAAV,EAAa;;AAErE,gBAAI,UAAU,EAAE,IAAF,CAAd;AAAA,gBACI,2BAA2B,WAAW,QAAX,CAAoB,aAApB,CAAkC,MAAM,QAAxC,CAD/B;;AAGA,uBAAW,QAAX,CAAoB,SAApB,CAA8B,CAA9B,EAAiC,UAAjC,EAA6C;AAC3C;AAAa,uCAAY;AACvB,sBAAI,MAAM,QAAN,CAAe,IAAf,CAAoB,QAApB,EAA8B,EAA9B,CAAiC,yBAAyB,EAAzB,CAA4B,CAAC,CAA7B,CAAjC,CAAJ,EAAuE;;AAErE,wBAAI,MAAM,OAAN,CAAc,SAAlB,EAA6B;;AAE3B,+CAAyB,EAAzB,CAA4B,CAA5B,EAA+B,KAA/B;AACA,wBAAE,cAAF;AACD,qBAJD,MAIO;;AAEL,4BAAM,KAAN;AACD;AACF;AACF;;AAZD;AAAA,iBAD2C;AAc3C;AAAc,wCAAY;AACxB,sBAAI,MAAM,QAAN,CAAe,IAAf,CAAoB,QAApB,EAA8B,EAA9B,CAAiC,yBAAyB,EAAzB,CAA4B,CAA5B,CAAjC,KAAoE,MAAM,QAAN,CAAe,EAAf,CAAkB,QAAlB,CAAxE,EAAqG;;AAEnG,wBAAI,MAAM,OAAN,CAAc,SAAlB,EAA6B;;AAE3B,+CAAyB,EAAzB,CAA4B,CAAC,CAA7B,EAAgC,KAAhC;AACA,wBAAE,cAAF;AACD,qBAJD,MAIO;;AAEL,4BAAM,KAAN;AACD;AACF;AACF;;AAZD;AAAA,iBAd2C;AA2B3C;AAAM,gCAAY;AAChB,sBAAI,QAAQ,EAAR,CAAW,MAAM,OAAjB,CAAJ,EAA+B;AAC7B,0BAAM,IAAN;AACA,0BAAM,QAAN,CAAe,IAAf,CAAoB,UAApB,EAAgC,CAAC,CAAjC,EAAoC,KAApC;AACA,sBAAE,cAAF;AACD;AACF;;AAND;AAAA,iBA3B2C;AAkC3C;AAAO,iCAAY;AACjB,wBAAM,KAAN;AACA,wBAAM,OAAN,CAAc,KAAd;AACD;;AAHD;AAAA;AAlC2C,aAA7C;AAuCD,WA5CD;AA6CD;;AAhFD,eAAgB,OAAhB;AAAA;;;;;;;;AAFC,KAhIoB,EA0NpB;AACD,WAAK,iBADJ;AAED;AAAO,iBAAS,eAAT,GAA2B;AAChC,cAAI,QAAQ,EAAE,SAAS,IAAX,EAAiB,GAAjB,CAAqB,KAAK,QAA1B,CAAZ;AAAA,cACI,QAAQ,IADZ;AAEA,gBAAM,GAAN,CAAU,mBAAV,EAA+B,EAA/B,CAAkC,mBAAlC,EAAuD,UAAU,CAAV,EAAa;AAClE,gBAAI,MAAM,OAAN,CAAc,EAAd,CAAiB,EAAE,MAAnB,KAA8B,MAAM,OAAN,CAAc,IAAd,CAAmB,EAAE,MAArB,EAA6B,MAA/D,EAAuE;AACrE;AACD;AACD,gBAAI,MAAM,QAAN,CAAe,IAAf,CAAoB,EAAE,MAAtB,EAA8B,MAAlC,EAA0C;AACxC;AACD;AACD,kBAAM,KAAN;AACA,kBAAM,GAAN,CAAU,mBAAV;AACD,WATD;AAUD;;AAbD,eAAgB,eAAhB;AAAA;;;;;;;;;AAFC,KA1NoB,EAkPpB;AACD,WAAK,MADJ;AAED;AAAO,iBAAS,IAAT,GAAgB;;;;;;AAMrB,eAAK,QAAL,CAAc,OAAd,CAAsB,qBAAtB,EAA6C,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB,CAA7C;AACA,eAAK,OAAL,CAAa,QAAb,CAAsB,OAAtB,EAA+B,IAA/B,CAAoC,EAAE,iBAAiB,IAAnB,EAApC;;AAEA,eAAK,YAAL;AACA,eAAK,QAAL,CAAc,QAAd,CAAuB,SAAvB,EAAkC,IAAlC,CAAuC,EAAE,eAAe,KAAjB,EAAvC;;AAEA,cAAI,KAAK,OAAL,CAAa,SAAjB,EAA4B;AAC1B,gBAAI,aAAa,WAAW,QAAX,CAAoB,aAApB,CAAkC,KAAK,QAAvC,CAAjB;AACA,gBAAI,WAAW,MAAf,EAAuB;AACrB,yBAAW,EAAX,CAAc,CAAd,EAAiB,KAAjB;AACD;AACF;;AAED,cAAI,KAAK,OAAL,CAAa,YAAjB,EAA+B;AAC7B,iBAAK,eAAL;AACD;;;;;;AAMD,eAAK,QAAL,CAAc,OAAd,CAAsB,kBAAtB,EAA0C,CAAC,KAAK,QAAN,CAA1C;AACD;;AA5BD,eAAgB,IAAhB;AAAA;;;;;;;;AAFC,KAlPoB,EAwRpB;AACD,WAAK,OADJ;AAED;AAAO,iBAAS,KAAT,GAAiB;AACtB,cAAI,CAAC,KAAK,QAAL,CAAc,QAAd,CAAuB,SAAvB,CAAL,EAAwC;AACtC,mBAAO,KAAP;AACD;AACD,eAAK,QAAL,CAAc,WAAd,CAA0B,SAA1B,EAAqC,IAArC,CAA0C,EAAE,eAAe,IAAjB,EAA1C;;AAEA,eAAK,OAAL,CAAa,WAAb,CAAyB,OAAzB,EAAkC,IAAlC,CAAuC,eAAvC,EAAwD,KAAxD;;AAEA,cAAI,KAAK,YAAT,EAAuB;AACrB,gBAAI,mBAAmB,KAAK,gBAAL,EAAvB;AACA,gBAAI,gBAAJ,EAAsB;AACpB,mBAAK,QAAL,CAAc,WAAd,CAA0B,gBAA1B;AACD;AACD,iBAAK,QAAL,CAAc,QAAd,CAAuB,KAAK,OAAL,CAAa,aAApC;uBAAA,CACY,GADZ,CACgB,EAAE,QAAQ,EAAV,EAAc,OAAO,EAArB,EADhB;AAEA,iBAAK,YAAL,GAAoB,KAApB;AACA,iBAAK,OAAL,GAAe,CAAf;AACA,iBAAK,aAAL,CAAmB,MAAnB,GAA4B,CAA5B;AACD;AACD,eAAK,QAAL,CAAc,OAAd,CAAsB,kBAAtB,EAA0C,CAAC,KAAK,QAAN,CAA1C;AACD;;AApBD,eAAgB,KAAhB;AAAA;;;;;;;AAFC,KAxRoB,EAqTpB;AACD,WAAK,QADJ;AAED;AAAO,iBAAS,MAAT,GAAkB;AACvB,cAAI,KAAK,QAAL,CAAc,QAAd,CAAuB,SAAvB,CAAJ,EAAuC;AACrC,gBAAI,KAAK,OAAL,CAAa,IAAb,CAAkB,OAAlB,CAAJ,EAAgC;AAChC,iBAAK,KAAL;AACD,WAHD,MAGO;AACL,iBAAK,IAAL;AACD;AACF;;AAPD,eAAgB,MAAhB;AAAA;;;;;;;AAFC,KArToB,EAqUpB;AACD,WAAK,SADJ;AAED;AAAO,iBAAS,OAAT,GAAmB;AACxB,eAAK,QAAL,CAAc,GAAd,CAAkB,aAAlB,EAAiC,IAAjC;AACA,eAAK,OAAL,CAAa,GAAb,CAAiB,cAAjB;;AAEA,qBAAW,gBAAX,CAA4B,IAA5B;AACD;;AALD,eAAgB,OAAhB;AAAA;AAFC,KArUoB,CAAvB;;AA+UA,WAAO,QAAP;AACD,GAjXc,EAAf;;AAmXA,WAAS,QAAT,GAAoB;;;;;;AAMlB,gBAAY,GANM;;;;;;AAYlB,WAAO,KAZW;;;;;;AAkBlB,eAAW,KAlBO;;;;;;AAwBlB,aAAS,CAxBS;;;;;;AA8BlB,aAAS,CA9BS;;;;;;AAoClB,mBAAe,EApCG;;;;;;AA0ClB,eAAW,KA1CO;;;;;;AAgDlB,eAAW,KAhDO;;;;;;AAsDlB,kBAAc;AAtDI,GAApB;;;AA0DA,aAAW,MAAX,CAAkB,QAAlB,EAA4B,UAA5B;AACD,CAxbA,CAwbC,MAxbD,CAAD","file":"/packages/zurb:foundation-sites/dist/plugins/foundation.dropdown.js.map","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Dropdown module.\n   * @module foundation.dropdown\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   */\n\n  var Dropdown = function () {\n    /**\n     * Creates a new instance of a dropdown.\n     * @class\n     * @param {jQuery} element - jQuery object to make into a dropdown.\n     *        Object should be of the dropdown panel, rather than its anchor.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Dropdown(element, options) {\n      _classCallCheck(this, Dropdown);\n\n      this.$element = element;\n      this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Dropdown');\n      Foundation.Keyboard.register('Dropdown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close',\n        'TAB': 'tab_forward',\n        'SHIFT_TAB': 'tab_backward'\n      });\n    }\n\n    /**\n     * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\n     * @function\n     * @private\n     */\n\n\n    _createClass(Dropdown, [{\n      key: '_init',\n      value: function _init() {\n        var $id = this.$element.attr('id');\n\n        this.$anchor = $('[data-toggle=\"' + $id + '\"]') || $('[data-open=\"' + $id + '\"]');\n        this.$anchor.attr({\n          'aria-controls': $id,\n          'data-is-focus': false,\n          'data-yeti-box': $id,\n          'aria-haspopup': true,\n          'aria-expanded': false\n\n        });\n\n        this.options.positionClass = this.getPositionClass();\n        this.counter = 4;\n        this.usedPositions = [];\n        this.$element.attr({\n          'aria-hidden': 'true',\n          'data-yeti-box': $id,\n          'data-resize': $id,\n          'aria-labelledby': this.$anchor[0].id || Foundation.GetYoDigits(6, 'dd-anchor')\n        });\n        this._events();\n      }\n\n      /**\n       * Helper function to determine current orientation of dropdown pane.\n       * @function\n       * @returns {String} position - string value of a position class.\n       */\n\n    }, {\n      key: 'getPositionClass',\n      value: function getPositionClass() {\n        var verticalPosition = this.$element[0].className.match(/(top|left|right|bottom)/g);\n        verticalPosition = verticalPosition ? verticalPosition[0] : '';\n        var horizontalPosition = /float-(\\S+)\\s/.exec(this.$anchor[0].className);\n        horizontalPosition = horizontalPosition ? horizontalPosition[1] : '';\n        var position = horizontalPosition ? horizontalPosition + ' ' + verticalPosition : verticalPosition;\n        return position;\n      }\n\n      /**\n       * Adjusts the dropdown panes orientation by adding/removing positioning classes.\n       * @function\n       * @private\n       * @param {String} position - position class to remove.\n       */\n\n    }, {\n      key: '_reposition',\n      value: function _reposition(position) {\n        this.usedPositions.push(position ? position : 'bottom');\n        //default, try switching to opposite side\n        if (!position && this.usedPositions.indexOf('top') < 0) {\n          this.$element.addClass('top');\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n          this.$element.removeClass(position);\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n          this.$element.removeClass(position).addClass('right');\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n          this.$element.removeClass(position).addClass('left');\n        }\n\n        //if default change didn't work, try bottom or left first\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.addClass('left');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.removeClass(position).addClass('left');\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          }\n          //if nothing cleared, set to bottom\n          else {\n              this.$element.removeClass(position);\n            }\n        this.classChanged = true;\n        this.counter--;\n      }\n\n      /**\n       * Sets the position and orientation of the dropdown pane, checks for collisions.\n       * Recursively calls itself if a collision is detected, with a new position class.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_setPosition',\n      value: function _setPosition() {\n        if (this.$anchor.attr('aria-expanded') === 'false') {\n          return false;\n        }\n        var position = this.getPositionClass(),\n            $eleDims = Foundation.Box.GetDimensions(this.$element),\n            $anchorDims = Foundation.Box.GetDimensions(this.$anchor),\n            _this = this,\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n            param = direction === 'top' ? 'height' : 'width',\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset;\n\n        if ($eleDims.width >= $eleDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.$element)) {\n          this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            'width': $eleDims.windowDims.width - this.options.hOffset * 2,\n            'height': 'auto'\n          });\n          this.classChanged = true;\n          return false;\n        }\n\n        this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, position, this.options.vOffset, this.options.hOffset));\n\n        while (!Foundation.Box.ImNotTouchingYou(this.$element, false, true) && this.counter) {\n          this._reposition(position);\n          this._setPosition();\n        }\n      }\n\n      /**\n       * Adds event listeners to the element utilizing the triggers utility library.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': this.close.bind(this),\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': this._setPosition.bind(this)\n        });\n\n        if (this.options.hover) {\n          this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function () {\n              _this.open();\n              _this.$anchor.data('hover', true);\n            }, _this.options.hoverDelay);\n          }).on('mouseleave.zf.dropdown', function () {\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function () {\n              _this.close();\n              _this.$anchor.data('hover', false);\n            }, _this.options.hoverDelay);\n          });\n          if (this.options.hoverPane) {\n            this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n            }).on('mouseleave.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function () {\n                _this.close();\n                _this.$anchor.data('hover', false);\n              }, _this.options.hoverDelay);\n            });\n          }\n        }\n        this.$anchor.add(this.$element).on('keydown.zf.dropdown', function (e) {\n\n          var $target = $(this),\n              visibleFocusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n\n          Foundation.Keyboard.handleKey(e, 'Dropdown', {\n            tab_forward: function () {\n              if (_this.$element.find(':focus').is(visibleFocusableElements.eq(-1))) {\n                // left modal downwards, setting focus to first element\n                if (_this.options.trapFocus) {\n                  // if focus shall be trapped\n                  visibleFocusableElements.eq(0).focus();\n                  e.preventDefault();\n                } else {\n                  // if focus is not trapped, close dropdown on focus out\n                  _this.close();\n                }\n              }\n            },\n            tab_backward: function () {\n              if (_this.$element.find(':focus').is(visibleFocusableElements.eq(0)) || _this.$element.is(':focus')) {\n                // left modal upwards, setting focus to last element\n                if (_this.options.trapFocus) {\n                  // if focus shall be trapped\n                  visibleFocusableElements.eq(-1).focus();\n                  e.preventDefault();\n                } else {\n                  // if focus is not trapped, close dropdown on focus out\n                  _this.close();\n                }\n              }\n            },\n            open: function () {\n              if ($target.is(_this.$anchor)) {\n                _this.open();\n                _this.$element.attr('tabindex', -1).focus();\n                e.preventDefault();\n              }\n            },\n            close: function () {\n              _this.close();\n              _this.$anchor.focus();\n            }\n          });\n        });\n      }\n\n      /**\n       * Adds an event handler to the body to close any dropdowns on a click.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBodyHandler',\n      value: function _addBodyHandler() {\n        var $body = $(document.body).not(this.$element),\n            _this = this;\n        $body.off('click.zf.dropdown').on('click.zf.dropdown', function (e) {\n          if (_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\n            return;\n          }\n          if (_this.$element.find(e.target).length) {\n            return;\n          }\n          _this.close();\n          $body.off('click.zf.dropdown');\n        });\n      }\n\n      /**\n       * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\n       * @function\n       * @fires Dropdown#closeme\n       * @fires Dropdown#show\n       */\n\n    }, {\n      key: 'open',\n      value: function open() {\n        // var _this = this;\n        /**\n         * Fires to close other open dropdowns\n         * @event Dropdown#closeme\n         */\n        this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\n        this.$anchor.addClass('hover').attr({ 'aria-expanded': true });\n        // this.$element/*.show()*/;\n        this._setPosition();\n        this.$element.addClass('is-open').attr({ 'aria-hidden': false });\n\n        if (this.options.autoFocus) {\n          var $focusable = Foundation.Keyboard.findFocusable(this.$element);\n          if ($focusable.length) {\n            $focusable.eq(0).focus();\n          }\n        }\n\n        if (this.options.closeOnClick) {\n          this._addBodyHandler();\n        }\n\n        /**\n         * Fires once the dropdown is visible.\n         * @event Dropdown#show\n         */\n        this.$element.trigger('show.zf.dropdown', [this.$element]);\n      }\n\n      /**\n       * Closes the open dropdown pane.\n       * @function\n       * @fires Dropdown#hide\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        if (!this.$element.hasClass('is-open')) {\n          return false;\n        }\n        this.$element.removeClass('is-open').attr({ 'aria-hidden': true });\n\n        this.$anchor.removeClass('hover').attr('aria-expanded', false);\n\n        if (this.classChanged) {\n          var curPositionClass = this.getPositionClass();\n          if (curPositionClass) {\n            this.$element.removeClass(curPositionClass);\n          }\n          this.$element.addClass(this.options.positionClass)\n          /*.hide()*/.css({ height: '', width: '' });\n          this.classChanged = false;\n          this.counter = 4;\n          this.usedPositions.length = 0;\n        }\n        this.$element.trigger('hide.zf.dropdown', [this.$element]);\n      }\n\n      /**\n       * Toggles the dropdown pane's visibility.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.$element.hasClass('is-open')) {\n          if (this.$anchor.data('hover')) return;\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n\n      /**\n       * Destroys the dropdown.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.trigger').hide();\n        this.$anchor.off('.zf.dropdown');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Dropdown;\n  }();\n\n  Dropdown.defaults = {\n    /**\n     * Amount of time to delay opening a submenu on hover event.\n     * @option\n     * @example 250\n     */\n    hoverDelay: 250,\n    /**\n     * Allow submenus to open on hover events\n     * @option\n     * @example false\n     */\n    hover: false,\n    /**\n     * Don't close dropdown when hovering over dropdown pane\n     * @option\n     * @example true\n     */\n    hoverPane: false,\n    /**\n     * Number of pixels between the dropdown pane and the triggering element on open.\n     * @option\n     * @example 1\n     */\n    vOffset: 1,\n    /**\n     * Number of pixels between the dropdown pane and the triggering element on open.\n     * @option\n     * @example 1\n     */\n    hOffset: 1,\n    /**\n     * Class applied to adjust open position. JS will test and fill this in.\n     * @option\n     * @example 'top'\n     */\n    positionClass: '',\n    /**\n     * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\n     * @option\n     * @example false\n     */\n    trapFocus: false,\n    /**\n     * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\n     * @option\n     * @example true\n     */\n    autoFocus: false,\n    /**\n     * Allows a click on the body to close the dropdown.\n     * @option\n     * @example false\n     */\n    closeOnClick: false\n  };\n\n  // Window exports\n  Foundation.plugin(Dropdown, 'Dropdown');\n}(jQuery);"]},"hash":"4c65c450ed65995f5abdf8fc5e2deed05cb66fdf"}
