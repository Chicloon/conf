{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.reveal.js","filenameRelative":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.reveal.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.reveal.js.map","sourceFileName":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.reveal.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.reveal"},"ignored":false,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n!function ($) {\n\n  /**\n   * Reveal module.\n   * @module foundation.reveal\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.motion if using animations\n   */\n\n  var Reveal = function () {\n    /**\n     * Creates a new instance of Reveal.\n     * @class\n     * @param {jQuery} element - jQuery object to use for the modal.\n     * @param {Object} options - optional parameters.\n     */\n\n    function Reveal(element, options) {\n      _classCallCheck(this, Reveal);\n\n      this.$element = element;\n      this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Reveal');\n      Foundation.Keyboard.register('Reveal', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close',\n        'TAB': 'tab_forward',\n        'SHIFT_TAB': 'tab_backward'\n      });\n    }\n\n    /**\n     * Initializes the modal by adding the overlay and close buttons, (if selected).\n     * @private\n     */\n\n    _createClass(Reveal, [{\n      key: '_init',\n      value: function () {\n        function _init() {\n          this.id = this.$element.attr('id');\n          this.isActive = false;\n          this.cached = { mq: Foundation.MediaQuery.current };\n          this.isMobile = mobileSniff();\n\n          this.$anchor = $('[data-open=\"' + this.id + '\"]').length ? $('[data-open=\"' + this.id + '\"]') : $('[data-toggle=\"' + this.id + '\"]');\n          this.$anchor.attr({\n            'aria-controls': this.id,\n            'aria-haspopup': true,\n            'tabindex': 0\n          });\n\n          if (this.options.fullScreen || this.$element.hasClass('full')) {\n            this.options.fullScreen = true;\n            this.options.overlay = false;\n          }\n          if (this.options.overlay && !this.$overlay) {\n            this.$overlay = this._makeOverlay(this.id);\n          }\n\n          this.$element.attr({\n            'role': 'dialog',\n            'aria-hidden': true,\n            'data-yeti-box': this.id,\n            'data-resize': this.id\n          });\n\n          if (this.$overlay) {\n            this.$element.detach().appendTo(this.$overlay);\n          } else {\n            this.$element.detach().appendTo($('body'));\n            this.$element.addClass('without-overlay');\n          }\n          this._events();\n          if (this.options.deepLink && window.location.hash === '#' + this.id) {\n            $(window).one('load.zf.reveal', this.open.bind(this));\n          }\n        }\n\n        return _init;\n      }()\n\n      /**\n       * Creates an overlay div to display behind the modal.\n       * @private\n       */\n\n    }, {\n      key: '_makeOverlay',\n      value: function () {\n        function _makeOverlay(id) {\n          var $overlay = $('<div></div>').addClass('reveal-overlay').appendTo('body');\n          return $overlay;\n        }\n\n        return _makeOverlay;\n      }()\n\n      /**\n       * Updates position of modal\n       * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\n       * @private\n       */\n\n    }, {\n      key: '_updatePosition',\n      value: function () {\n        function _updatePosition() {\n          var width = this.$element.outerWidth();\n          var outerWidth = $(window).width();\n          var height = this.$element.outerHeight();\n          var outerHeight = $(window).height();\n          var left, top;\n          if (this.options.hOffset === 'auto') {\n            left = parseInt((outerWidth - width) / 2, 10);\n          } else {\n            left = parseInt(this.options.hOffset, 10);\n          }\n          if (this.options.vOffset === 'auto') {\n            if (height > outerHeight) {\n              top = parseInt(Math.min(100, outerHeight / 10), 10);\n            } else {\n              top = parseInt((outerHeight - height) / 4, 10);\n            }\n          } else {\n            top = parseInt(this.options.vOffset, 10);\n          }\n          this.$element.css({ top: top + 'px' });\n          // only worry about left if we don't have an overlay or we havea  horizontal offset,\n          // otherwise we're perfectly in the middle\n          if (!this.$overlay || this.options.hOffset !== 'auto') {\n            this.$element.css({ left: left + 'px' });\n            this.$element.css({ margin: '0px' });\n          }\n        }\n\n        return _updatePosition;\n      }()\n\n      /**\n       * Adds event handlers for the modal.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function () {\n        function _events() {\n          var _this2 = this;\n\n          var _this = this;\n\n          this.$element.on({\n            'open.zf.trigger': this.open.bind(this),\n            'close.zf.trigger': function () {\n              function closeZfTrigger(event, $element) {\n                if (event.target === _this.$element[0] || $(event.target).parents('[data-closable]')[0] === $element) {\n                  // only close reveal when it's explicitly called\n                  return _this2.close.apply(_this2);\n                }\n              }\n\n              return closeZfTrigger;\n            }(),\n            'toggle.zf.trigger': this.toggle.bind(this),\n            'resizeme.zf.trigger': function () {\n              function resizemeZfTrigger() {\n                _this._updatePosition();\n              }\n\n              return resizemeZfTrigger;\n            }()\n          });\n\n          if (this.$anchor.length) {\n            this.$anchor.on('keydown.zf.reveal', function (e) {\n              if (e.which === 13 || e.which === 32) {\n                e.stopPropagation();\n                e.preventDefault();\n                _this.open();\n              }\n            });\n          }\n\n          if (this.options.closeOnClick && this.options.overlay) {\n            this.$overlay.off('.zf.reveal').on('click.zf.reveal', function (e) {\n              if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\n                return;\n              }\n              _this.close();\n            });\n          }\n          if (this.options.deepLink) {\n            $(window).on('popstate.zf.reveal:' + this.id, this._handleState.bind(this));\n          }\n        }\n\n        return _events;\n      }()\n\n      /**\n       * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\n       * @private\n       */\n\n    }, {\n      key: '_handleState',\n      value: function () {\n        function _handleState(e) {\n          if (window.location.hash === '#' + this.id && !this.isActive) {\n            this.open();\n          } else {\n            this.close();\n          }\n        }\n\n        return _handleState;\n      }()\n\n      /**\n       * Opens the modal controlled by `this.$anchor`, and closes all others by default.\n       * @function\n       * @fires Reveal#closeme\n       * @fires Reveal#open\n       */\n\n    }, {\n      key: 'open',\n      value: function () {\n        function open() {\n          var _this3 = this;\n\n          if (this.options.deepLink) {\n            var hash = '#' + this.id;\n\n            if (window.history.pushState) {\n              window.history.pushState(null, null, hash);\n            } else {\n              window.location.hash = hash;\n            }\n          }\n\n          this.isActive = true;\n\n          // Make elements invisible, but remove display: none so we can get size and positioning\n          this.$element.css({ 'visibility': 'hidden' }).show().scrollTop(0);\n          if (this.options.overlay) {\n            this.$overlay.css({ 'visibility': 'hidden' }).show();\n          }\n\n          this._updatePosition();\n\n          this.$element.hide().css({ 'visibility': '' });\n\n          if (this.$overlay) {\n            this.$overlay.css({ 'visibility': '' }).hide();\n            if (this.$element.hasClass('fast')) {\n              this.$overlay.addClass('fast');\n            } else if (this.$element.hasClass('slow')) {\n              this.$overlay.addClass('slow');\n            }\n          }\n\n          if (!this.options.multipleOpened) {\n            /**\n             * Fires immediately before the modal opens.\n             * Closes any other modals that are currently open\n             * @event Reveal#closeme\n             */\n            this.$element.trigger('closeme.zf.reveal', this.id);\n          }\n          // Motion UI method of reveal\n          if (this.options.animationIn) {\n            var _this;\n\n            (function () {\n              var afterAnimationFocus = function () {\n                function afterAnimationFocus() {\n                  _this.$element.attr({\n                    'aria-hidden': false,\n                    'tabindex': -1\n                  }).focus();\n                  console.log('focus');\n                }\n\n                return afterAnimationFocus;\n              }();\n\n              _this = _this3;\n\n              if (_this3.options.overlay) {\n                Foundation.Motion.animateIn(_this3.$overlay, 'fade-in');\n              }\n              Foundation.Motion.animateIn(_this3.$element, _this3.options.animationIn, function () {\n                _this3.focusableElements = Foundation.Keyboard.findFocusable(_this3.$element);\n                afterAnimationFocus();\n              });\n            })();\n          }\n          // jQuery method of reveal\n          else {\n              if (this.options.overlay) {\n                this.$overlay.show(0);\n              }\n              this.$element.show(this.options.showDelay);\n            }\n\n          // handle accessibility\n          this.$element.attr({\n            'aria-hidden': false,\n            'tabindex': -1\n          }).focus();\n\n          /**\n           * Fires when the modal has successfully opened.\n           * @event Reveal#open\n           */\n          this.$element.trigger('open.zf.reveal');\n\n          if (this.isMobile) {\n            this.originalScrollPos = window.pageYOffset;\n            $('html, body').addClass('is-reveal-open');\n          } else {\n            $('body').addClass('is-reveal-open');\n          }\n\n          setTimeout(function () {\n            _this3._extraHandlers();\n          }, 0);\n        }\n\n        return open;\n      }()\n\n      /**\n       * Adds extra event handlers for the body and window if necessary.\n       * @private\n       */\n\n    }, {\n      key: '_extraHandlers',\n      value: function () {\n        function _extraHandlers() {\n          var _this = this;\n          this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\n\n          if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\n            $('body').on('click.zf.reveal', function (e) {\n              if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\n                return;\n              }\n              _this.close();\n            });\n          }\n\n          if (this.options.closeOnEsc) {\n            $(window).on('keydown.zf.reveal', function (e) {\n              Foundation.Keyboard.handleKey(e, 'Reveal', {\n                close: function () {\n                  function close() {\n                    if (_this.options.closeOnEsc) {\n                      _this.close();\n                      _this.$anchor.focus();\n                    }\n                  }\n\n                  return close;\n                }()\n              });\n            });\n          }\n\n          // lock focus within modal while tabbing\n          this.$element.on('keydown.zf.reveal', function (e) {\n            var $target = $(this);\n            // handle keyboard event with keyboard util\n            Foundation.Keyboard.handleKey(e, 'Reveal', {\n              tab_forward: function () {\n                function tab_forward() {\n                  if (_this.$element.find(':focus').is(_this.focusableElements.eq(-1))) {\n                    // left modal downwards, setting focus to first element\n                    _this.focusableElements.eq(0).focus();\n                    return true;\n                  }\n                  if (_this.focusableElements.length === 0) {\n                    // no focusable elements inside the modal at all, prevent tabbing in general\n                    return true;\n                  }\n                }\n\n                return tab_forward;\n              }(),\n              tab_backward: function () {\n                function tab_backward() {\n                  if (_this.$element.find(':focus').is(_this.focusableElements.eq(0)) || _this.$element.is(':focus')) {\n                    // left modal upwards, setting focus to last element\n                    _this.focusableElements.eq(-1).focus();\n                    return true;\n                  }\n                  if (_this.focusableElements.length === 0) {\n                    // no focusable elements inside the modal at all, prevent tabbing in general\n                    return true;\n                  }\n                }\n\n                return tab_backward;\n              }(),\n              open: function () {\n                function open() {\n                  if (_this.$element.find(':focus').is(_this.$element.find('[data-close]'))) {\n                    setTimeout(function () {\n                      // set focus back to anchor if close button has been activated\n                      _this.$anchor.focus();\n                    }, 1);\n                  } else if ($target.is(_this.focusableElements)) {\n                    // dont't trigger if acual element has focus (i.e. inputs, links, ...)\n                    _this.open();\n                  }\n                }\n\n                return open;\n              }(),\n              close: function () {\n                function close() {\n                  if (_this.options.closeOnEsc) {\n                    _this.close();\n                    _this.$anchor.focus();\n                  }\n                }\n\n                return close;\n              }(),\n              handled: function () {\n                function handled(preventDefault) {\n                  if (preventDefault) {\n                    e.preventDefault();\n                  }\n                }\n\n                return handled;\n              }()\n            });\n          });\n        }\n\n        return _extraHandlers;\n      }()\n\n      /**\n       * Closes the modal.\n       * @function\n       * @fires Reveal#closed\n       */\n\n    }, {\n      key: 'close',\n      value: function () {\n        function close() {\n          if (!this.isActive || !this.$element.is(':visible')) {\n            return false;\n          }\n          var _this = this;\n\n          // Motion UI method of hiding\n          if (this.options.animationOut) {\n            if (this.options.overlay) {\n              Foundation.Motion.animateOut(this.$overlay, 'fade-out', finishUp);\n            } else {\n              finishUp();\n            }\n\n            Foundation.Motion.animateOut(this.$element, this.options.animationOut);\n          }\n          // jQuery method of hiding\n          else {\n              if (this.options.overlay) {\n                this.$overlay.hide(0, finishUp);\n              } else {\n                finishUp();\n              }\n\n              this.$element.hide(this.options.hideDelay);\n            }\n\n          // Conditionals to remove extra event listeners added on open\n          if (this.options.closeOnEsc) {\n            $(window).off('keydown.zf.reveal');\n          }\n\n          if (!this.options.overlay && this.options.closeOnClick) {\n            $('body').off('click.zf.reveal');\n          }\n\n          this.$element.off('keydown.zf.reveal');\n\n          function finishUp() {\n            if (_this.isMobile) {\n              $('html, body').removeClass('is-reveal-open');\n              if (_this.originalScrollPos) {\n                $('body').scrollTop(_this.originalScrollPos);\n                _this.originalScrollPos = null;\n              }\n            } else {\n              $('body').removeClass('is-reveal-open');\n            }\n\n            _this.$element.attr('aria-hidden', true);\n\n            /**\n            * Fires when the modal is done closing.\n            * @event Reveal#closed\n            */\n            _this.$element.trigger('closed.zf.reveal');\n          }\n\n          /**\n          * Resets the modal content\n          * This prevents a running video to keep going in the background\n          */\n          if (this.options.resetOnClose) {\n            this.$element.html(this.$element.html());\n          }\n\n          this.isActive = false;\n          if (_this.options.deepLink) {\n            if (window.history.replaceState) {\n              window.history.replaceState(\"\", document.title, window.location.pathname);\n            } else {\n              window.location.hash = '';\n            }\n          }\n        }\n\n        return close;\n      }()\n\n      /**\n       * Toggles the open/closed state of a modal.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function () {\n        function toggle() {\n          if (this.isActive) {\n            this.close();\n          } else {\n            this.open();\n          }\n        }\n\n        return toggle;\n      }()\n    }, {\n      key: 'destroy',\n\n      /**\n       * Destroys an instance of a modal.\n       * @function\n       */\n      value: function () {\n        function destroy() {\n          if (this.options.overlay) {\n            this.$element.appendTo($('body')); // move $element outside of $overlay to prevent error unregisterPlugin()\n            this.$overlay.hide().off().remove();\n          }\n          this.$element.hide().off();\n          this.$anchor.off('.zf');\n          $(window).off('.zf.reveal:' + this.id);\n\n          Foundation.unregisterPlugin(this);\n        }\n\n        return destroy;\n      }()\n    }]);\n\n    return Reveal;\n  }();\n\n  Reveal.defaults = {\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-in-left'\n     */\n    animationIn: '',\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-out-right'\n     */\n    animationOut: '',\n    /**\n     * Time, in ms, to delay the opening of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    showDelay: 0,\n    /**\n     * Time, in ms, to delay the closing of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    hideDelay: 0,\n    /**\n     * Allows a click on the body/overlay to close the modal.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Allows the modal to close if the user presses the `ESCAPE` key.\n     * @option\n     * @example true\n     */\n    closeOnEsc: true,\n    /**\n     * If true, allows multiple modals to be displayed at once.\n     * @option\n     * @example false\n     */\n    multipleOpened: false,\n    /**\n     * Distance, in pixels, the modal should push down from the top of the screen.\n     * @option\n     * @example auto\n     */\n    vOffset: 'auto',\n    /**\n     * Distance, in pixels, the modal should push in from the side of the screen.\n     * @option\n     * @example auto\n     */\n    hOffset: 'auto',\n    /**\n     * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\n     * @option\n     * @example false\n     */\n    fullScreen: false,\n    /**\n     * Percentage of screen height the modal should push up from the bottom of the view.\n     * @option\n     * @example 10\n     */\n    btmOffsetPct: 10,\n    /**\n     * Allows the modal to generate an overlay div, which will cover the view when modal opens.\n     * @option\n     * @example true\n     */\n    overlay: true,\n    /**\n     * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\n     * @option\n     * @example false\n     */\n    resetOnClose: false,\n    /**\n     * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\n     * @option\n     * @example false\n     */\n    deepLink: false\n  };\n\n  // Window exports\n  Foundation.plugin(Reveal, 'Reveal');\n\n  function iPhoneSniff() {\n    return (/iP(ad|hone|od).*OS/.test(window.navigator.userAgent)\n    );\n  }\n\n  function androidSniff() {\n    return (/Android/.test(window.navigator.userAgent)\n    );\n  }\n\n  function mobileSniff() {\n    return iPhoneSniff() || androidSniff();\n  }\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.reveal.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.reveal.js.map","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Reveal module.\n   * @module foundation.reveal\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.motion if using animations\n   */\n\n  var Reveal = function () {\n    /**\n     * Creates a new instance of Reveal.\n     * @class\n     * @param {jQuery} element - jQuery object to use for the modal.\n     * @param {Object} options - optional parameters.\n     */\n\n    function Reveal(element, options) {\n      _classCallCheck(this, Reveal);\n\n      this.$element = element;\n      this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Reveal');\n      Foundation.Keyboard.register('Reveal', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close',\n        'TAB': 'tab_forward',\n        'SHIFT_TAB': 'tab_backward'\n      });\n    }\n\n    /**\n     * Initializes the modal by adding the overlay and close buttons, (if selected).\n     * @private\n     */\n\n\n    _createClass(Reveal, [{\n      key: '_init',\n      value: function _init() {\n        this.id = this.$element.attr('id');\n        this.isActive = false;\n        this.cached = { mq: Foundation.MediaQuery.current };\n        this.isMobile = mobileSniff();\n\n        this.$anchor = $('[data-open=\"' + this.id + '\"]').length ? $('[data-open=\"' + this.id + '\"]') : $('[data-toggle=\"' + this.id + '\"]');\n        this.$anchor.attr({\n          'aria-controls': this.id,\n          'aria-haspopup': true,\n          'tabindex': 0\n        });\n\n        if (this.options.fullScreen || this.$element.hasClass('full')) {\n          this.options.fullScreen = true;\n          this.options.overlay = false;\n        }\n        if (this.options.overlay && !this.$overlay) {\n          this.$overlay = this._makeOverlay(this.id);\n        }\n\n        this.$element.attr({\n          'role': 'dialog',\n          'aria-hidden': true,\n          'data-yeti-box': this.id,\n          'data-resize': this.id\n        });\n\n        if (this.$overlay) {\n          this.$element.detach().appendTo(this.$overlay);\n        } else {\n          this.$element.detach().appendTo($('body'));\n          this.$element.addClass('without-overlay');\n        }\n        this._events();\n        if (this.options.deepLink && window.location.hash === '#' + this.id) {\n          $(window).one('load.zf.reveal', this.open.bind(this));\n        }\n      }\n\n      /**\n       * Creates an overlay div to display behind the modal.\n       * @private\n       */\n\n    }, {\n      key: '_makeOverlay',\n      value: function _makeOverlay(id) {\n        var $overlay = $('<div></div>').addClass('reveal-overlay').appendTo('body');\n        return $overlay;\n      }\n\n      /**\n       * Updates position of modal\n       * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\n       * @private\n       */\n\n    }, {\n      key: '_updatePosition',\n      value: function _updatePosition() {\n        var width = this.$element.outerWidth();\n        var outerWidth = $(window).width();\n        var height = this.$element.outerHeight();\n        var outerHeight = $(window).height();\n        var left, top;\n        if (this.options.hOffset === 'auto') {\n          left = parseInt((outerWidth - width) / 2, 10);\n        } else {\n          left = parseInt(this.options.hOffset, 10);\n        }\n        if (this.options.vOffset === 'auto') {\n          if (height > outerHeight) {\n            top = parseInt(Math.min(100, outerHeight / 10), 10);\n          } else {\n            top = parseInt((outerHeight - height) / 4, 10);\n          }\n        } else {\n          top = parseInt(this.options.vOffset, 10);\n        }\n        this.$element.css({ top: top + 'px' });\n        // only worry about left if we don't have an overlay or we havea  horizontal offset,\n        // otherwise we're perfectly in the middle\n        if (!this.$overlay || this.options.hOffset !== 'auto') {\n          this.$element.css({ left: left + 'px' });\n          this.$element.css({ margin: '0px' });\n        }\n      }\n\n      /**\n       * Adds event handlers for the modal.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        var _this = this;\n\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': function (event, $element) {\n            if (event.target === _this.$element[0] || $(event.target).parents('[data-closable]')[0] === $element) {\n              // only close reveal when it's explicitly called\n              return _this2.close.apply(_this2);\n            }\n          },\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': function () {\n            _this._updatePosition();\n          }\n        });\n\n        if (this.$anchor.length) {\n          this.$anchor.on('keydown.zf.reveal', function (e) {\n            if (e.which === 13 || e.which === 32) {\n              e.stopPropagation();\n              e.preventDefault();\n              _this.open();\n            }\n          });\n        }\n\n        if (this.options.closeOnClick && this.options.overlay) {\n          this.$overlay.off('.zf.reveal').on('click.zf.reveal', function (e) {\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\n              return;\n            }\n            _this.close();\n          });\n        }\n        if (this.options.deepLink) {\n          $(window).on('popstate.zf.reveal:' + this.id, this._handleState.bind(this));\n        }\n      }\n\n      /**\n       * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\n       * @private\n       */\n\n    }, {\n      key: '_handleState',\n      value: function _handleState(e) {\n        if (window.location.hash === '#' + this.id && !this.isActive) {\n          this.open();\n        } else {\n          this.close();\n        }\n      }\n\n      /**\n       * Opens the modal controlled by `this.$anchor`, and closes all others by default.\n       * @function\n       * @fires Reveal#closeme\n       * @fires Reveal#open\n       */\n\n    }, {\n      key: 'open',\n      value: function open() {\n        var _this3 = this;\n\n        if (this.options.deepLink) {\n          var hash = '#' + this.id;\n\n          if (window.history.pushState) {\n            window.history.pushState(null, null, hash);\n          } else {\n            window.location.hash = hash;\n          }\n        }\n\n        this.isActive = true;\n\n        // Make elements invisible, but remove display: none so we can get size and positioning\n        this.$element.css({ 'visibility': 'hidden' }).show().scrollTop(0);\n        if (this.options.overlay) {\n          this.$overlay.css({ 'visibility': 'hidden' }).show();\n        }\n\n        this._updatePosition();\n\n        this.$element.hide().css({ 'visibility': '' });\n\n        if (this.$overlay) {\n          this.$overlay.css({ 'visibility': '' }).hide();\n          if (this.$element.hasClass('fast')) {\n            this.$overlay.addClass('fast');\n          } else if (this.$element.hasClass('slow')) {\n            this.$overlay.addClass('slow');\n          }\n        }\n\n        if (!this.options.multipleOpened) {\n          /**\n           * Fires immediately before the modal opens.\n           * Closes any other modals that are currently open\n           * @event Reveal#closeme\n           */\n          this.$element.trigger('closeme.zf.reveal', this.id);\n        }\n        // Motion UI method of reveal\n        if (this.options.animationIn) {\n          var _this;\n\n          (function () {\n            var afterAnimationFocus = function () {\n              _this.$element.attr({\n                'aria-hidden': false,\n                'tabindex': -1\n              }).focus();\n              console.log('focus');\n            };\n\n            _this = _this3;\n\n            if (_this3.options.overlay) {\n              Foundation.Motion.animateIn(_this3.$overlay, 'fade-in');\n            }\n            Foundation.Motion.animateIn(_this3.$element, _this3.options.animationIn, function () {\n              _this3.focusableElements = Foundation.Keyboard.findFocusable(_this3.$element);\n              afterAnimationFocus();\n            });\n          })();\n        }\n        // jQuery method of reveal\n        else {\n            if (this.options.overlay) {\n              this.$overlay.show(0);\n            }\n            this.$element.show(this.options.showDelay);\n          }\n\n        // handle accessibility\n        this.$element.attr({\n          'aria-hidden': false,\n          'tabindex': -1\n        }).focus();\n\n        /**\n         * Fires when the modal has successfully opened.\n         * @event Reveal#open\n         */\n        this.$element.trigger('open.zf.reveal');\n\n        if (this.isMobile) {\n          this.originalScrollPos = window.pageYOffset;\n          $('html, body').addClass('is-reveal-open');\n        } else {\n          $('body').addClass('is-reveal-open');\n        }\n\n        setTimeout(function () {\n          _this3._extraHandlers();\n        }, 0);\n      }\n\n      /**\n       * Adds extra event handlers for the body and window if necessary.\n       * @private\n       */\n\n    }, {\n      key: '_extraHandlers',\n      value: function _extraHandlers() {\n        var _this = this;\n        this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\n\n        if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\n          $('body').on('click.zf.reveal', function (e) {\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\n              return;\n            }\n            _this.close();\n          });\n        }\n\n        if (this.options.closeOnEsc) {\n          $(window).on('keydown.zf.reveal', function (e) {\n            Foundation.Keyboard.handleKey(e, 'Reveal', {\n              close: function () {\n                if (_this.options.closeOnEsc) {\n                  _this.close();\n                  _this.$anchor.focus();\n                }\n              }\n            });\n          });\n        }\n\n        // lock focus within modal while tabbing\n        this.$element.on('keydown.zf.reveal', function (e) {\n          var $target = $(this);\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Reveal', {\n            tab_forward: function () {\n              if (_this.$element.find(':focus').is(_this.focusableElements.eq(-1))) {\n                // left modal downwards, setting focus to first element\n                _this.focusableElements.eq(0).focus();\n                return true;\n              }\n              if (_this.focusableElements.length === 0) {\n                // no focusable elements inside the modal at all, prevent tabbing in general\n                return true;\n              }\n            },\n            tab_backward: function () {\n              if (_this.$element.find(':focus').is(_this.focusableElements.eq(0)) || _this.$element.is(':focus')) {\n                // left modal upwards, setting focus to last element\n                _this.focusableElements.eq(-1).focus();\n                return true;\n              }\n              if (_this.focusableElements.length === 0) {\n                // no focusable elements inside the modal at all, prevent tabbing in general\n                return true;\n              }\n            },\n            open: function () {\n              if (_this.$element.find(':focus').is(_this.$element.find('[data-close]'))) {\n                setTimeout(function () {\n                  // set focus back to anchor if close button has been activated\n                  _this.$anchor.focus();\n                }, 1);\n              } else if ($target.is(_this.focusableElements)) {\n                // dont't trigger if acual element has focus (i.e. inputs, links, ...)\n                _this.open();\n              }\n            },\n            close: function () {\n              if (_this.options.closeOnEsc) {\n                _this.close();\n                _this.$anchor.focus();\n              }\n            },\n            handled: function (preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n            }\n          });\n        });\n      }\n\n      /**\n       * Closes the modal.\n       * @function\n       * @fires Reveal#closed\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        if (!this.isActive || !this.$element.is(':visible')) {\n          return false;\n        }\n        var _this = this;\n\n        // Motion UI method of hiding\n        if (this.options.animationOut) {\n          if (this.options.overlay) {\n            Foundation.Motion.animateOut(this.$overlay, 'fade-out', finishUp);\n          } else {\n            finishUp();\n          }\n\n          Foundation.Motion.animateOut(this.$element, this.options.animationOut);\n        }\n        // jQuery method of hiding\n        else {\n            if (this.options.overlay) {\n              this.$overlay.hide(0, finishUp);\n            } else {\n              finishUp();\n            }\n\n            this.$element.hide(this.options.hideDelay);\n          }\n\n        // Conditionals to remove extra event listeners added on open\n        if (this.options.closeOnEsc) {\n          $(window).off('keydown.zf.reveal');\n        }\n\n        if (!this.options.overlay && this.options.closeOnClick) {\n          $('body').off('click.zf.reveal');\n        }\n\n        this.$element.off('keydown.zf.reveal');\n\n        function finishUp() {\n          if (_this.isMobile) {\n            $('html, body').removeClass('is-reveal-open');\n            if (_this.originalScrollPos) {\n              $('body').scrollTop(_this.originalScrollPos);\n              _this.originalScrollPos = null;\n            }\n          } else {\n            $('body').removeClass('is-reveal-open');\n          }\n\n          _this.$element.attr('aria-hidden', true);\n\n          /**\n          * Fires when the modal is done closing.\n          * @event Reveal#closed\n          */\n          _this.$element.trigger('closed.zf.reveal');\n        }\n\n        /**\n        * Resets the modal content\n        * This prevents a running video to keep going in the background\n        */\n        if (this.options.resetOnClose) {\n          this.$element.html(this.$element.html());\n        }\n\n        this.isActive = false;\n        if (_this.options.deepLink) {\n          if (window.history.replaceState) {\n            window.history.replaceState(\"\", document.title, window.location.pathname);\n          } else {\n            window.location.hash = '';\n          }\n        }\n      }\n\n      /**\n       * Toggles the open/closed state of a modal.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.isActive) {\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n    }, {\n      key: 'destroy',\n\n\n      /**\n       * Destroys an instance of a modal.\n       * @function\n       */\n      value: function destroy() {\n        if (this.options.overlay) {\n          this.$element.appendTo($('body')); // move $element outside of $overlay to prevent error unregisterPlugin()\n          this.$overlay.hide().off().remove();\n        }\n        this.$element.hide().off();\n        this.$anchor.off('.zf');\n        $(window).off('.zf.reveal:' + this.id);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Reveal;\n  }();\n\n  Reveal.defaults = {\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-in-left'\n     */\n    animationIn: '',\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-out-right'\n     */\n    animationOut: '',\n    /**\n     * Time, in ms, to delay the opening of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    showDelay: 0,\n    /**\n     * Time, in ms, to delay the closing of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    hideDelay: 0,\n    /**\n     * Allows a click on the body/overlay to close the modal.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Allows the modal to close if the user presses the `ESCAPE` key.\n     * @option\n     * @example true\n     */\n    closeOnEsc: true,\n    /**\n     * If true, allows multiple modals to be displayed at once.\n     * @option\n     * @example false\n     */\n    multipleOpened: false,\n    /**\n     * Distance, in pixels, the modal should push down from the top of the screen.\n     * @option\n     * @example auto\n     */\n    vOffset: 'auto',\n    /**\n     * Distance, in pixels, the modal should push in from the side of the screen.\n     * @option\n     * @example auto\n     */\n    hOffset: 'auto',\n    /**\n     * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\n     * @option\n     * @example false\n     */\n    fullScreen: false,\n    /**\n     * Percentage of screen height the modal should push up from the bottom of the view.\n     * @option\n     * @example 10\n     */\n    btmOffsetPct: 10,\n    /**\n     * Allows the modal to generate an overlay div, which will cover the view when modal opens.\n     * @option\n     * @example true\n     */\n    overlay: true,\n    /**\n     * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\n     * @option\n     * @example false\n     */\n    resetOnClose: false,\n    /**\n     * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\n     * @option\n     * @example false\n     */\n    deepLink: false\n  };\n\n  // Window exports\n  Foundation.plugin(Reveal, 'Reveal');\n\n  function iPhoneSniff() {\n    return (/iP(ad|hone|od).*OS/.test(window.navigator.userAgent)\n    );\n  }\n\n  function androidSniff() {\n    return (/Android/.test(window.navigator.userAgent)\n    );\n  }\n\n  function mobileSniff() {\n    return iPhoneSniff() || androidSniff();\n  }\n}(jQuery);"]},"hash":"5897b3bfdd9d47806209937d3136f26aa2e42974"}
