{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/dist/plugins/foundation.accordion.js","filenameRelative":"/packages/zurb:foundation-sites/dist/plugins/foundation.accordion.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/dist/plugins/foundation.accordion.js.map","sourceFileName":"/packages/zurb:foundation-sites/dist/plugins/foundation.accordion.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.accordion"},"ignored":false,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n!function ($) {\n\n  /**\n   * Accordion module.\n   * @module foundation.accordion\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   */\n\n  var Accordion = function () {\n    /**\n     * Creates a new instance of an accordion.\n     * @class\n     * @fires Accordion#init\n     * @param {jQuery} element - jQuery object to make into an accordion.\n     * @param {Object} options - a plain object with settings to override the default options.\n     */\n\n    function Accordion(element, options) {\n      _classCallCheck(this, Accordion);\n\n      this.$element = element;\n      this.options = $.extend({}, Accordion.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Accordion');\n      Foundation.Keyboard.register('Accordion', {\n        'ENTER': 'toggle',\n        'SPACE': 'toggle',\n        'ARROW_DOWN': 'next',\n        'ARROW_UP': 'previous'\n      });\n    }\n\n    /**\n     * Initializes the accordion by animating the preset active pane(s).\n     * @private\n     */\n\n    _createClass(Accordion, [{\n      key: '_init',\n      value: function () {\n        function _init() {\n          this.$element.attr('role', 'tablist');\n          this.$tabs = this.$element.children('li, [data-accordion-item]');\n\n          this.$tabs.each(function (idx, el) {\n            var $el = $(el),\n                $content = $el.children('[data-tab-content]'),\n                id = $content[0].id || Foundation.GetYoDigits(6, 'accordion'),\n                linkId = el.id || id + '-label';\n\n            $el.find('a:first').attr({\n              'aria-controls': id,\n              'role': 'tab',\n              'id': linkId,\n              'aria-expanded': false,\n              'aria-selected': false\n            });\n\n            $content.attr({ 'role': 'tabpanel', 'aria-labelledby': linkId, 'aria-hidden': true, 'id': id });\n          });\n          var $initActive = this.$element.find('.is-active').children('[data-tab-content]');\n          if ($initActive.length) {\n            this.down($initActive, true);\n          }\n          this._events();\n        }\n\n        return _init;\n      }()\n\n      /**\n       * Adds event handlers for items within the accordion.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function () {\n        function _events() {\n          var _this = this;\n\n          this.$tabs.each(function () {\n            var $elem = $(this);\n            var $tabContent = $elem.children('[data-tab-content]');\n            if ($tabContent.length) {\n              $elem.children('a').off('click.zf.accordion keydown.zf.accordion').on('click.zf.accordion', function (e) {\n                // $(this).children('a').on('click.zf.accordion', function(e) {\n                e.preventDefault();\n                if ($elem.hasClass('is-active')) {\n                  if (_this.options.allowAllClosed || $elem.siblings().hasClass('is-active')) {\n                    _this.up($tabContent);\n                  }\n                } else {\n                  _this.down($tabContent);\n                }\n              }).on('keydown.zf.accordion', function (e) {\n                Foundation.Keyboard.handleKey(e, 'Accordion', {\n                  toggle: function () {\n                    function toggle() {\n                      _this.toggle($tabContent);\n                    }\n\n                    return toggle;\n                  }(),\n                  next: function () {\n                    function next() {\n                      var $a = $elem.next().find('a').focus();\n                      if (!_this.options.multiExpand) {\n                        $a.trigger('click.zf.accordion');\n                      }\n                    }\n\n                    return next;\n                  }(),\n                  previous: function () {\n                    function previous() {\n                      var $a = $elem.prev().find('a').focus();\n                      if (!_this.options.multiExpand) {\n                        $a.trigger('click.zf.accordion');\n                      }\n                    }\n\n                    return previous;\n                  }(),\n                  handled: function () {\n                    function handled() {\n                      e.preventDefault();\n                      e.stopPropagation();\n                    }\n\n                    return handled;\n                  }()\n                });\n              });\n            }\n          });\n        }\n\n        return _events;\n      }()\n\n      /**\n       * Toggles the selected content pane's open/close state.\n       * @param {jQuery} $target - jQuery object of the pane to toggle.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function () {\n        function toggle($target) {\n          if ($target.parent().hasClass('is-active')) {\n            if (this.options.allowAllClosed || $target.parent().siblings().hasClass('is-active')) {\n              this.up($target);\n            } else {\n              return;\n            }\n          } else {\n            this.down($target);\n          }\n        }\n\n        return toggle;\n      }()\n\n      /**\n       * Opens the accordion tab defined by `$target`.\n       * @param {jQuery} $target - Accordion pane to open.\n       * @param {Boolean} firstTime - flag to determine if reflow should happen.\n       * @fires Accordion#down\n       * @function\n       */\n\n    }, {\n      key: 'down',\n      value: function () {\n        function down($target, firstTime) {\n          var _this2 = this;\n\n          if (!this.options.multiExpand && !firstTime) {\n            var $currentActive = this.$element.children('.is-active').children('[data-tab-content]');\n            if ($currentActive.length) {\n              this.up($currentActive);\n            }\n          }\n\n          $target.attr('aria-hidden', false).parent('[data-tab-content]').addBack().parent().addClass('is-active');\n\n          $target.slideDown(this.options.slideSpeed, function () {\n            /**\n             * Fires when the tab is done opening.\n             * @event Accordion#down\n             */\n            _this2.$element.trigger('down.zf.accordion', [$target]);\n          });\n\n          $('#' + $target.attr('aria-labelledby')).attr({\n            'aria-expanded': true,\n            'aria-selected': true\n          });\n        }\n\n        return down;\n      }()\n\n      /**\n       * Closes the tab defined by `$target`.\n       * @param {jQuery} $target - Accordion tab to close.\n       * @fires Accordion#up\n       * @function\n       */\n\n    }, {\n      key: 'up',\n      value: function () {\n        function up($target) {\n          var $aunts = $target.parent().siblings(),\n              _this = this;\n          var canClose = this.options.multiExpand ? $aunts.hasClass('is-active') : $target.parent().hasClass('is-active');\n\n          if (!this.options.allowAllClosed && !canClose) {\n            return;\n          }\n\n          // Foundation.Move(this.options.slideSpeed, $target, function(){\n          $target.slideUp(_this.options.slideSpeed, function () {\n            /**\n             * Fires when the tab is done collapsing up.\n             * @event Accordion#up\n             */\n            _this.$element.trigger('up.zf.accordion', [$target]);\n          });\n          // });\n\n          $target.attr('aria-hidden', true).parent().removeClass('is-active');\n\n          $('#' + $target.attr('aria-labelledby')).attr({\n            'aria-expanded': false,\n            'aria-selected': false\n          });\n        }\n\n        return up;\n      }()\n\n      /**\n       * Destroys an instance of an accordion.\n       * @fires Accordion#destroyed\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function () {\n        function destroy() {\n          this.$element.find('[data-tab-content]').stop(true).slideUp(0).css('display', '');\n          this.$element.find('a').off('.zf.accordion');\n\n          Foundation.unregisterPlugin(this);\n        }\n\n        return destroy;\n      }()\n    }]);\n\n    return Accordion;\n  }();\n\n  Accordion.defaults = {\n    /**\n     * Amount of time to animate the opening of an accordion pane.\n     * @option\n     * @example 250\n     */\n    slideSpeed: 250,\n    /**\n     * Allow the accordion to have multiple open panes.\n     * @option\n     * @example false\n     */\n    multiExpand: false,\n    /**\n     * Allow the accordion to close all panes.\n     * @option\n     * @example false\n     */\n    allowAllClosed: false\n  };\n\n  // Window exports\n  Foundation.plugin(Accordion, 'Accordion');\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/dist/plugins/foundation.accordion.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/dist/plugins/foundation.accordion.js.map","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Accordion module.\n   * @module foundation.accordion\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   */\n\n  var Accordion = function () {\n    /**\n     * Creates a new instance of an accordion.\n     * @class\n     * @fires Accordion#init\n     * @param {jQuery} element - jQuery object to make into an accordion.\n     * @param {Object} options - a plain object with settings to override the default options.\n     */\n\n    function Accordion(element, options) {\n      _classCallCheck(this, Accordion);\n\n      this.$element = element;\n      this.options = $.extend({}, Accordion.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Accordion');\n      Foundation.Keyboard.register('Accordion', {\n        'ENTER': 'toggle',\n        'SPACE': 'toggle',\n        'ARROW_DOWN': 'next',\n        'ARROW_UP': 'previous'\n      });\n    }\n\n    /**\n     * Initializes the accordion by animating the preset active pane(s).\n     * @private\n     */\n\n\n    _createClass(Accordion, [{\n      key: '_init',\n      value: function _init() {\n        this.$element.attr('role', 'tablist');\n        this.$tabs = this.$element.children('li, [data-accordion-item]');\n\n        this.$tabs.each(function (idx, el) {\n          var $el = $(el),\n              $content = $el.children('[data-tab-content]'),\n              id = $content[0].id || Foundation.GetYoDigits(6, 'accordion'),\n              linkId = el.id || id + '-label';\n\n          $el.find('a:first').attr({\n            'aria-controls': id,\n            'role': 'tab',\n            'id': linkId,\n            'aria-expanded': false,\n            'aria-selected': false\n          });\n\n          $content.attr({ 'role': 'tabpanel', 'aria-labelledby': linkId, 'aria-hidden': true, 'id': id });\n        });\n        var $initActive = this.$element.find('.is-active').children('[data-tab-content]');\n        if ($initActive.length) {\n          this.down($initActive, true);\n        }\n        this._events();\n      }\n\n      /**\n       * Adds event handlers for items within the accordion.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this.$tabs.each(function () {\n          var $elem = $(this);\n          var $tabContent = $elem.children('[data-tab-content]');\n          if ($tabContent.length) {\n            $elem.children('a').off('click.zf.accordion keydown.zf.accordion').on('click.zf.accordion', function (e) {\n              // $(this).children('a').on('click.zf.accordion', function(e) {\n              e.preventDefault();\n              if ($elem.hasClass('is-active')) {\n                if (_this.options.allowAllClosed || $elem.siblings().hasClass('is-active')) {\n                  _this.up($tabContent);\n                }\n              } else {\n                _this.down($tabContent);\n              }\n            }).on('keydown.zf.accordion', function (e) {\n              Foundation.Keyboard.handleKey(e, 'Accordion', {\n                toggle: function () {\n                  _this.toggle($tabContent);\n                },\n                next: function () {\n                  var $a = $elem.next().find('a').focus();\n                  if (!_this.options.multiExpand) {\n                    $a.trigger('click.zf.accordion');\n                  }\n                },\n                previous: function () {\n                  var $a = $elem.prev().find('a').focus();\n                  if (!_this.options.multiExpand) {\n                    $a.trigger('click.zf.accordion');\n                  }\n                },\n                handled: function () {\n                  e.preventDefault();\n                  e.stopPropagation();\n                }\n              });\n            });\n          }\n        });\n      }\n\n      /**\n       * Toggles the selected content pane's open/close state.\n       * @param {jQuery} $target - jQuery object of the pane to toggle.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle($target) {\n        if ($target.parent().hasClass('is-active')) {\n          if (this.options.allowAllClosed || $target.parent().siblings().hasClass('is-active')) {\n            this.up($target);\n          } else {\n            return;\n          }\n        } else {\n          this.down($target);\n        }\n      }\n\n      /**\n       * Opens the accordion tab defined by `$target`.\n       * @param {jQuery} $target - Accordion pane to open.\n       * @param {Boolean} firstTime - flag to determine if reflow should happen.\n       * @fires Accordion#down\n       * @function\n       */\n\n    }, {\n      key: 'down',\n      value: function down($target, firstTime) {\n        var _this2 = this;\n\n        if (!this.options.multiExpand && !firstTime) {\n          var $currentActive = this.$element.children('.is-active').children('[data-tab-content]');\n          if ($currentActive.length) {\n            this.up($currentActive);\n          }\n        }\n\n        $target.attr('aria-hidden', false).parent('[data-tab-content]').addBack().parent().addClass('is-active');\n\n        $target.slideDown(this.options.slideSpeed, function () {\n          /**\n           * Fires when the tab is done opening.\n           * @event Accordion#down\n           */\n          _this2.$element.trigger('down.zf.accordion', [$target]);\n        });\n\n        $('#' + $target.attr('aria-labelledby')).attr({\n          'aria-expanded': true,\n          'aria-selected': true\n        });\n      }\n\n      /**\n       * Closes the tab defined by `$target`.\n       * @param {jQuery} $target - Accordion tab to close.\n       * @fires Accordion#up\n       * @function\n       */\n\n    }, {\n      key: 'up',\n      value: function up($target) {\n        var $aunts = $target.parent().siblings(),\n            _this = this;\n        var canClose = this.options.multiExpand ? $aunts.hasClass('is-active') : $target.parent().hasClass('is-active');\n\n        if (!this.options.allowAllClosed && !canClose) {\n          return;\n        }\n\n        // Foundation.Move(this.options.slideSpeed, $target, function(){\n        $target.slideUp(_this.options.slideSpeed, function () {\n          /**\n           * Fires when the tab is done collapsing up.\n           * @event Accordion#up\n           */\n          _this.$element.trigger('up.zf.accordion', [$target]);\n        });\n        // });\n\n        $target.attr('aria-hidden', true).parent().removeClass('is-active');\n\n        $('#' + $target.attr('aria-labelledby')).attr({\n          'aria-expanded': false,\n          'aria-selected': false\n        });\n      }\n\n      /**\n       * Destroys an instance of an accordion.\n       * @fires Accordion#destroyed\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('[data-tab-content]').stop(true).slideUp(0).css('display', '');\n        this.$element.find('a').off('.zf.accordion');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Accordion;\n  }();\n\n  Accordion.defaults = {\n    /**\n     * Amount of time to animate the opening of an accordion pane.\n     * @option\n     * @example 250\n     */\n    slideSpeed: 250,\n    /**\n     * Allow the accordion to have multiple open panes.\n     * @option\n     * @example false\n     */\n    multiExpand: false,\n    /**\n     * Allow the accordion to close all panes.\n     * @option\n     * @example false\n     */\n    allowAllClosed: false\n  };\n\n  // Window exports\n  Foundation.plugin(Accordion, 'Accordion');\n}(jQuery);"]},"hash":"4ce4cd7628e97af7e965e51c65f8ce62d6eb309d"}
