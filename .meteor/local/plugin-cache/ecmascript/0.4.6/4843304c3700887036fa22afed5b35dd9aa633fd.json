{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.tabs.js","filenameRelative":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.tabs.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.tabs.js.map","sourceFileName":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.tabs.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.tabs"},"ignored":false,"code":"'use strict';\n\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n!function ($) {\n\n  /**\n   * Tabs module.\n   * @module foundation.tabs\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.timerAndImageLoader if tabs contain images\n   */\n\n  var Tabs = function () {\n    /**\n     * Creates a new instance of tabs.\n     * @class\n     * @fires Tabs#init\n     * @param {jQuery} element - jQuery object to make into tabs.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Tabs(element, options) {\n      _classCallCheck(this, Tabs);\n\n      this.$element = element;\n      this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\n\n      this._init();\n      Foundation.registerPlugin(this, 'Tabs');\n      Foundation.Keyboard.register('Tabs', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'previous',\n        'ARROW_DOWN': 'next',\n        'ARROW_LEFT': 'previous'\n        // 'TAB': 'next',\n        // 'SHIFT_TAB': 'previous'\n      });\n    }\n\n    /**\n     * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\n     * @private\n     */\n\n    _createClass(Tabs, [{\n      key: '_init',\n      value: function () {\n        function _init() {\n          var _this = this;\n\n          this.$tabTitles = this.$element.find('.' + this.options.linkClass);\n          this.$tabContent = $('[data-tabs-content=\"' + this.$element[0].id + '\"]');\n\n          this.$tabTitles.each(function () {\n            var $elem = $(this),\n                $link = $elem.find('a'),\n                isActive = $elem.hasClass('is-active'),\n                hash = $link[0].hash.slice(1),\n                linkId = $link[0].id ? $link[0].id : hash + '-label',\n                $tabContent = $('#' + hash);\n\n            $elem.attr({ 'role': 'presentation' });\n\n            $link.attr({\n              'role': 'tab',\n              'aria-controls': hash,\n              'aria-selected': isActive,\n              'id': linkId\n            });\n\n            $tabContent.attr({\n              'role': 'tabpanel',\n              'aria-hidden': !isActive,\n              'aria-labelledby': linkId\n            });\n\n            if (isActive && _this.options.autoFocus) {\n              $link.focus();\n            }\n          });\n\n          if (this.options.matchHeight) {\n            var $images = this.$tabContent.find('img');\n\n            if ($images.length) {\n              Foundation.onImagesLoaded($images, this._setHeight.bind(this));\n            } else {\n              this._setHeight();\n            }\n          }\n\n          this._events();\n        }\n\n        return _init;\n      }()\n\n      /**\n       * Adds event handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function () {\n        function _events() {\n          this._addKeyHandler();\n          this._addClickHandler();\n          this._setHeightMqHandler = null;\n\n          if (this.options.matchHeight) {\n            this._setHeightMqHandler = this._setHeight.bind(this);\n\n            $(window).on('changed.zf.mediaquery', this._setHeightMqHandler);\n          }\n        }\n\n        return _events;\n      }()\n\n      /**\n       * Adds click handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_addClickHandler',\n      value: function () {\n        function _addClickHandler() {\n          var _this = this;\n\n          this.$element.off('click.zf.tabs').on('click.zf.tabs', '.' + this.options.linkClass, function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            if ($(this).hasClass('is-active')) {\n              return;\n            }\n            _this._handleTabChange($(this));\n          });\n        }\n\n        return _addClickHandler;\n      }()\n\n      /**\n       * Adds keyboard event handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_addKeyHandler',\n      value: function () {\n        function _addKeyHandler() {\n          var _this = this;\n          var $firstTab = _this.$element.find('li:first-of-type');\n          var $lastTab = _this.$element.find('li:last-of-type');\n\n          this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function (e) {\n            if (e.which === 9) return;\n\n            var $element = $(this),\n                $elements = $element.parent('ul').children('li'),\n                $prevElement,\n                $nextElement;\n\n            $elements.each(function (i) {\n              if ($(this).is($element)) {\n                if (_this.options.wrapOnKeys) {\n                  $prevElement = i === 0 ? $elements.last() : $elements.eq(i - 1);\n                  $nextElement = i === $elements.length - 1 ? $elements.first() : $elements.eq(i + 1);\n                } else {\n                  $prevElement = $elements.eq(Math.max(0, i - 1));\n                  $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n                }\n                return;\n              }\n            });\n\n            // handle keyboard event with keyboard util\n            Foundation.Keyboard.handleKey(e, 'Tabs', {\n              open: function () {\n                function open() {\n                  $element.find('[role=\"tab\"]').focus();\n                  _this._handleTabChange($element);\n                }\n\n                return open;\n              }(),\n              previous: function () {\n                function previous() {\n                  $prevElement.find('[role=\"tab\"]').focus();\n                  _this._handleTabChange($prevElement);\n                }\n\n                return previous;\n              }(),\n              next: function () {\n                function next() {\n                  $nextElement.find('[role=\"tab\"]').focus();\n                  _this._handleTabChange($nextElement);\n                }\n\n                return next;\n              }(),\n              handled: function () {\n                function handled() {\n                  e.stopPropagation();\n                  e.preventDefault();\n                }\n\n                return handled;\n              }()\n            });\n          });\n        }\n\n        return _addKeyHandler;\n      }()\n\n      /**\n       * Opens the tab `$targetContent` defined by `$target`.\n       * @param {jQuery} $target - Tab to open.\n       * @fires Tabs#change\n       * @function\n       */\n\n    }, {\n      key: '_handleTabChange',\n      value: function () {\n        function _handleTabChange($target) {\n          var $tabLink = $target.find('[role=\"tab\"]'),\n              hash = $tabLink[0].hash,\n              $targetContent = this.$tabContent.find(hash),\n              $oldTab = this.$element.find('.' + this.options.linkClass + '.is-active').removeClass('is-active').find('[role=\"tab\"]').attr({ 'aria-selected': 'false' });\n\n          $('#' + $oldTab.attr('aria-controls')).removeClass('is-active').attr({ 'aria-hidden': 'true' });\n\n          $target.addClass('is-active');\n\n          $tabLink.attr({ 'aria-selected': 'true' });\n\n          $targetContent.addClass('is-active').attr({ 'aria-hidden': 'false' });\n\n          /**\n           * Fires when the plugin has successfully changed tabs.\n           * @event Tabs#change\n           */\n          this.$element.trigger('change.zf.tabs', [$target]);\n        }\n\n        return _handleTabChange;\n      }()\n\n      /**\n       * Public method for selecting a content pane to display.\n       * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\n       * @function\n       */\n\n    }, {\n      key: 'selectTab',\n      value: function () {\n        function selectTab(elem) {\n          var idStr;\n\n          if ((typeof elem === \"undefined\" ? \"undefined\" : (0, _typeof3[\"default\"])(elem)) === 'object') {\n            idStr = elem[0].id;\n          } else {\n            idStr = elem;\n          }\n\n          if (idStr.indexOf('#') < 0) {\n            idStr = '#' + idStr;\n          }\n\n          var $target = this.$tabTitles.find('[href=\"' + idStr + '\"]').parent('.' + this.options.linkClass);\n\n          this._handleTabChange($target);\n        }\n\n        return selectTab;\n      }()\n    }, {\n      key: '_setHeight',\n\n      /**\n       * Sets the height of each panel to the height of the tallest panel.\n       * If enabled in options, gets called on media query change.\n       * If loading content via external source, can be called directly or with _reflow.\n       * @function\n       * @private\n       */\n      value: function () {\n        function _setHeight() {\n          var max = 0;\n          this.$tabContent.find('.' + this.options.panelClass).css('height', '').each(function () {\n            var panel = $(this),\n                isActive = panel.hasClass('is-active');\n\n            if (!isActive) {\n              panel.css({ 'visibility': 'hidden', 'display': 'block' });\n            }\n\n            var temp = this.getBoundingClientRect().height;\n\n            if (!isActive) {\n              panel.css({\n                'visibility': '',\n                'display': ''\n              });\n            }\n\n            max = temp > max ? temp : max;\n          }).css('height', max + 'px');\n        }\n\n        return _setHeight;\n      }()\n\n      /**\n       * Destroys an instance of an tabs.\n       * @fires Tabs#destroyed\n       */\n\n    }, {\n      key: 'destroy',\n      value: function () {\n        function destroy() {\n          this.$element.find('.' + this.options.linkClass).off('.zf.tabs').hide().end().find('.' + this.options.panelClass).hide();\n\n          if (this.options.matchHeight) {\n            if (this._setHeightMqHandler != null) {\n              $(window).off('changed.zf.mediaquery', this._setHeightMqHandler);\n            }\n          }\n\n          Foundation.unregisterPlugin(this);\n        }\n\n        return destroy;\n      }()\n    }]);\n\n    return Tabs;\n  }();\n\n  Tabs.defaults = {\n    /**\n     * Allows the window to scroll to content of active pane on load if set to true.\n     * @option\n     * @example false\n     */\n    autoFocus: false,\n\n    /**\n     * Allows keyboard input to 'wrap' around the tab links.\n     * @option\n     * @example true\n     */\n    wrapOnKeys: true,\n\n    /**\n     * Allows the tab content panes to match heights if set to true.\n     * @option\n     * @example false\n     */\n    matchHeight: false,\n\n    /**\n     * Class applied to `li`'s in tab link list.\n     * @option\n     * @example 'tabs-title'\n     */\n    linkClass: 'tabs-title',\n\n    /**\n     * Class applied to the content containers.\n     * @option\n     * @example 'tabs-panel'\n     */\n    panelClass: 'tabs-panel'\n  };\n\n  function checkClass($elem) {\n    return $elem.hasClass('is-active');\n  }\n\n  // Window exports\n  Foundation.plugin(Tabs, 'Tabs');\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.tabs.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.tabs.js.map","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Tabs module.\n   * @module foundation.tabs\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.timerAndImageLoader if tabs contain images\n   */\n\n  var Tabs = function () {\n    /**\n     * Creates a new instance of tabs.\n     * @class\n     * @fires Tabs#init\n     * @param {jQuery} element - jQuery object to make into tabs.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Tabs(element, options) {\n      _classCallCheck(this, Tabs);\n\n      this.$element = element;\n      this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\n\n      this._init();\n      Foundation.registerPlugin(this, 'Tabs');\n      Foundation.Keyboard.register('Tabs', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'previous',\n        'ARROW_DOWN': 'next',\n        'ARROW_LEFT': 'previous'\n        // 'TAB': 'next',\n        // 'SHIFT_TAB': 'previous'\n      });\n    }\n\n    /**\n     * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\n     * @private\n     */\n\n\n    _createClass(Tabs, [{\n      key: '_init',\n      value: function _init() {\n        var _this = this;\n\n        this.$tabTitles = this.$element.find('.' + this.options.linkClass);\n        this.$tabContent = $('[data-tabs-content=\"' + this.$element[0].id + '\"]');\n\n        this.$tabTitles.each(function () {\n          var $elem = $(this),\n              $link = $elem.find('a'),\n              isActive = $elem.hasClass('is-active'),\n              hash = $link[0].hash.slice(1),\n              linkId = $link[0].id ? $link[0].id : hash + '-label',\n              $tabContent = $('#' + hash);\n\n          $elem.attr({ 'role': 'presentation' });\n\n          $link.attr({\n            'role': 'tab',\n            'aria-controls': hash,\n            'aria-selected': isActive,\n            'id': linkId\n          });\n\n          $tabContent.attr({\n            'role': 'tabpanel',\n            'aria-hidden': !isActive,\n            'aria-labelledby': linkId\n          });\n\n          if (isActive && _this.options.autoFocus) {\n            $link.focus();\n          }\n        });\n\n        if (this.options.matchHeight) {\n          var $images = this.$tabContent.find('img');\n\n          if ($images.length) {\n            Foundation.onImagesLoaded($images, this._setHeight.bind(this));\n          } else {\n            this._setHeight();\n          }\n        }\n\n        this._events();\n      }\n\n      /**\n       * Adds event handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this._addKeyHandler();\n        this._addClickHandler();\n        this._setHeightMqHandler = null;\n\n        if (this.options.matchHeight) {\n          this._setHeightMqHandler = this._setHeight.bind(this);\n\n          $(window).on('changed.zf.mediaquery', this._setHeightMqHandler);\n        }\n      }\n\n      /**\n       * Adds click handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_addClickHandler',\n      value: function _addClickHandler() {\n        var _this = this;\n\n        this.$element.off('click.zf.tabs').on('click.zf.tabs', '.' + this.options.linkClass, function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n          if ($(this).hasClass('is-active')) {\n            return;\n          }\n          _this._handleTabChange($(this));\n        });\n      }\n\n      /**\n       * Adds keyboard event handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_addKeyHandler',\n      value: function _addKeyHandler() {\n        var _this = this;\n        var $firstTab = _this.$element.find('li:first-of-type');\n        var $lastTab = _this.$element.find('li:last-of-type');\n\n        this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function (e) {\n          if (e.which === 9) return;\n\n          var $element = $(this),\n              $elements = $element.parent('ul').children('li'),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              if (_this.options.wrapOnKeys) {\n                $prevElement = i === 0 ? $elements.last() : $elements.eq(i - 1);\n                $nextElement = i === $elements.length - 1 ? $elements.first() : $elements.eq(i + 1);\n              } else {\n                $prevElement = $elements.eq(Math.max(0, i - 1));\n                $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n              }\n              return;\n            }\n          });\n\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Tabs', {\n            open: function () {\n              $element.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($element);\n            },\n            previous: function () {\n              $prevElement.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($prevElement);\n            },\n            next: function () {\n              $nextElement.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($nextElement);\n            },\n            handled: function () {\n              e.stopPropagation();\n              e.preventDefault();\n            }\n          });\n        });\n      }\n\n      /**\n       * Opens the tab `$targetContent` defined by `$target`.\n       * @param {jQuery} $target - Tab to open.\n       * @fires Tabs#change\n       * @function\n       */\n\n    }, {\n      key: '_handleTabChange',\n      value: function _handleTabChange($target) {\n        var $tabLink = $target.find('[role=\"tab\"]'),\n            hash = $tabLink[0].hash,\n            $targetContent = this.$tabContent.find(hash),\n            $oldTab = this.$element.find('.' + this.options.linkClass + '.is-active').removeClass('is-active').find('[role=\"tab\"]').attr({ 'aria-selected': 'false' });\n\n        $('#' + $oldTab.attr('aria-controls')).removeClass('is-active').attr({ 'aria-hidden': 'true' });\n\n        $target.addClass('is-active');\n\n        $tabLink.attr({ 'aria-selected': 'true' });\n\n        $targetContent.addClass('is-active').attr({ 'aria-hidden': 'false' });\n\n        /**\n         * Fires when the plugin has successfully changed tabs.\n         * @event Tabs#change\n         */\n        this.$element.trigger('change.zf.tabs', [$target]);\n      }\n\n      /**\n       * Public method for selecting a content pane to display.\n       * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\n       * @function\n       */\n\n    }, {\n      key: 'selectTab',\n      value: function selectTab(elem) {\n        var idStr;\n\n        if (typeof elem === 'object') {\n          idStr = elem[0].id;\n        } else {\n          idStr = elem;\n        }\n\n        if (idStr.indexOf('#') < 0) {\n          idStr = '#' + idStr;\n        }\n\n        var $target = this.$tabTitles.find('[href=\"' + idStr + '\"]').parent('.' + this.options.linkClass);\n\n        this._handleTabChange($target);\n      }\n    }, {\n      key: '_setHeight',\n\n      /**\n       * Sets the height of each panel to the height of the tallest panel.\n       * If enabled in options, gets called on media query change.\n       * If loading content via external source, can be called directly or with _reflow.\n       * @function\n       * @private\n       */\n      value: function _setHeight() {\n        var max = 0;\n        this.$tabContent.find('.' + this.options.panelClass).css('height', '').each(function () {\n          var panel = $(this),\n              isActive = panel.hasClass('is-active');\n\n          if (!isActive) {\n            panel.css({ 'visibility': 'hidden', 'display': 'block' });\n          }\n\n          var temp = this.getBoundingClientRect().height;\n\n          if (!isActive) {\n            panel.css({\n              'visibility': '',\n              'display': ''\n            });\n          }\n\n          max = temp > max ? temp : max;\n        }).css('height', max + 'px');\n      }\n\n      /**\n       * Destroys an instance of an tabs.\n       * @fires Tabs#destroyed\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('.' + this.options.linkClass).off('.zf.tabs').hide().end().find('.' + this.options.panelClass).hide();\n\n        if (this.options.matchHeight) {\n          if (this._setHeightMqHandler != null) {\n            $(window).off('changed.zf.mediaquery', this._setHeightMqHandler);\n          }\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Tabs;\n  }();\n\n  Tabs.defaults = {\n    /**\n     * Allows the window to scroll to content of active pane on load if set to true.\n     * @option\n     * @example false\n     */\n    autoFocus: false,\n\n    /**\n     * Allows keyboard input to 'wrap' around the tab links.\n     * @option\n     * @example true\n     */\n    wrapOnKeys: true,\n\n    /**\n     * Allows the tab content panes to match heights if set to true.\n     * @option\n     * @example false\n     */\n    matchHeight: false,\n\n    /**\n     * Class applied to `li`'s in tab link list.\n     * @option\n     * @example 'tabs-title'\n     */\n    linkClass: 'tabs-title',\n\n    /**\n     * Class applied to the content containers.\n     * @option\n     * @example 'tabs-panel'\n     */\n    panelClass: 'tabs-panel'\n  };\n\n  function checkClass($elem) {\n    return $elem.hasClass('is-active');\n  }\n\n  // Window exports\n  Foundation.plugin(Tabs, 'Tabs');\n}(jQuery);"]},"hash":"4843304c3700887036fa22afed5b35dd9aa633fd"}
