{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/dist/plugins/foundation.responsiveToggle.js","filenameRelative":"/packages/zurb:foundation-sites/dist/plugins/foundation.responsiveToggle.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/dist/plugins/foundation.responsiveToggle.js.map","sourceFileName":"/packages/zurb:foundation-sites/dist/plugins/foundation.responsiveToggle.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.responsiveToggle"},"ignored":false,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n!function ($) {\n\n  /**\n   * ResponsiveToggle module.\n   * @module foundation.responsiveToggle\n   * @requires foundation.util.mediaQuery\n   */\n\n  var ResponsiveToggle = function () {\n    /**\n     * Creates a new instance of Tab Bar.\n     * @class\n     * @fires ResponsiveToggle#init\n     * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function ResponsiveToggle(element, options) {\n      _classCallCheck(this, ResponsiveToggle);\n\n      this.$element = $(element);\n      this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveToggle');\n    }\n\n    /**\n     * Initializes the tab bar by finding the target element, toggling element, and running update().\n     * @function\n     * @private\n     */\n\n    _createClass(ResponsiveToggle, [{\n      key: '_init',\n      value: function () {\n        function _init() {\n          var targetID = this.$element.data('responsive-toggle');\n          if (!targetID) {\n            console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n          }\n\n          this.$targetMenu = $('#' + targetID);\n          this.$toggler = this.$element.find('[data-toggle]');\n\n          this._update();\n        }\n\n        return _init;\n      }()\n\n      /**\n       * Adds necessary event handlers for the tab bar to work.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function () {\n        function _events() {\n          var _this = this;\n\n          this._updateMqHandler = this._update.bind(this);\n\n          $(window).on('changed.zf.mediaquery', this._updateMqHandler);\n\n          this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n        }\n\n        return _events;\n      }()\n\n      /**\n       * Checks the current media query to determine if the tab bar should be visible or hidden.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_update',\n      value: function () {\n        function _update() {\n          // Mobile\n          if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n            this.$element.show();\n            this.$targetMenu.hide();\n          }\n\n          // Desktop\n          else {\n              this.$element.hide();\n              this.$targetMenu.show();\n            }\n        }\n\n        return _update;\n      }()\n\n      /**\n       * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n       * @function\n       * @fires ResponsiveToggle#toggled\n       */\n\n    }, {\n      key: 'toggleMenu',\n      value: function () {\n        function toggleMenu() {\n          if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n            this.$targetMenu.toggle(0);\n\n            /**\n             * Fires when the element attached to the tab bar toggles.\n             * @event ResponsiveToggle#toggled\n             */\n            this.$element.trigger('toggled.zf.responsiveToggle');\n          }\n        }\n\n        return toggleMenu;\n      }()\n    }, {\n      key: 'destroy',\n      value: function () {\n        function destroy() {\n          this.$element.off('.zf.responsiveToggle');\n          this.$toggler.off('.zf.responsiveToggle');\n\n          $(window).off('changed.zf.mediaquery', this._updateMqHandler);\n\n          Foundation.unregisterPlugin(this);\n        }\n\n        return destroy;\n      }()\n    }]);\n\n    return ResponsiveToggle;\n  }();\n\n  ResponsiveToggle.defaults = {\n    /**\n     * The breakpoint after which the menu is always shown, and the tab bar is hidden.\n     * @option\n     * @example 'medium'\n     */\n    hideFor: 'medium'\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/dist/plugins/foundation.responsiveToggle.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/dist/plugins/foundation.responsiveToggle.js.map","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * ResponsiveToggle module.\n   * @module foundation.responsiveToggle\n   * @requires foundation.util.mediaQuery\n   */\n\n  var ResponsiveToggle = function () {\n    /**\n     * Creates a new instance of Tab Bar.\n     * @class\n     * @fires ResponsiveToggle#init\n     * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function ResponsiveToggle(element, options) {\n      _classCallCheck(this, ResponsiveToggle);\n\n      this.$element = $(element);\n      this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveToggle');\n    }\n\n    /**\n     * Initializes the tab bar by finding the target element, toggling element, and running update().\n     * @function\n     * @private\n     */\n\n\n    _createClass(ResponsiveToggle, [{\n      key: '_init',\n      value: function _init() {\n        var targetID = this.$element.data('responsive-toggle');\n        if (!targetID) {\n          console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n        }\n\n        this.$targetMenu = $('#' + targetID);\n        this.$toggler = this.$element.find('[data-toggle]');\n\n        this._update();\n      }\n\n      /**\n       * Adds necessary event handlers for the tab bar to work.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this._updateMqHandler = this._update.bind(this);\n\n        $(window).on('changed.zf.mediaquery', this._updateMqHandler);\n\n        this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n      }\n\n      /**\n       * Checks the current media query to determine if the tab bar should be visible or hidden.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_update',\n      value: function _update() {\n        // Mobile\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          this.$element.show();\n          this.$targetMenu.hide();\n        }\n\n        // Desktop\n        else {\n            this.$element.hide();\n            this.$targetMenu.show();\n          }\n      }\n\n      /**\n       * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n       * @function\n       * @fires ResponsiveToggle#toggled\n       */\n\n    }, {\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          this.$targetMenu.toggle(0);\n\n          /**\n           * Fires when the element attached to the tab bar toggles.\n           * @event ResponsiveToggle#toggled\n           */\n          this.$element.trigger('toggled.zf.responsiveToggle');\n        }\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.responsiveToggle');\n        this.$toggler.off('.zf.responsiveToggle');\n\n        $(window).off('changed.zf.mediaquery', this._updateMqHandler);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveToggle;\n  }();\n\n  ResponsiveToggle.defaults = {\n    /**\n     * The breakpoint after which the menu is always shown, and the tab bar is hidden.\n     * @option\n     * @example 'medium'\n     */\n    hideFor: 'medium'\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\n}(jQuery);"]},"hash":"c1b6becb3ad38f74527782f4d86eccd52c450144"}
