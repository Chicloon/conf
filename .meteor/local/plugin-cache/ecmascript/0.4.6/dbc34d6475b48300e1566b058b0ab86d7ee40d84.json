{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/dist/plugins/foundation.orbit.js","filenameRelative":"/packages/zurb:foundation-sites/dist/plugins/foundation.orbit.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/dist/plugins/foundation.orbit.js.map","sourceFileName":"/packages/zurb:foundation-sites/dist/plugins/foundation.orbit.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.orbit"},"ignored":false,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n!function ($) {\n\n  /**\n   * Orbit module.\n   * @module foundation.orbit\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   * @requires foundation.util.timerAndImageLoader\n   * @requires foundation.util.touch\n   */\n\n  var Orbit = function () {\n    /**\n    * Creates a new instance of an orbit carousel.\n    * @class\n    * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\n    * @param {Object} options - Overrides to the default plugin settings.\n    */\n\n    function Orbit(element, options) {\n      _classCallCheck(this, Orbit);\n\n      this.$element = element;\n      this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Orbit');\n      Foundation.Keyboard.register('Orbit', {\n        'ltr': {\n          'ARROW_RIGHT': 'next',\n          'ARROW_LEFT': 'previous'\n        },\n        'rtl': {\n          'ARROW_LEFT': 'next',\n          'ARROW_RIGHT': 'previous'\n        }\n      });\n    }\n\n    /**\n    * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\n    * @function\n    * @private\n    */\n\n    _createClass(Orbit, [{\n      key: '_init',\n      value: function () {\n        function _init() {\n          this.$wrapper = this.$element.find('.' + this.options.containerClass);\n          this.$slides = this.$element.find('.' + this.options.slideClass);\n          var $images = this.$element.find('img'),\n              initActive = this.$slides.filter('.is-active');\n\n          if (!initActive.length) {\n            this.$slides.eq(0).addClass('is-active');\n          }\n\n          if (!this.options.useMUI) {\n            this.$slides.addClass('no-motionui');\n          }\n\n          if ($images.length) {\n            Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\n          } else {\n            this._prepareForOrbit(); //hehe\n          }\n\n          if (this.options.bullets) {\n            this._loadBullets();\n          }\n\n          this._events();\n\n          if (this.options.autoPlay && this.$slides.length > 1) {\n            this.geoSync();\n          }\n\n          if (this.options.accessible) {\n            // allow wrapper to be focusable to enable arrow navigation\n            this.$wrapper.attr('tabindex', 0);\n          }\n        }\n\n        return _init;\n      }()\n\n      /**\n      * Creates a jQuery collection of bullets, if they are being used.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_loadBullets',\n      value: function () {\n        function _loadBullets() {\n          this.$bullets = this.$element.find('.' + this.options.boxOfBullets).find('button');\n        }\n\n        return _loadBullets;\n      }()\n\n      /**\n      * Sets a `timer` object on the orbit, and starts the counter for the next slide.\n      * @function\n      */\n\n    }, {\n      key: 'geoSync',\n      value: function () {\n        function geoSync() {\n          var _this = this;\n          this.timer = new Foundation.Timer(this.$element, {\n            duration: this.options.timerDelay,\n            infinite: false\n          }, function () {\n            _this.changeSlide(true);\n          });\n          this.timer.start();\n        }\n\n        return geoSync;\n      }()\n\n      /**\n      * Sets wrapper and slide heights for the orbit.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_prepareForOrbit',\n      value: function () {\n        function _prepareForOrbit() {\n          var _this = this;\n          this._setWrapperHeight(function (max) {\n            _this._setSlideHeight(max);\n          });\n        }\n\n        return _prepareForOrbit;\n      }()\n\n      /**\n      * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\n      * @function\n      * @private\n      * @param {Function} cb - a callback function to fire when complete.\n      */\n\n    }, {\n      key: '_setWrapperHeight',\n      value: function () {\n        function _setWrapperHeight(cb) {\n          //rewrite this to `for` loop\n          var max = 0,\n              temp,\n              counter = 0;\n\n          this.$slides.each(function () {\n            temp = this.getBoundingClientRect().height;\n            $(this).attr('data-slide', counter);\n\n            if (counter) {\n              //if not the first slide, set css position and display property\n              $(this).css({ 'position': 'relative', 'display': 'none' });\n            }\n            max = temp > max ? temp : max;\n            counter++;\n          });\n\n          if (counter === this.$slides.length) {\n            this.$wrapper.css({ 'height': max }); //only change the wrapper height property once.\n            cb(max); //fire callback with max height dimension.\n          }\n        }\n\n        return _setWrapperHeight;\n      }()\n\n      /**\n      * Sets the max-height of each slide.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_setSlideHeight',\n      value: function () {\n        function _setSlideHeight(height) {\n          this.$slides.each(function () {\n            $(this).css('max-height', height);\n          });\n        }\n\n        return _setSlideHeight;\n      }()\n\n      /**\n      * Adds event listeners to basically everything within the element.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_events',\n      value: function () {\n        function _events() {\n          var _this = this;\n\n          //***************************************\n          //**Now using custom event - thanks to:**\n          //**      Yohai Ararat of Toronto      **\n          //***************************************\n          if (this.$slides.length > 1) {\n\n            if (this.options.swipe) {\n              this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit').on('swipeleft.zf.orbit', function (e) {\n                e.preventDefault();\n                _this.changeSlide(true);\n              }).on('swiperight.zf.orbit', function (e) {\n                e.preventDefault();\n                _this.changeSlide(false);\n              });\n            }\n            //***************************************\n\n            if (this.options.autoPlay) {\n              this.$slides.on('click.zf.orbit', function () {\n                _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\n                _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\n              });\n\n              if (this.options.pauseOnHover) {\n                this.$element.on('mouseenter.zf.orbit', function () {\n                  _this.timer.pause();\n                }).on('mouseleave.zf.orbit', function () {\n                  if (!_this.$element.data('clickedOn')) {\n                    _this.timer.start();\n                  }\n                });\n              }\n            }\n\n            if (this.options.navButtons) {\n              var $controls = this.$element.find('.' + this.options.nextClass + ', .' + this.options.prevClass);\n              $controls.attr('tabindex', 0)\n              //also need to handle enter/return and spacebar key presses\n              .on('click.zf.orbit touchend.zf.orbit', function (e) {\n                e.preventDefault();\n                _this.changeSlide($(this).hasClass(_this.options.nextClass));\n              });\n            }\n\n            if (this.options.bullets) {\n              this.$bullets.on('click.zf.orbit touchend.zf.orbit', function () {\n                if (/is-active/g.test(this.className)) {\n                  return false;\n                } //if this is active, kick out of function.\n                var idx = $(this).data('slide'),\n                    ltr = idx > _this.$slides.filter('.is-active').data('slide'),\n                    $slide = _this.$slides.eq(idx);\n\n                _this.changeSlide(ltr, $slide, idx);\n              });\n            }\n\n            this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function (e) {\n              // handle keyboard event with keyboard util\n              Foundation.Keyboard.handleKey(e, 'Orbit', {\n                next: function () {\n                  function next() {\n                    _this.changeSlide(true);\n                  }\n\n                  return next;\n                }(),\n                previous: function () {\n                  function previous() {\n                    _this.changeSlide(false);\n                  }\n\n                  return previous;\n                }(),\n                handled: function () {\n                  function handled() {\n                    // if bullet is focused, make sure focus moves\n                    if ($(e.target).is(_this.$bullets)) {\n                      _this.$bullets.filter('.is-active').focus();\n                    }\n                  }\n\n                  return handled;\n                }()\n              });\n            });\n          }\n        }\n\n        return _events;\n      }()\n\n      /**\n      * Changes the current slide to a new one.\n      * @function\n      * @param {Boolean} isLTR - flag if the slide should move left to right.\n      * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\n      * @param {Number} idx - the index of the new slide in its collection, if one chosen.\n      * @fires Orbit#slidechange\n      */\n\n    }, {\n      key: 'changeSlide',\n      value: function () {\n        function changeSlide(isLTR, chosenSlide, idx) {\n          var $curSlide = this.$slides.filter('.is-active').eq(0);\n\n          if (/mui/g.test($curSlide[0].className)) {\n            return false;\n          } //if the slide is currently animating, kick out of the function\n\n          var $firstSlide = this.$slides.first(),\n              $lastSlide = this.$slides.last(),\n              dirIn = isLTR ? 'Right' : 'Left',\n              dirOut = isLTR ? 'Left' : 'Right',\n              _this = this,\n              $newSlide;\n\n          if (!chosenSlide) {\n            //most of the time, this will be auto played or clicked from the navButtons.\n            $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\n            this.options.infiniteWrap ? $curSlide.next('.' + this.options.slideClass).length ? $curSlide.next('.' + this.options.slideClass) : $firstSlide : $curSlide.next('.' + this.options.slideClass) : //pick next slide if moving left to right\n            this.options.infiniteWrap ? $curSlide.prev('.' + this.options.slideClass).length ? $curSlide.prev('.' + this.options.slideClass) : $lastSlide : $curSlide.prev('.' + this.options.slideClass); //pick prev slide if moving right to left\n          } else {\n              $newSlide = chosenSlide;\n            }\n\n          if ($newSlide.length) {\n            if (this.options.bullets) {\n              idx = idx || this.$slides.index($newSlide); //grab index to update bullets\n              this._updateBullets(idx);\n            }\n\n            if (this.options.useMUI) {\n              Foundation.Motion.animateIn($newSlide.addClass('is-active').css({ 'position': 'absolute', 'top': 0 }), this.options['animInFrom' + dirIn], function () {\n                $newSlide.css({ 'position': 'relative', 'display': 'block' }).attr('aria-live', 'polite');\n              });\n\n              Foundation.Motion.animateOut($curSlide.removeClass('is-active'), this.options['animOutTo' + dirOut], function () {\n                $curSlide.removeAttr('aria-live');\n                if (_this.options.autoPlay && !_this.timer.isPaused) {\n                  _this.timer.restart();\n                }\n                //do stuff?\n              });\n            } else {\n                $curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();\n                $newSlide.addClass('is-active is-in').attr('aria-live', 'polite').show();\n                if (this.options.autoPlay && !this.timer.isPaused) {\n                  this.timer.restart();\n                }\n              }\n            /**\n            * Triggers when the slide has finished animating in.\n            * @event Orbit#slidechange\n            */\n            this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\n          }\n        }\n\n        return changeSlide;\n      }()\n\n      /**\n      * Updates the active state of the bullets, if displayed.\n      * @function\n      * @private\n      * @param {Number} idx - the index of the current slide.\n      */\n\n    }, {\n      key: '_updateBullets',\n      value: function () {\n        function _updateBullets(idx) {\n          var $oldBullet = this.$element.find('.' + this.options.boxOfBullets).find('.is-active').removeClass('is-active').blur(),\n              span = $oldBullet.find('span:last').detach(),\n              $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\n        }\n\n        return _updateBullets;\n      }()\n\n      /**\n      * Destroys the carousel and hides the element.\n      * @function\n      */\n\n    }, {\n      key: 'destroy',\n      value: function () {\n        function destroy() {\n          this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\n          Foundation.unregisterPlugin(this);\n        }\n\n        return destroy;\n      }()\n    }]);\n\n    return Orbit;\n  }();\n\n  Orbit.defaults = {\n    /**\n    * Tells the JS to look for and loadBullets.\n    * @option\n    * @example true\n    */\n    bullets: true,\n    /**\n    * Tells the JS to apply event listeners to nav buttons\n    * @option\n    * @example true\n    */\n    navButtons: true,\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-in-right'\n    */\n    animInFromRight: 'slide-in-right',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-out-right'\n    */\n    animOutToRight: 'slide-out-right',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-in-left'\n    *\n    */\n    animInFromLeft: 'slide-in-left',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-out-left'\n    */\n    animOutToLeft: 'slide-out-left',\n    /**\n    * Allows Orbit to automatically animate on page load.\n    * @option\n    * @example true\n    */\n    autoPlay: true,\n    /**\n    * Amount of time, in ms, between slide transitions\n    * @option\n    * @example 5000\n    */\n    timerDelay: 5000,\n    /**\n    * Allows Orbit to infinitely loop through the slides\n    * @option\n    * @example true\n    */\n    infiniteWrap: true,\n    /**\n    * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\n    * @option\n    * @example true\n    */\n    swipe: true,\n    /**\n    * Allows the timing function to pause animation on hover.\n    * @option\n    * @example true\n    */\n    pauseOnHover: true,\n    /**\n    * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\n    * @option\n    * @example true\n    */\n    accessible: true,\n    /**\n    * Class applied to the container of Orbit\n    * @option\n    * @example 'orbit-container'\n    */\n    containerClass: 'orbit-container',\n    /**\n    * Class applied to individual slides.\n    * @option\n    * @example 'orbit-slide'\n    */\n    slideClass: 'orbit-slide',\n    /**\n    * Class applied to the bullet container. You're welcome.\n    * @option\n    * @example 'orbit-bullets'\n    */\n    boxOfBullets: 'orbit-bullets',\n    /**\n    * Class applied to the `next` navigation button.\n    * @option\n    * @example 'orbit-next'\n    */\n    nextClass: 'orbit-next',\n    /**\n    * Class applied to the `previous` navigation button.\n    * @option\n    * @example 'orbit-previous'\n    */\n    prevClass: 'orbit-previous',\n    /**\n    * Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\n    * @option\n    * @example true\n    */\n    useMUI: true\n  };\n\n  // Window exports\n  Foundation.plugin(Orbit, 'Orbit');\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/dist/plugins/foundation.orbit.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/dist/plugins/foundation.orbit.js.map","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Orbit module.\n   * @module foundation.orbit\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   * @requires foundation.util.timerAndImageLoader\n   * @requires foundation.util.touch\n   */\n\n  var Orbit = function () {\n    /**\n    * Creates a new instance of an orbit carousel.\n    * @class\n    * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\n    * @param {Object} options - Overrides to the default plugin settings.\n    */\n\n    function Orbit(element, options) {\n      _classCallCheck(this, Orbit);\n\n      this.$element = element;\n      this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Orbit');\n      Foundation.Keyboard.register('Orbit', {\n        'ltr': {\n          'ARROW_RIGHT': 'next',\n          'ARROW_LEFT': 'previous'\n        },\n        'rtl': {\n          'ARROW_LEFT': 'next',\n          'ARROW_RIGHT': 'previous'\n        }\n      });\n    }\n\n    /**\n    * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\n    * @function\n    * @private\n    */\n\n\n    _createClass(Orbit, [{\n      key: '_init',\n      value: function _init() {\n        this.$wrapper = this.$element.find('.' + this.options.containerClass);\n        this.$slides = this.$element.find('.' + this.options.slideClass);\n        var $images = this.$element.find('img'),\n            initActive = this.$slides.filter('.is-active');\n\n        if (!initActive.length) {\n          this.$slides.eq(0).addClass('is-active');\n        }\n\n        if (!this.options.useMUI) {\n          this.$slides.addClass('no-motionui');\n        }\n\n        if ($images.length) {\n          Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\n        } else {\n          this._prepareForOrbit(); //hehe\n        }\n\n        if (this.options.bullets) {\n          this._loadBullets();\n        }\n\n        this._events();\n\n        if (this.options.autoPlay && this.$slides.length > 1) {\n          this.geoSync();\n        }\n\n        if (this.options.accessible) {\n          // allow wrapper to be focusable to enable arrow navigation\n          this.$wrapper.attr('tabindex', 0);\n        }\n      }\n\n      /**\n      * Creates a jQuery collection of bullets, if they are being used.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_loadBullets',\n      value: function _loadBullets() {\n        this.$bullets = this.$element.find('.' + this.options.boxOfBullets).find('button');\n      }\n\n      /**\n      * Sets a `timer` object on the orbit, and starts the counter for the next slide.\n      * @function\n      */\n\n    }, {\n      key: 'geoSync',\n      value: function geoSync() {\n        var _this = this;\n        this.timer = new Foundation.Timer(this.$element, {\n          duration: this.options.timerDelay,\n          infinite: false\n        }, function () {\n          _this.changeSlide(true);\n        });\n        this.timer.start();\n      }\n\n      /**\n      * Sets wrapper and slide heights for the orbit.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_prepareForOrbit',\n      value: function _prepareForOrbit() {\n        var _this = this;\n        this._setWrapperHeight(function (max) {\n          _this._setSlideHeight(max);\n        });\n      }\n\n      /**\n      * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\n      * @function\n      * @private\n      * @param {Function} cb - a callback function to fire when complete.\n      */\n\n    }, {\n      key: '_setWrapperHeight',\n      value: function _setWrapperHeight(cb) {\n        //rewrite this to `for` loop\n        var max = 0,\n            temp,\n            counter = 0;\n\n        this.$slides.each(function () {\n          temp = this.getBoundingClientRect().height;\n          $(this).attr('data-slide', counter);\n\n          if (counter) {\n            //if not the first slide, set css position and display property\n            $(this).css({ 'position': 'relative', 'display': 'none' });\n          }\n          max = temp > max ? temp : max;\n          counter++;\n        });\n\n        if (counter === this.$slides.length) {\n          this.$wrapper.css({ 'height': max }); //only change the wrapper height property once.\n          cb(max); //fire callback with max height dimension.\n        }\n      }\n\n      /**\n      * Sets the max-height of each slide.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_setSlideHeight',\n      value: function _setSlideHeight(height) {\n        this.$slides.each(function () {\n          $(this).css('max-height', height);\n        });\n      }\n\n      /**\n      * Adds event listeners to basically everything within the element.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        //***************************************\n        //**Now using custom event - thanks to:**\n        //**      Yohai Ararat of Toronto      **\n        //***************************************\n        if (this.$slides.length > 1) {\n\n          if (this.options.swipe) {\n            this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit').on('swipeleft.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide(true);\n            }).on('swiperight.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide(false);\n            });\n          }\n          //***************************************\n\n          if (this.options.autoPlay) {\n            this.$slides.on('click.zf.orbit', function () {\n              _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\n              _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\n            });\n\n            if (this.options.pauseOnHover) {\n              this.$element.on('mouseenter.zf.orbit', function () {\n                _this.timer.pause();\n              }).on('mouseleave.zf.orbit', function () {\n                if (!_this.$element.data('clickedOn')) {\n                  _this.timer.start();\n                }\n              });\n            }\n          }\n\n          if (this.options.navButtons) {\n            var $controls = this.$element.find('.' + this.options.nextClass + ', .' + this.options.prevClass);\n            $controls.attr('tabindex', 0)\n            //also need to handle enter/return and spacebar key presses\n            .on('click.zf.orbit touchend.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide($(this).hasClass(_this.options.nextClass));\n            });\n          }\n\n          if (this.options.bullets) {\n            this.$bullets.on('click.zf.orbit touchend.zf.orbit', function () {\n              if (/is-active/g.test(this.className)) {\n                return false;\n              } //if this is active, kick out of function.\n              var idx = $(this).data('slide'),\n                  ltr = idx > _this.$slides.filter('.is-active').data('slide'),\n                  $slide = _this.$slides.eq(idx);\n\n              _this.changeSlide(ltr, $slide, idx);\n            });\n          }\n\n          this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function (e) {\n            // handle keyboard event with keyboard util\n            Foundation.Keyboard.handleKey(e, 'Orbit', {\n              next: function () {\n                _this.changeSlide(true);\n              },\n              previous: function () {\n                _this.changeSlide(false);\n              },\n              handled: function () {\n                // if bullet is focused, make sure focus moves\n                if ($(e.target).is(_this.$bullets)) {\n                  _this.$bullets.filter('.is-active').focus();\n                }\n              }\n            });\n          });\n        }\n      }\n\n      /**\n      * Changes the current slide to a new one.\n      * @function\n      * @param {Boolean} isLTR - flag if the slide should move left to right.\n      * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\n      * @param {Number} idx - the index of the new slide in its collection, if one chosen.\n      * @fires Orbit#slidechange\n      */\n\n    }, {\n      key: 'changeSlide',\n      value: function changeSlide(isLTR, chosenSlide, idx) {\n        var $curSlide = this.$slides.filter('.is-active').eq(0);\n\n        if (/mui/g.test($curSlide[0].className)) {\n          return false;\n        } //if the slide is currently animating, kick out of the function\n\n        var $firstSlide = this.$slides.first(),\n            $lastSlide = this.$slides.last(),\n            dirIn = isLTR ? 'Right' : 'Left',\n            dirOut = isLTR ? 'Left' : 'Right',\n            _this = this,\n            $newSlide;\n\n        if (!chosenSlide) {\n          //most of the time, this will be auto played or clicked from the navButtons.\n          $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\n          this.options.infiniteWrap ? $curSlide.next('.' + this.options.slideClass).length ? $curSlide.next('.' + this.options.slideClass) : $firstSlide : $curSlide.next('.' + this.options.slideClass) : //pick next slide if moving left to right\n          this.options.infiniteWrap ? $curSlide.prev('.' + this.options.slideClass).length ? $curSlide.prev('.' + this.options.slideClass) : $lastSlide : $curSlide.prev('.' + this.options.slideClass); //pick prev slide if moving right to left\n        } else {\n            $newSlide = chosenSlide;\n          }\n\n        if ($newSlide.length) {\n          if (this.options.bullets) {\n            idx = idx || this.$slides.index($newSlide); //grab index to update bullets\n            this._updateBullets(idx);\n          }\n\n          if (this.options.useMUI) {\n            Foundation.Motion.animateIn($newSlide.addClass('is-active').css({ 'position': 'absolute', 'top': 0 }), this.options['animInFrom' + dirIn], function () {\n              $newSlide.css({ 'position': 'relative', 'display': 'block' }).attr('aria-live', 'polite');\n            });\n\n            Foundation.Motion.animateOut($curSlide.removeClass('is-active'), this.options['animOutTo' + dirOut], function () {\n              $curSlide.removeAttr('aria-live');\n              if (_this.options.autoPlay && !_this.timer.isPaused) {\n                _this.timer.restart();\n              }\n              //do stuff?\n            });\n          } else {\n              $curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();\n              $newSlide.addClass('is-active is-in').attr('aria-live', 'polite').show();\n              if (this.options.autoPlay && !this.timer.isPaused) {\n                this.timer.restart();\n              }\n            }\n          /**\n          * Triggers when the slide has finished animating in.\n          * @event Orbit#slidechange\n          */\n          this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\n        }\n      }\n\n      /**\n      * Updates the active state of the bullets, if displayed.\n      * @function\n      * @private\n      * @param {Number} idx - the index of the current slide.\n      */\n\n    }, {\n      key: '_updateBullets',\n      value: function _updateBullets(idx) {\n        var $oldBullet = this.$element.find('.' + this.options.boxOfBullets).find('.is-active').removeClass('is-active').blur(),\n            span = $oldBullet.find('span:last').detach(),\n            $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\n      }\n\n      /**\n      * Destroys the carousel and hides the element.\n      * @function\n      */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Orbit;\n  }();\n\n  Orbit.defaults = {\n    /**\n    * Tells the JS to look for and loadBullets.\n    * @option\n    * @example true\n    */\n    bullets: true,\n    /**\n    * Tells the JS to apply event listeners to nav buttons\n    * @option\n    * @example true\n    */\n    navButtons: true,\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-in-right'\n    */\n    animInFromRight: 'slide-in-right',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-out-right'\n    */\n    animOutToRight: 'slide-out-right',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-in-left'\n    *\n    */\n    animInFromLeft: 'slide-in-left',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-out-left'\n    */\n    animOutToLeft: 'slide-out-left',\n    /**\n    * Allows Orbit to automatically animate on page load.\n    * @option\n    * @example true\n    */\n    autoPlay: true,\n    /**\n    * Amount of time, in ms, between slide transitions\n    * @option\n    * @example 5000\n    */\n    timerDelay: 5000,\n    /**\n    * Allows Orbit to infinitely loop through the slides\n    * @option\n    * @example true\n    */\n    infiniteWrap: true,\n    /**\n    * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\n    * @option\n    * @example true\n    */\n    swipe: true,\n    /**\n    * Allows the timing function to pause animation on hover.\n    * @option\n    * @example true\n    */\n    pauseOnHover: true,\n    /**\n    * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\n    * @option\n    * @example true\n    */\n    accessible: true,\n    /**\n    * Class applied to the container of Orbit\n    * @option\n    * @example 'orbit-container'\n    */\n    containerClass: 'orbit-container',\n    /**\n    * Class applied to individual slides.\n    * @option\n    * @example 'orbit-slide'\n    */\n    slideClass: 'orbit-slide',\n    /**\n    * Class applied to the bullet container. You're welcome.\n    * @option\n    * @example 'orbit-bullets'\n    */\n    boxOfBullets: 'orbit-bullets',\n    /**\n    * Class applied to the `next` navigation button.\n    * @option\n    * @example 'orbit-next'\n    */\n    nextClass: 'orbit-next',\n    /**\n    * Class applied to the `previous` navigation button.\n    * @option\n    * @example 'orbit-previous'\n    */\n    prevClass: 'orbit-previous',\n    /**\n    * Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\n    * @option\n    * @example true\n    */\n    useMUI: true\n  };\n\n  // Window exports\n  Foundation.plugin(Orbit, 'Orbit');\n}(jQuery);"]},"hash":"dbc34d6475b48300e1566b058b0ab86d7ee40d84"}
