{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/vendor/jquery/src/serialize.js","filenameRelative":"/packages/zurb:foundation-sites/vendor/jquery/src/serialize.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/vendor/jquery/src/serialize.js.map","sourceFileName":"/packages/zurb:foundation-sites/vendor/jquery/src/serialize.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"serialize"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\ndefine([\"./core\", \"./manipulation/var/rcheckableType\", \"./core/init\", \"./traversing\", // filter\n\"./attributes/prop\"], function (jQuery, rcheckableType) {\n\n\tvar r20 = /%20/g,\n\t    rbracket = /\\[\\]$/,\n\t    rCRLF = /\\r?\\n/g,\n\t    rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\t    rsubmittable = /^(?:input|select|textarea|keygen)/i;\n\n\tfunction buildParams(prefix, obj, traditional, add) {\n\t\tvar name;\n\n\t\tif (jQuery.isArray(obj)) {\n\n\t\t\t// Serialize array item.\n\t\t\tjQuery.each(obj, function (i, v) {\n\t\t\t\tif (traditional || rbracket.test(prefix)) {\n\n\t\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\t\tadd(prefix, v);\n\t\t\t\t} else {\n\n\t\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\t\tbuildParams(prefix + \"[\" + ((typeof v === \"undefined\" ? \"undefined\" : (0, _typeof3[\"default\"])(v)) === \"object\" && v != null ? i : \"\") + \"]\", v, traditional, add);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (!traditional && jQuery.type(obj) === \"object\") {\n\n\t\t\t// Serialize object item.\n\t\t\tfor (name in meteorBabelHelpers.sanitizeForInObject(obj)) {\n\t\t\t\tbuildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Serialize scalar item.\n\t\t\tadd(prefix, obj);\n\t\t}\n\t}\n\n\t// Serialize an array of form elements or a set of\n\t// key/values into a query string\n\tjQuery.param = function (a, traditional) {\n\t\tvar prefix,\n\t\t    s = [],\n\t\t    add = function add(key, value) {\n\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction(value) ? value() : value == null ? \"\" : value;\n\t\t\ts[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n\t\t};\n\n\t\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\t\tif (traditional === undefined) {\n\t\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t\t}\n\n\t\t// If an array was passed in, assume that it is an array of form elements.\n\t\tif (jQuery.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n\n\t\t\t// Serialize the form elements\n\t\t\tjQuery.each(a, function () {\n\t\t\t\tadd(this.name, this.value);\n\t\t\t});\n\t\t} else {\n\n\t\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t\t// did it), otherwise encode params recursively.\n\t\t\tfor (prefix in meteorBabelHelpers.sanitizeForInObject(a)) {\n\t\t\t\tbuildParams(prefix, a[prefix], traditional, add);\n\t\t\t}\n\t\t}\n\n\t\t// Return the resulting serialization\n\t\treturn s.join(\"&\").replace(r20, \"+\");\n\t};\n\n\tjQuery.fn.extend({\n\t\tserialize: function () {\n\t\t\tfunction serialize() {\n\t\t\t\treturn jQuery.param(this.serializeArray());\n\t\t\t}\n\n\t\t\treturn serialize;\n\t\t}(),\n\t\tserializeArray: function () {\n\t\t\tfunction serializeArray() {\n\t\t\t\treturn this.map(function () {\n\n\t\t\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\t\t\tvar elements = jQuery.prop(this, \"elements\");\n\t\t\t\t\treturn elements ? jQuery.makeArray(elements) : this;\n\t\t\t\t}).filter(function () {\n\t\t\t\t\tvar type = this.type;\n\n\t\t\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\t\t\treturn this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n\t\t\t\t}).map(function (i, elem) {\n\t\t\t\t\tvar val = jQuery(this).val();\n\n\t\t\t\t\treturn val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function (val) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace(rCRLF, \"\\r\\n\") };\n\t\t\t\t\t}) : { name: elem.name, value: val.replace(rCRLF, \"\\r\\n\") };\n\t\t\t\t}).get();\n\t\t\t}\n\n\t\t\treturn serializeArray;\n\t\t}()\n\t});\n\n\treturn jQuery;\n});","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/vendor/jquery/src/serialize.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/vendor/jquery/src/serialize.js.map","sourcesContent":["define( [\n\t\"./core\",\n\t\"./manipulation/var/rcheckableType\",\n\t\"./core/init\",\n\t\"./traversing\", // filter\n\t\"./attributes/prop\"\n], function( jQuery, rcheckableType ) {\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t} ) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\nreturn jQuery;\n} );\n"]},"hash":"7f255f78be7f5cd50abe1faf318ae382bec8d679"}
