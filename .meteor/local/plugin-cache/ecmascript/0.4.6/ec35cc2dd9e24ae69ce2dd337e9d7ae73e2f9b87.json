{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/gulp/customizer.js","filenameRelative":"/packages/zurb:foundation-sites/gulp/customizer.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/gulp/customizer.js.map","sourceFileName":"/packages/zurb:foundation-sites/gulp/customizer.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"customizer"},"ignored":false,"code":"var addSrc = require('gulp-add-src');\nvar babel = require('gulp-babel');\nvar concat = require('gulp-concat');\nvar cssnano = require('gulp-cssnano');\nvar customizer = require('../customizer/lib');\nvar File = require('vinyl');\nvar fs = require('fs');\nvar gulp = require('gulp');\nvar If = require('gulp-if');\nvar path = require('path');\nvar Readable = require('stream').Readable;\nvar replace = require('gulp-replace');\nvar rename = require('gulp-rename');\nvar rimraf = require('rimraf');\nvar sass = require('gulp-sass');\nvar autoprefixer = require('gulp-autoprefixer');\nvar source = require('vinyl-source-stream');\nvar touch = require('touch');\nvar uglify = require('gulp-uglify');\nvar yaml = require('js-yaml').safeLoad;\nvar yargs = require('yargs');\nvar zip = require('gulp-zip');\n\nvar ARGS = require('yargs').argv;\nvar FOUNDATION_VERSION = require('../package.json').version;\nvar OUTPUT_DIR = ARGS.output || 'custom-build';\nvar COMPATIBILITY = ['last 2 versions', 'ie >= 9', 'and_chr >= 2.3'];\nvar CUSTOMIZER_CONFIG;\nvar MODULE_LIST;\nvar VARIABLE_LIST;\n\n// Load the configuration file for the customizer. It's a list of modules to load and Sass variables to override\ngulp.task('customizer:loadConfig', function (done) {\n  fs.readFile('customizer/config.yml', function (err, data) {\n    var moduleListPath = ARGS.modules || '../customizer/complete';\n    var moduleList = require(moduleListPath);\n\n    CUSTOMIZER_CONFIG = yaml(data.toString());\n    MODULE_LIST = moduleList.modules;\n    VARIABLE_LIST = moduleList.variables || {};\n    done();\n  });\n});\n\n// Creates a Sass file from the module/variable list and creates foundation.css and foundation.min.css\ngulp.task('customizer:sass', ['customizer:loadConfig'], function () {\n  var sassFile = customizer.sass(CUSTOMIZER_CONFIG, MODULE_LIST, VARIABLE_LIST);\n\n  // Create a stream with our makeshift Sass file\n  var stream = new Readable({ objectMode: true });\n  stream._read = function () {};\n  stream.push(new File({\n    path: 'foundation.scss',\n    contents: new Buffer(sassFile)\n  }));\n  stream.push(null);\n\n  return stream.pipe(sass({\n    includePaths: ['scss', 'node_modules/motion-ui/src']\n  })).pipe(autoprefixer({\n    browsers: COMPATIBILITY\n  })).pipe(gulp.dest(path.join(OUTPUT_DIR, 'css'))).pipe(cssnano()).pipe(rename('foundation.min.css')).pipe(gulp.dest(path.join(OUTPUT_DIR, 'css')));\n});\n\n// Creates a Foundation JavaScript file from the module list, and also copies dependencies (jQuery, what-input)\ngulp.task('customizer:javascript', ['customizer:loadConfig'], function () {\n  var jsPaths = customizer.js(CUSTOMIZER_CONFIG, MODULE_LIST);\n\n  return gulp.src(jsPaths).pipe(babel()).pipe(concat('foundation.js')).pipe(gulp.dest(path.join(OUTPUT_DIR, 'js/vendor'))).pipe(uglify()).pipe(rename('foundation.min.js')).pipe(addSrc(['node_modules/jquery/dist/jquery.js', 'node_modules/what-input/what-input.js'])).pipe(gulp.dest(path.join(OUTPUT_DIR, 'js/vendor')));\n});\n\n// Copies the boilerplate index.html to the custom download folder\ngulp.task('customizer:html', ['customizer:loadConfig'], function () {\n  var rtlEnabled = VARIABLE_LIST['global-text-direction'] && VARIABLE_LIST['global-text-direction'] === 'rtl';\n\n  return gulp.src('customizer/index.html').pipe(If(rtlEnabled, replace('ltr', 'rtl'))).pipe(gulp.dest(OUTPUT_DIR));\n});\n\n// Creates a custom build by:\n//   - Generating a CSS file\n//   - Generating a JS file\n//   - Copying the index.html file\n//   - Creating a blank app.css file\n//   - Creating an app.js file with Foundation initialization code\ngulp.task('customizer', ['customizer:sass', 'customizer:javascript', 'customizer:html'], function (done) {\n  var outputFolder = path.dirname(OUTPUT_DIR);\n  var outputFileName = path.basename(OUTPUT_DIR);\n\n  touch(path.join(OUTPUT_DIR, 'css/app.css'));\n  touch(path.join(OUTPUT_DIR, 'js/app.js'));\n  fs.writeFileSync(path.join(OUTPUT_DIR, 'js/app.js'), '$(document).foundation()\\n');\n\n  gulp.src(path.join(OUTPUT_DIR, '/**/*')).pipe(zip(path.basename(outputFileName) + '.zip')).pipe(gulp.dest(outputFolder)).on('finish', function () {\n    rimraf(OUTPUT_DIR, done);\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/gulp/customizer.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/gulp/customizer.js.map","sourcesContent":["var addSrc = require('gulp-add-src');\nvar babel = require('gulp-babel');\nvar concat = require('gulp-concat');\nvar cssnano = require('gulp-cssnano');\nvar customizer = require('../customizer/lib');\nvar File = require('vinyl');\nvar fs = require('fs');\nvar gulp = require('gulp');\nvar If = require('gulp-if');\nvar path = require('path');\nvar Readable = require('stream').Readable;\nvar replace = require('gulp-replace');\nvar rename = require('gulp-rename');\nvar rimraf = require('rimraf');\nvar sass = require('gulp-sass');\nvar autoprefixer = require('gulp-autoprefixer');\nvar source = require('vinyl-source-stream');\nvar touch = require('touch');\nvar uglify = require('gulp-uglify');\nvar yaml = require('js-yaml').safeLoad;\nvar yargs = require('yargs');\nvar zip = require('gulp-zip');\n\nvar ARGS = require('yargs').argv;\nvar FOUNDATION_VERSION = require('../package.json').version;\nvar OUTPUT_DIR = ARGS.output || 'custom-build';\nvar COMPATIBILITY = [\n  'last 2 versions',\n  'ie >= 9',\n  'and_chr >= 2.3'\n];\nvar CUSTOMIZER_CONFIG;\nvar MODULE_LIST;\nvar VARIABLE_LIST;\n\n// Load the configuration file for the customizer. It's a list of modules to load and Sass variables to override\ngulp.task('customizer:loadConfig', function(done) {\n  fs.readFile('customizer/config.yml', function(err, data) {\n    var moduleListPath = ARGS.modules || '../customizer/complete';\n    var moduleList = require(moduleListPath);\n\n    CUSTOMIZER_CONFIG = yaml(data.toString());\n    MODULE_LIST = moduleList.modules;\n    VARIABLE_LIST = moduleList.variables || {};\n    done();\n  });\n});\n\n// Creates a Sass file from the module/variable list and creates foundation.css and foundation.min.css\ngulp.task('customizer:sass', ['customizer:loadConfig'], function() {\n  var sassFile = customizer.sass(CUSTOMIZER_CONFIG, MODULE_LIST, VARIABLE_LIST);\n\n  // Create a stream with our makeshift Sass file\n  var stream = new Readable({ objectMode: true });\n  stream._read = function() {};\n  stream.push(new File({\n    path: 'foundation.scss',\n    contents: new Buffer(sassFile)\n  }));\n  stream.push(null);\n\n  return stream\n    .pipe(sass({\n      includePaths: [\n        'scss',\n        'node_modules/motion-ui/src'\n      ]\n    }))\n    .pipe(autoprefixer({\n      browsers: COMPATIBILITY\n    }))\n    .pipe(gulp.dest(path.join(OUTPUT_DIR, 'css')))\n    .pipe(cssnano())\n    .pipe(rename('foundation.min.css'))\n    .pipe(gulp.dest(path.join(OUTPUT_DIR, 'css')));\n});\n\n// Creates a Foundation JavaScript file from the module list, and also copies dependencies (jQuery, what-input)\ngulp.task('customizer:javascript', ['customizer:loadConfig'], function() {\n  var jsPaths = customizer.js(CUSTOMIZER_CONFIG, MODULE_LIST);\n\n  return gulp.src(jsPaths)\n    .pipe(babel())\n    .pipe(concat('foundation.js'))\n    .pipe(gulp.dest(path.join(OUTPUT_DIR, 'js/vendor')))\n    .pipe(uglify())\n    .pipe(rename('foundation.min.js'))\n    .pipe(addSrc([\n      'node_modules/jquery/dist/jquery.js',\n      'node_modules/what-input/what-input.js'\n    ]))\n    .pipe(gulp.dest(path.join(OUTPUT_DIR, 'js/vendor')));\n});\n\n// Copies the boilerplate index.html to the custom download folder\ngulp.task('customizer:html', ['customizer:loadConfig'], function() {\n  var rtlEnabled = VARIABLE_LIST['global-text-direction'] && VARIABLE_LIST['global-text-direction'] === 'rtl';\n\n  return gulp.src('customizer/index.html')\n    .pipe(If(rtlEnabled, replace('ltr', 'rtl')))\n    .pipe(gulp.dest(OUTPUT_DIR));\n});\n\n// Creates a custom build by:\n//   - Generating a CSS file\n//   - Generating a JS file\n//   - Copying the index.html file\n//   - Creating a blank app.css file\n//   - Creating an app.js file with Foundation initialization code\ngulp.task('customizer', ['customizer:sass', 'customizer:javascript', 'customizer:html'], function(done) {\n  var outputFolder = path.dirname(OUTPUT_DIR);\n  var outputFileName = path.basename(OUTPUT_DIR);\n\n  touch(path.join(OUTPUT_DIR, 'css/app.css'));\n  touch(path.join(OUTPUT_DIR, 'js/app.js'));\n  fs.writeFileSync(path.join(OUTPUT_DIR, 'js/app.js'), '$(document).foundation()\\n');\n\n  gulp.src(path.join(OUTPUT_DIR, '/**/*'))\n    .pipe(zip(path.basename(outputFileName) + '.zip'))\n    .pipe(gulp.dest(outputFolder))\n    .on('finish', function() {\n      rimraf(OUTPUT_DIR, done);\n    });\n});\n"]},"hash":"ec35cc2dd9e24ae69ce2dd337e9d7ae73e2f9b87"}
