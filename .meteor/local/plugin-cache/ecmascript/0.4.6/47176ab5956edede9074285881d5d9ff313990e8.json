{"metadata":{"usedHelpers":["classCallCheck","typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/js/foundation.tabs.js","filenameRelative":"/packages/zurb:foundation-sites/js/foundation.tabs.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/js/foundation.tabs.js.map","sourceFileName":"/packages/zurb:foundation-sites/js/foundation.tabs.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.tabs"},"ignored":false,"code":"'use strict';\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n!function ($) {\n\n  /**\n   * Tabs module.\n   * @module foundation.tabs\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.timerAndImageLoader if tabs contain images\n   */\n\n  var Tabs = function () {\n    /**\n     * Creates a new instance of tabs.\n     * @class\n     * @fires Tabs#init\n     * @param {jQuery} element - jQuery object to make into tabs.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Tabs(element, options) {\n      (0, _classCallCheck3['default'])(this, Tabs);\n\n      this.$element = element;\n      this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\n\n      this._init();\n      Foundation.registerPlugin(this, 'Tabs');\n      Foundation.Keyboard.register('Tabs', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'previous',\n        'ARROW_DOWN': 'next',\n        'ARROW_LEFT': 'previous'\n        // 'TAB': 'next',\n        // 'SHIFT_TAB': 'previous'\n      });\n    }\n\n    /**\n     * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\n     * @private\n     */\n\n\n    Tabs.prototype._init = function () {\n      function _init() {\n        var _this = this;\n\n        this.$tabTitles = this.$element.find('.' + this.options.linkClass);\n        this.$tabContent = $('[data-tabs-content=\"' + this.$element[0].id + '\"]');\n\n        this.$tabTitles.each(function () {\n          var $elem = $(this),\n              $link = $elem.find('a'),\n              isActive = $elem.hasClass('is-active'),\n              hash = $link[0].hash.slice(1),\n              linkId = $link[0].id ? $link[0].id : hash + '-label',\n              $tabContent = $('#' + hash);\n\n          $elem.attr({ 'role': 'presentation' });\n\n          $link.attr({\n            'role': 'tab',\n            'aria-controls': hash,\n            'aria-selected': isActive,\n            'id': linkId\n          });\n\n          $tabContent.attr({\n            'role': 'tabpanel',\n            'aria-hidden': !isActive,\n            'aria-labelledby': linkId\n          });\n\n          if (isActive && _this.options.autoFocus) {\n            $link.focus();\n          }\n        });\n\n        if (this.options.matchHeight) {\n          var $images = this.$tabContent.find('img');\n\n          if ($images.length) {\n            Foundation.onImagesLoaded($images, this._setHeight.bind(this));\n          } else {\n            this._setHeight();\n          }\n        }\n\n        this._events();\n      }\n\n      return _init;\n    }();\n\n    /**\n     * Adds event handlers for items within the tabs.\n     * @private\n     */\n\n\n    Tabs.prototype._events = function () {\n      function _events() {\n        this._addKeyHandler();\n        this._addClickHandler();\n        this._setHeightMqHandler = null;\n\n        if (this.options.matchHeight) {\n          this._setHeightMqHandler = this._setHeight.bind(this);\n\n          $(window).on('changed.zf.mediaquery', this._setHeightMqHandler);\n        }\n      }\n\n      return _events;\n    }();\n\n    /**\n     * Adds click handlers for items within the tabs.\n     * @private\n     */\n\n\n    Tabs.prototype._addClickHandler = function () {\n      function _addClickHandler() {\n        var _this = this;\n\n        this.$element.off('click.zf.tabs').on('click.zf.tabs', '.' + this.options.linkClass, function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n          if ($(this).hasClass('is-active')) {\n            return;\n          }\n          _this._handleTabChange($(this));\n        });\n      }\n\n      return _addClickHandler;\n    }();\n\n    /**\n     * Adds keyboard event handlers for items within the tabs.\n     * @private\n     */\n\n\n    Tabs.prototype._addKeyHandler = function () {\n      function _addKeyHandler() {\n        var _this = this;\n        var $firstTab = _this.$element.find('li:first-of-type');\n        var $lastTab = _this.$element.find('li:last-of-type');\n\n        this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function (e) {\n          if (e.which === 9) return;\n\n          var $element = $(this),\n              $elements = $element.parent('ul').children('li'),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              if (_this.options.wrapOnKeys) {\n                $prevElement = i === 0 ? $elements.last() : $elements.eq(i - 1);\n                $nextElement = i === $elements.length - 1 ? $elements.first() : $elements.eq(i + 1);\n              } else {\n                $prevElement = $elements.eq(Math.max(0, i - 1));\n                $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n              }\n              return;\n            }\n          });\n\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Tabs', {\n            open: function () {\n              function open() {\n                $element.find('[role=\"tab\"]').focus();\n                _this._handleTabChange($element);\n              }\n\n              return open;\n            }(),\n            previous: function () {\n              function previous() {\n                $prevElement.find('[role=\"tab\"]').focus();\n                _this._handleTabChange($prevElement);\n              }\n\n              return previous;\n            }(),\n            next: function () {\n              function next() {\n                $nextElement.find('[role=\"tab\"]').focus();\n                _this._handleTabChange($nextElement);\n              }\n\n              return next;\n            }(),\n            handled: function () {\n              function handled() {\n                e.stopPropagation();\n                e.preventDefault();\n              }\n\n              return handled;\n            }()\n          });\n        });\n      }\n\n      return _addKeyHandler;\n    }();\n\n    /**\n     * Opens the tab `$targetContent` defined by `$target`.\n     * @param {jQuery} $target - Tab to open.\n     * @fires Tabs#change\n     * @function\n     */\n\n\n    Tabs.prototype._handleTabChange = function () {\n      function _handleTabChange($target) {\n        var $tabLink = $target.find('[role=\"tab\"]'),\n            hash = $tabLink[0].hash,\n            $targetContent = this.$tabContent.find(hash),\n            $oldTab = this.$element.find('.' + this.options.linkClass + '.is-active').removeClass('is-active').find('[role=\"tab\"]').attr({ 'aria-selected': 'false' });\n\n        $('#' + $oldTab.attr('aria-controls')).removeClass('is-active').attr({ 'aria-hidden': 'true' });\n\n        $target.addClass('is-active');\n\n        $tabLink.attr({ 'aria-selected': 'true' });\n\n        $targetContent.addClass('is-active').attr({ 'aria-hidden': 'false' });\n\n        /**\n         * Fires when the plugin has successfully changed tabs.\n         * @event Tabs#change\n         */\n        this.$element.trigger('change.zf.tabs', [$target]);\n      }\n\n      return _handleTabChange;\n    }();\n\n    /**\n     * Public method for selecting a content pane to display.\n     * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\n     * @function\n     */\n\n\n    Tabs.prototype.selectTab = function () {\n      function selectTab(elem) {\n        var idStr;\n\n        if ((typeof elem === 'undefined' ? 'undefined' : (0, _typeof3['default'])(elem)) === 'object') {\n          idStr = elem[0].id;\n        } else {\n          idStr = elem;\n        }\n\n        if (idStr.indexOf('#') < 0) {\n          idStr = '#' + idStr;\n        }\n\n        var $target = this.$tabTitles.find('[href=\"' + idStr + '\"]').parent('.' + this.options.linkClass);\n\n        this._handleTabChange($target);\n      }\n\n      return selectTab;\n    }();\n\n    /**\n     * Sets the height of each panel to the height of the tallest panel.\n     * If enabled in options, gets called on media query change.\n     * If loading content via external source, can be called directly or with _reflow.\n     * @function\n     * @private\n     */\n\n    Tabs.prototype._setHeight = function () {\n      function _setHeight() {\n        var max = 0;\n        this.$tabContent.find('.' + this.options.panelClass).css('height', '').each(function () {\n          var panel = $(this),\n              isActive = panel.hasClass('is-active');\n\n          if (!isActive) {\n            panel.css({ 'visibility': 'hidden', 'display': 'block' });\n          }\n\n          var temp = this.getBoundingClientRect().height;\n\n          if (!isActive) {\n            panel.css({\n              'visibility': '',\n              'display': ''\n            });\n          }\n\n          max = temp > max ? temp : max;\n        }).css('height', max + 'px');\n      }\n\n      return _setHeight;\n    }();\n\n    /**\n     * Destroys an instance of an tabs.\n     * @fires Tabs#destroyed\n     */\n\n\n    Tabs.prototype.destroy = function () {\n      function destroy() {\n        this.$element.find('.' + this.options.linkClass).off('.zf.tabs').hide().end().find('.' + this.options.panelClass).hide();\n\n        if (this.options.matchHeight) {\n          if (this._setHeightMqHandler != null) {\n            $(window).off('changed.zf.mediaquery', this._setHeightMqHandler);\n          }\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n\n      return destroy;\n    }();\n\n    return Tabs;\n  }();\n\n  Tabs.defaults = {\n    /**\n     * Allows the window to scroll to content of active pane on load if set to true.\n     * @option\n     * @example false\n     */\n    autoFocus: false,\n\n    /**\n     * Allows keyboard input to 'wrap' around the tab links.\n     * @option\n     * @example true\n     */\n    wrapOnKeys: true,\n\n    /**\n     * Allows the tab content panes to match heights if set to true.\n     * @option\n     * @example false\n     */\n    matchHeight: false,\n\n    /**\n     * Class applied to `li`'s in tab link list.\n     * @option\n     * @example 'tabs-title'\n     */\n    linkClass: 'tabs-title',\n\n    /**\n     * Class applied to the content containers.\n     * @option\n     * @example 'tabs-panel'\n     */\n    panelClass: 'tabs-panel'\n  };\n\n  function checkClass($elem) {\n    return $elem.hasClass('is-active');\n  }\n\n  // Window exports\n  Foundation.plugin(Tabs, 'Tabs');\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/js/foundation.tabs.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/js/foundation.tabs.js.map","sourcesContent":["'use strict';\n\n!function($) {\n\n/**\n * Tabs module.\n * @module foundation.tabs\n * @requires foundation.util.keyboard\n * @requires foundation.util.timerAndImageLoader if tabs contain images\n */\n\nclass Tabs {\n  /**\n   * Creates a new instance of tabs.\n   * @class\n   * @fires Tabs#init\n   * @param {jQuery} element - jQuery object to make into tabs.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\n\n    this._init();\n    Foundation.registerPlugin(this, 'Tabs');\n    Foundation.Keyboard.register('Tabs', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ARROW_RIGHT': 'next',\n      'ARROW_UP': 'previous',\n      'ARROW_DOWN': 'next',\n      'ARROW_LEFT': 'previous'\n      // 'TAB': 'next',\n      // 'SHIFT_TAB': 'previous'\n    });\n  }\n\n  /**\n   * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\n   * @private\n   */\n  _init() {\n    var _this = this;\n\n    this.$tabTitles = this.$element.find(`.${this.options.linkClass}`);\n    this.$tabContent = $(`[data-tabs-content=\"${this.$element[0].id}\"]`);\n\n    this.$tabTitles.each(function(){\n      var $elem = $(this),\n          $link = $elem.find('a'),\n          isActive = $elem.hasClass('is-active'),\n          hash = $link[0].hash.slice(1),\n          linkId = $link[0].id ? $link[0].id : `${hash}-label`,\n          $tabContent = $(`#${hash}`);\n\n      $elem.attr({'role': 'presentation'});\n\n      $link.attr({\n        'role': 'tab',\n        'aria-controls': hash,\n        'aria-selected': isActive,\n        'id': linkId\n      });\n\n      $tabContent.attr({\n        'role': 'tabpanel',\n        'aria-hidden': !isActive,\n        'aria-labelledby': linkId\n      });\n\n      if(isActive && _this.options.autoFocus){\n        $link.focus();\n      }\n    });\n\n    if(this.options.matchHeight) {\n      var $images = this.$tabContent.find('img');\n\n      if ($images.length) {\n        Foundation.onImagesLoaded($images, this._setHeight.bind(this));\n      } else {\n        this._setHeight();\n      }\n    }\n\n    this._events();\n  }\n\n  /**\n   * Adds event handlers for items within the tabs.\n   * @private\n   */\n  _events() {\n    this._addKeyHandler();\n    this._addClickHandler();\n    this._setHeightMqHandler = null;\n    \n    if (this.options.matchHeight) {\n      this._setHeightMqHandler = this._setHeight.bind(this);\n      \n      $(window).on('changed.zf.mediaquery', this._setHeightMqHandler);\n    }\n  }\n\n  /**\n   * Adds click handlers for items within the tabs.\n   * @private\n   */\n  _addClickHandler() {\n    var _this = this;\n\n    this.$element\n      .off('click.zf.tabs')\n      .on('click.zf.tabs', `.${this.options.linkClass}`, function(e){\n        e.preventDefault();\n        e.stopPropagation();\n        if ($(this).hasClass('is-active')) {\n          return;\n        }\n        _this._handleTabChange($(this));\n      });\n  }\n\n  /**\n   * Adds keyboard event handlers for items within the tabs.\n   * @private\n   */\n  _addKeyHandler() {\n    var _this = this;\n    var $firstTab = _this.$element.find('li:first-of-type');\n    var $lastTab = _this.$element.find('li:last-of-type');\n\n    this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function(e){\n      if (e.which === 9) return;\n      \n\n      var $element = $(this),\n        $elements = $element.parent('ul').children('li'),\n        $prevElement,\n        $nextElement;\n\n      $elements.each(function(i) {\n        if ($(this).is($element)) {\n          if (_this.options.wrapOnKeys) {\n            $prevElement = i === 0 ? $elements.last() : $elements.eq(i-1);\n            $nextElement = i === $elements.length -1 ? $elements.first() : $elements.eq(i+1);\n          } else {\n            $prevElement = $elements.eq(Math.max(0, i-1));\n            $nextElement = $elements.eq(Math.min(i+1, $elements.length-1));\n          }\n          return;\n        }\n      });\n\n      // handle keyboard event with keyboard util\n      Foundation.Keyboard.handleKey(e, 'Tabs', {\n        open: function() {\n          $element.find('[role=\"tab\"]').focus();\n          _this._handleTabChange($element);\n        },\n        previous: function() {\n          $prevElement.find('[role=\"tab\"]').focus();\n          _this._handleTabChange($prevElement);\n        },\n        next: function() {\n          $nextElement.find('[role=\"tab\"]').focus();\n          _this._handleTabChange($nextElement);\n        },\n        handled: function() {\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      });\n    });\n  }\n\n  /**\n   * Opens the tab `$targetContent` defined by `$target`.\n   * @param {jQuery} $target - Tab to open.\n   * @fires Tabs#change\n   * @function\n   */\n  _handleTabChange($target) {\n    var $tabLink = $target.find('[role=\"tab\"]'),\n        hash = $tabLink[0].hash,\n        $targetContent = this.$tabContent.find(hash),\n        $oldTab = this.$element.\n          find(`.${this.options.linkClass}.is-active`)\n          .removeClass('is-active')\n          .find('[role=\"tab\"]')\n          .attr({ 'aria-selected': 'false' });\n\n    $(`#${$oldTab.attr('aria-controls')}`)\n      .removeClass('is-active')\n      .attr({ 'aria-hidden': 'true' });\n\n    $target.addClass('is-active');\n\n    $tabLink.attr({'aria-selected': 'true'});\n\n    $targetContent\n      .addClass('is-active')\n      .attr({'aria-hidden': 'false'});\n\n    /**\n     * Fires when the plugin has successfully changed tabs.\n     * @event Tabs#change\n     */\n    this.$element.trigger('change.zf.tabs', [$target]);\n  }\n\n  /**\n   * Public method for selecting a content pane to display.\n   * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\n   * @function\n   */\n  selectTab(elem) {\n    var idStr;\n\n    if (typeof elem === 'object') {\n      idStr = elem[0].id;\n    } else {\n      idStr = elem;\n    }\n\n    if (idStr.indexOf('#') < 0) {\n      idStr = `#${idStr}`;\n    }\n\n    var $target = this.$tabTitles.find(`[href=\"${idStr}\"]`).parent(`.${this.options.linkClass}`);\n\n    this._handleTabChange($target);\n  };\n  /**\n   * Sets the height of each panel to the height of the tallest panel.\n   * If enabled in options, gets called on media query change.\n   * If loading content via external source, can be called directly or with _reflow.\n   * @function\n   * @private\n   */\n  _setHeight() {\n    var max = 0;\n    this.$tabContent\n      .find(`.${this.options.panelClass}`)\n      .css('height', '')\n      .each(function() {\n        var panel = $(this),\n            isActive = panel.hasClass('is-active');\n\n        if (!isActive) {\n          panel.css({'visibility': 'hidden', 'display': 'block'});\n        }\n\n        var temp = this.getBoundingClientRect().height;\n\n        if (!isActive) {\n          panel.css({\n            'visibility': '',\n            'display': ''\n          });\n        }\n\n        max = temp > max ? temp : max;\n      })\n      .css('height', `${max}px`);\n  }\n\n  /**\n   * Destroys an instance of an tabs.\n   * @fires Tabs#destroyed\n   */\n  destroy() {\n    this.$element\n      .find(`.${this.options.linkClass}`)\n      .off('.zf.tabs').hide().end()\n      .find(`.${this.options.panelClass}`)\n      .hide();\n\n    if (this.options.matchHeight) {\n      if (this._setHeightMqHandler != null) {\n         $(window).off('changed.zf.mediaquery', this._setHeightMqHandler);\n      }\n    }\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nTabs.defaults = {\n  /**\n   * Allows the window to scroll to content of active pane on load if set to true.\n   * @option\n   * @example false\n   */\n  autoFocus: false,\n\n  /**\n   * Allows keyboard input to 'wrap' around the tab links.\n   * @option\n   * @example true\n   */\n  wrapOnKeys: true,\n\n  /**\n   * Allows the tab content panes to match heights if set to true.\n   * @option\n   * @example false\n   */\n  matchHeight: false,\n\n  /**\n   * Class applied to `li`'s in tab link list.\n   * @option\n   * @example 'tabs-title'\n   */\n  linkClass: 'tabs-title',\n\n  /**\n   * Class applied to the content containers.\n   * @option\n   * @example 'tabs-panel'\n   */\n  panelClass: 'tabs-panel'\n};\n\nfunction checkClass($elem){\n  return $elem.hasClass('is-active');\n}\n\n// Window exports\nFoundation.plugin(Tabs, 'Tabs');\n\n}(jQuery);\n"]},"hash":"47176ab5956edede9074285881d5d9ff313990e8"}
