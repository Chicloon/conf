{"metadata":{"usedHelpers":["classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/js/foundation.accordion.js","filenameRelative":"/packages/zurb:foundation-sites/js/foundation.accordion.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/js/foundation.accordion.js.map","sourceFileName":"/packages/zurb:foundation-sites/js/foundation.accordion.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.accordion"},"ignored":false,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n!function ($) {\n\n  /**\n   * Accordion module.\n   * @module foundation.accordion\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   */\n\n  var Accordion = function () {\n    /**\n     * Creates a new instance of an accordion.\n     * @class\n     * @fires Accordion#init\n     * @param {jQuery} element - jQuery object to make into an accordion.\n     * @param {Object} options - a plain object with settings to override the default options.\n     */\n\n    function Accordion(element, options) {\n      (0, _classCallCheck3['default'])(this, Accordion);\n\n      this.$element = element;\n      this.options = $.extend({}, Accordion.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Accordion');\n      Foundation.Keyboard.register('Accordion', {\n        'ENTER': 'toggle',\n        'SPACE': 'toggle',\n        'ARROW_DOWN': 'next',\n        'ARROW_UP': 'previous'\n      });\n    }\n\n    /**\n     * Initializes the accordion by animating the preset active pane(s).\n     * @private\n     */\n\n\n    Accordion.prototype._init = function () {\n      function _init() {\n        this.$element.attr('role', 'tablist');\n        this.$tabs = this.$element.children('li, [data-accordion-item]');\n\n        this.$tabs.each(function (idx, el) {\n          var $el = $(el),\n              $content = $el.children('[data-tab-content]'),\n              id = $content[0].id || Foundation.GetYoDigits(6, 'accordion'),\n              linkId = el.id || id + '-label';\n\n          $el.find('a:first').attr({\n            'aria-controls': id,\n            'role': 'tab',\n            'id': linkId,\n            'aria-expanded': false,\n            'aria-selected': false\n          });\n\n          $content.attr({ 'role': 'tabpanel', 'aria-labelledby': linkId, 'aria-hidden': true, 'id': id });\n        });\n        var $initActive = this.$element.find('.is-active').children('[data-tab-content]');\n        if ($initActive.length) {\n          this.down($initActive, true);\n        }\n        this._events();\n      }\n\n      return _init;\n    }();\n\n    /**\n     * Adds event handlers for items within the accordion.\n     * @private\n     */\n\n\n    Accordion.prototype._events = function () {\n      function _events() {\n        var _this = this;\n\n        this.$tabs.each(function () {\n          var $elem = $(this);\n          var $tabContent = $elem.children('[data-tab-content]');\n          if ($tabContent.length) {\n            $elem.children('a').off('click.zf.accordion keydown.zf.accordion').on('click.zf.accordion', function (e) {\n              // $(this).children('a').on('click.zf.accordion', function(e) {\n              e.preventDefault();\n              if ($elem.hasClass('is-active')) {\n                if (_this.options.allowAllClosed || $elem.siblings().hasClass('is-active')) {\n                  _this.up($tabContent);\n                }\n              } else {\n                _this.down($tabContent);\n              }\n            }).on('keydown.zf.accordion', function (e) {\n              Foundation.Keyboard.handleKey(e, 'Accordion', {\n                toggle: function () {\n                  function toggle() {\n                    _this.toggle($tabContent);\n                  }\n\n                  return toggle;\n                }(),\n                next: function () {\n                  function next() {\n                    var $a = $elem.next().find('a').focus();\n                    if (!_this.options.multiExpand) {\n                      $a.trigger('click.zf.accordion');\n                    }\n                  }\n\n                  return next;\n                }(),\n                previous: function () {\n                  function previous() {\n                    var $a = $elem.prev().find('a').focus();\n                    if (!_this.options.multiExpand) {\n                      $a.trigger('click.zf.accordion');\n                    }\n                  }\n\n                  return previous;\n                }(),\n                handled: function () {\n                  function handled() {\n                    e.preventDefault();\n                    e.stopPropagation();\n                  }\n\n                  return handled;\n                }()\n              });\n            });\n          }\n        });\n      }\n\n      return _events;\n    }();\n\n    /**\n     * Toggles the selected content pane's open/close state.\n     * @param {jQuery} $target - jQuery object of the pane to toggle.\n     * @function\n     */\n\n\n    Accordion.prototype.toggle = function () {\n      function toggle($target) {\n        if ($target.parent().hasClass('is-active')) {\n          if (this.options.allowAllClosed || $target.parent().siblings().hasClass('is-active')) {\n            this.up($target);\n          } else {\n            return;\n          }\n        } else {\n          this.down($target);\n        }\n      }\n\n      return toggle;\n    }();\n\n    /**\n     * Opens the accordion tab defined by `$target`.\n     * @param {jQuery} $target - Accordion pane to open.\n     * @param {Boolean} firstTime - flag to determine if reflow should happen.\n     * @fires Accordion#down\n     * @function\n     */\n\n\n    Accordion.prototype.down = function () {\n      function down($target, firstTime) {\n        var _this2 = this;\n\n        if (!this.options.multiExpand && !firstTime) {\n          var $currentActive = this.$element.children('.is-active').children('[data-tab-content]');\n          if ($currentActive.length) {\n            this.up($currentActive);\n          }\n        }\n\n        $target.attr('aria-hidden', false).parent('[data-tab-content]').addBack().parent().addClass('is-active');\n\n        $target.slideDown(this.options.slideSpeed, function () {\n          /**\n           * Fires when the tab is done opening.\n           * @event Accordion#down\n           */\n          _this2.$element.trigger('down.zf.accordion', [$target]);\n        });\n\n        $('#' + $target.attr('aria-labelledby')).attr({\n          'aria-expanded': true,\n          'aria-selected': true\n        });\n      }\n\n      return down;\n    }();\n\n    /**\n     * Closes the tab defined by `$target`.\n     * @param {jQuery} $target - Accordion tab to close.\n     * @fires Accordion#up\n     * @function\n     */\n\n\n    Accordion.prototype.up = function () {\n      function up($target) {\n        var $aunts = $target.parent().siblings(),\n            _this = this;\n        var canClose = this.options.multiExpand ? $aunts.hasClass('is-active') : $target.parent().hasClass('is-active');\n\n        if (!this.options.allowAllClosed && !canClose) {\n          return;\n        }\n\n        // Foundation.Move(this.options.slideSpeed, $target, function(){\n        $target.slideUp(_this.options.slideSpeed, function () {\n          /**\n           * Fires when the tab is done collapsing up.\n           * @event Accordion#up\n           */\n          _this.$element.trigger('up.zf.accordion', [$target]);\n        });\n        // });\n\n        $target.attr('aria-hidden', true).parent().removeClass('is-active');\n\n        $('#' + $target.attr('aria-labelledby')).attr({\n          'aria-expanded': false,\n          'aria-selected': false\n        });\n      }\n\n      return up;\n    }();\n\n    /**\n     * Destroys an instance of an accordion.\n     * @fires Accordion#destroyed\n     * @function\n     */\n\n\n    Accordion.prototype.destroy = function () {\n      function destroy() {\n        this.$element.find('[data-tab-content]').stop(true).slideUp(0).css('display', '');\n        this.$element.find('a').off('.zf.accordion');\n\n        Foundation.unregisterPlugin(this);\n      }\n\n      return destroy;\n    }();\n\n    return Accordion;\n  }();\n\n  Accordion.defaults = {\n    /**\n     * Amount of time to animate the opening of an accordion pane.\n     * @option\n     * @example 250\n     */\n    slideSpeed: 250,\n    /**\n     * Allow the accordion to have multiple open panes.\n     * @option\n     * @example false\n     */\n    multiExpand: false,\n    /**\n     * Allow the accordion to close all panes.\n     * @option\n     * @example false\n     */\n    allowAllClosed: false\n  };\n\n  // Window exports\n  Foundation.plugin(Accordion, 'Accordion');\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/js/foundation.accordion.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/js/foundation.accordion.js.map","sourcesContent":["'use strict';\n\n!function($) {\n\n/**\n * Accordion module.\n * @module foundation.accordion\n * @requires foundation.util.keyboard\n * @requires foundation.util.motion\n */\n\nclass Accordion {\n  /**\n   * Creates a new instance of an accordion.\n   * @class\n   * @fires Accordion#init\n   * @param {jQuery} element - jQuery object to make into an accordion.\n   * @param {Object} options - a plain object with settings to override the default options.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Accordion.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Accordion');\n    Foundation.Keyboard.register('Accordion', {\n      'ENTER': 'toggle',\n      'SPACE': 'toggle',\n      'ARROW_DOWN': 'next',\n      'ARROW_UP': 'previous'\n    });\n  }\n\n  /**\n   * Initializes the accordion by animating the preset active pane(s).\n   * @private\n   */\n  _init() {\n    this.$element.attr('role', 'tablist');\n    this.$tabs = this.$element.children('li, [data-accordion-item]');\n\n    this.$tabs.each(function(idx, el) {\n      var $el = $(el),\n          $content = $el.children('[data-tab-content]'),\n          id = $content[0].id || Foundation.GetYoDigits(6, 'accordion'),\n          linkId = el.id || `${id}-label`;\n\n      $el.find('a:first').attr({\n        'aria-controls': id,\n        'role': 'tab',\n        'id': linkId,\n        'aria-expanded': false,\n        'aria-selected': false\n      });\n\n      $content.attr({'role': 'tabpanel', 'aria-labelledby': linkId, 'aria-hidden': true, 'id': id});\n    });\n    var $initActive = this.$element.find('.is-active').children('[data-tab-content]');\n    if($initActive.length){\n      this.down($initActive, true);\n    }\n    this._events();\n  }\n\n  /**\n   * Adds event handlers for items within the accordion.\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    this.$tabs.each(function() {\n      var $elem = $(this);\n      var $tabContent = $elem.children('[data-tab-content]');\n      if ($tabContent.length) {\n        $elem.children('a').off('click.zf.accordion keydown.zf.accordion')\n               .on('click.zf.accordion', function(e) {\n        // $(this).children('a').on('click.zf.accordion', function(e) {\n          e.preventDefault();\n          if ($elem.hasClass('is-active')) {\n            if(_this.options.allowAllClosed || $elem.siblings().hasClass('is-active')){\n              _this.up($tabContent);\n            }\n          }\n          else {\n            _this.down($tabContent);\n          }\n        }).on('keydown.zf.accordion', function(e){\n          Foundation.Keyboard.handleKey(e, 'Accordion', {\n            toggle: function() {\n              _this.toggle($tabContent);\n            },\n            next: function() {\n              var $a = $elem.next().find('a').focus();\n              if (!_this.options.multiExpand) {\n                $a.trigger('click.zf.accordion')\n              }\n            },\n            previous: function() {\n              var $a = $elem.prev().find('a').focus();\n              if (!_this.options.multiExpand) {\n                $a.trigger('click.zf.accordion')\n              }\n            },\n            handled: function() {\n              e.preventDefault();\n              e.stopPropagation();\n            }\n          });\n        });\n      }\n    });\n  }\n\n  /**\n   * Toggles the selected content pane's open/close state.\n   * @param {jQuery} $target - jQuery object of the pane to toggle.\n   * @function\n   */\n  toggle($target) {\n    if($target.parent().hasClass('is-active')) {\n      if(this.options.allowAllClosed || $target.parent().siblings().hasClass('is-active')){\n        this.up($target);\n      } else { return; }\n    } else {\n      this.down($target);\n    }\n  }\n\n  /**\n   * Opens the accordion tab defined by `$target`.\n   * @param {jQuery} $target - Accordion pane to open.\n   * @param {Boolean} firstTime - flag to determine if reflow should happen.\n   * @fires Accordion#down\n   * @function\n   */\n  down($target, firstTime) {\n    if (!this.options.multiExpand && !firstTime) {\n      var $currentActive = this.$element.children('.is-active').children('[data-tab-content]');\n      if($currentActive.length){\n        this.up($currentActive);\n      }\n    }\n\n    $target\n      .attr('aria-hidden', false)\n      .parent('[data-tab-content]')\n      .addBack()\n      .parent().addClass('is-active');\n\n    $target.slideDown(this.options.slideSpeed, () => {\n      /**\n       * Fires when the tab is done opening.\n       * @event Accordion#down\n       */\n      this.$element.trigger('down.zf.accordion', [$target]);\n    });\n\n    $(`#${$target.attr('aria-labelledby')}`).attr({\n      'aria-expanded': true,\n      'aria-selected': true\n    });\n  }\n\n  /**\n   * Closes the tab defined by `$target`.\n   * @param {jQuery} $target - Accordion tab to close.\n   * @fires Accordion#up\n   * @function\n   */\n  up($target) {\n    var $aunts = $target.parent().siblings(),\n        _this = this;\n    var canClose = this.options.multiExpand ? $aunts.hasClass('is-active') : $target.parent().hasClass('is-active');\n\n    if(!this.options.allowAllClosed && !canClose) {\n      return;\n    }\n\n    // Foundation.Move(this.options.slideSpeed, $target, function(){\n      $target.slideUp(_this.options.slideSpeed, function () {\n        /**\n         * Fires when the tab is done collapsing up.\n         * @event Accordion#up\n         */\n        _this.$element.trigger('up.zf.accordion', [$target]);\n      });\n    // });\n\n    $target.attr('aria-hidden', true)\n           .parent().removeClass('is-active');\n\n    $(`#${$target.attr('aria-labelledby')}`).attr({\n     'aria-expanded': false,\n     'aria-selected': false\n   });\n  }\n\n  /**\n   * Destroys an instance of an accordion.\n   * @fires Accordion#destroyed\n   * @function\n   */\n  destroy() {\n    this.$element.find('[data-tab-content]').stop(true).slideUp(0).css('display', '');\n    this.$element.find('a').off('.zf.accordion');\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nAccordion.defaults = {\n  /**\n   * Amount of time to animate the opening of an accordion pane.\n   * @option\n   * @example 250\n   */\n  slideSpeed: 250,\n  /**\n   * Allow the accordion to have multiple open panes.\n   * @option\n   * @example false\n   */\n  multiExpand: false,\n  /**\n   * Allow the accordion to close all panes.\n   * @option\n   * @example false\n   */\n  allowAllClosed: false\n};\n\n// Window exports\nFoundation.plugin(Accordion, 'Accordion');\n\n}(jQuery);\n"]},"hash":"04ce5cc2e86ac78eed30b991fea676566671d121"}
