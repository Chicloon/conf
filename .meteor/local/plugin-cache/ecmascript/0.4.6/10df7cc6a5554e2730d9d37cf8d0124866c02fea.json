{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.core.js","filenameRelative":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.core.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.core.js.map","sourceFileName":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.core.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.core"},"ignored":false,"code":"var _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n!function ($) {\n\n  \"use strict\";\n\n  var FOUNDATION_VERSION = '6.2.2';\n\n  // Global Foundation object\n  // This is attached to the window, or used as a module for AMD/Browserify\n  var Foundation = {\n    version: FOUNDATION_VERSION,\n\n    /**\n     * Stores initialized plugins.\n     */\n    _plugins: {},\n\n    /**\n     * Stores generated unique ids for plugin instances\n     */\n    _uuids: [],\n\n    /**\n     * Returns a boolean for RTL support\n     */\n    rtl: function () {\n      function rtl() {\n        return $('html').attr('dir') === 'rtl';\n      }\n\n      return rtl;\n    }(),\n    /**\n     * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n     * @param {Object} plugin - The constructor of the plugin.\n     */\n    plugin: function () {\n      function plugin(_plugin, name) {\n        // Object key to use when adding to global Foundation object\n        // Examples: Foundation.Reveal, Foundation.OffCanvas\n        var className = name || functionName(_plugin);\n        // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n        // Examples: data-reveal, data-off-canvas\n        var attrName = hyphenate(className);\n\n        // Add to the Foundation object and the plugins list (for reflowing)\n        this._plugins[attrName] = this[className] = _plugin;\n      }\n\n      return plugin;\n    }(),\n    /**\n     * @function\n     * Populates the _uuids array with pointers to each individual plugin instance.\n     * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n     * Also fires the initialization event for each plugin, consolidating repetitive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @param {String} name - the name of the plugin, passed as a camelCased string.\n     * @fires Plugin#init\n     */\n    registerPlugin: function () {\n      function registerPlugin(plugin, name) {\n        var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n        plugin.uuid = this.GetYoDigits(6, pluginName);\n\n        if (!plugin.$element.attr('data-' + pluginName)) {\n          plugin.$element.attr('data-' + pluginName, plugin.uuid);\n        }\n        if (!plugin.$element.data('zfPlugin')) {\n          plugin.$element.data('zfPlugin', plugin);\n        }\n        /**\n         * Fires when the plugin has initialized.\n         * @event Plugin#init\n         */\n        plugin.$element.trigger('init.zf.' + pluginName);\n\n        this._uuids.push(plugin.uuid);\n\n        return;\n      }\n\n      return registerPlugin;\n    }(),\n    /**\n     * @function\n     * Removes the plugins uuid from the _uuids array.\n     * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n     * Also fires the destroyed event for the plugin, consolidating repetitive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @fires Plugin#destroyed\n     */\n    unregisterPlugin: function () {\n      function unregisterPlugin(plugin) {\n        var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n        this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n        plugin.$element.removeAttr('data-' + pluginName).removeData('zfPlugin')\n        /**\n         * Fires when the plugin has been destroyed.\n         * @event Plugin#destroyed\n         */\n        .trigger('destroyed.zf.' + pluginName);\n        for (var prop in meteorBabelHelpers.sanitizeForInObject(plugin)) {\n          plugin[prop] = null; //clean up script to prep for garbage collection.\n        }\n        return;\n      }\n\n      return unregisterPlugin;\n    }(),\n\n    /**\n     * @function\n     * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n     * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n     * @default If no argument is passed, reflow all currently active plugins.\n     */\n    reInit: function () {\n      function reInit(plugins) {\n        var isJQ = plugins instanceof $;\n        try {\n          if (isJQ) {\n            plugins.each(function () {\n              $(this).data('zfPlugin')._init();\n            });\n          } else {\n            var type = typeof plugins === 'undefined' ? 'undefined' : (0, _typeof3['default'])(plugins),\n                _this = this,\n                fns = {\n              'object': function () {\n                function object(plgs) {\n                  plgs.forEach(function (p) {\n                    p = hyphenate(p);\n                    $('[data-' + p + ']').foundation('_init');\n                  });\n                }\n\n                return object;\n              }(),\n              'string': function () {\n                function string() {\n                  plugins = hyphenate(plugins);\n                  $('[data-' + plugins + ']').foundation('_init');\n                }\n\n                return string;\n              }(),\n              'undefined': function () {\n                function undefined() {\n                  this['object'](Object.keys(_this._plugins));\n                }\n\n                return undefined;\n              }()\n            };\n            fns[type](plugins);\n          }\n        } catch (err) {\n          console.error(err);\n        } finally {\n          return plugins;\n        }\n      }\n\n      return reInit;\n    }(),\n\n    /**\n     * returns a random base-36 uid with namespacing\n     * @function\n     * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\n     * @param {String} namespace - name of plugin to be incorporated in uid, optional.\n     * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\n     * @returns {String} - unique id\n     */\n    GetYoDigits: function () {\n      function GetYoDigits(length, namespace) {\n        length = length || 6;\n        return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)).toString(36).slice(1) + (namespace ? '-' + namespace : '');\n      }\n\n      return GetYoDigits;\n    }(),\n    /**\n     * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n     * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n     * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n     */\n    reflow: function () {\n      function reflow(elem, plugins) {\n\n        // If plugins is undefined, just grab everything\n        if (typeof plugins === 'undefined') {\n          plugins = Object.keys(this._plugins);\n        }\n        // If plugins is a string, convert it to an array with one item\n        else if (typeof plugins === 'string') {\n            plugins = [plugins];\n          }\n\n        var _this = this;\n\n        // Iterate through each plugin\n        $.each(plugins, function (i, name) {\n          // Get the current plugin\n          var plugin = _this._plugins[name];\n\n          // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n          var $elem = $(elem).find('[data-' + name + ']').addBack('[data-' + name + ']');\n\n          // For each plugin found, initialize it\n          $elem.each(function () {\n            var $el = $(this),\n                opts = {};\n            // Don't double-dip on plugins\n            if ($el.data('zfPlugin')) {\n              console.warn(\"Tried to initialize \" + name + \" on an element that already has a Foundation plugin.\");\n              return;\n            }\n\n            if ($el.attr('data-options')) {\n              var thing = $el.attr('data-options').split(';').forEach(function (e, i) {\n                var opt = e.split(':').map(function (el) {\n                  return el.trim();\n                });\n                if (opt[0]) opts[opt[0]] = parseValue(opt[1]);\n              });\n            }\n            try {\n              $el.data('zfPlugin', new plugin($(this), opts));\n            } catch (er) {\n              console.error(er);\n            } finally {\n              return;\n            }\n          });\n        });\n      }\n\n      return reflow;\n    }(),\n    getFnName: functionName,\n    transitionend: function () {\n      function transitionend($elem) {\n        var transitions = {\n          'transition': 'transitionend',\n          'WebkitTransition': 'webkitTransitionEnd',\n          'MozTransition': 'transitionend',\n          'OTransition': 'otransitionend'\n        };\n        var elem = document.createElement('div'),\n            end;\n\n        for (var t in meteorBabelHelpers.sanitizeForInObject(transitions)) {\n          if (typeof elem.style[t] !== 'undefined') {\n            end = transitions[t];\n          }\n        }\n        if (end) {\n          return end;\n        } else {\n          end = setTimeout(function () {\n            $elem.triggerHandler('transitionend', [$elem]);\n          }, 1);\n          return 'transitionend';\n        }\n      }\n\n      return transitionend;\n    }()\n  };\n\n  Foundation.util = {\n    /**\n     * Function for applying a debounce effect to a function call.\n     * @function\n     * @param {Function} func - Function to be called at end of timeout.\n     * @param {Number} delay - Time in ms to delay the call of `func`.\n     * @returns function\n     */\n    throttle: function () {\n      function throttle(func, delay) {\n        var timer = null;\n\n        return function () {\n          var context = this,\n              args = arguments;\n\n          if (timer === null) {\n            timer = setTimeout(function () {\n              func.apply(context, args);\n              timer = null;\n            }, delay);\n          }\n        };\n      }\n\n      return throttle;\n    }()\n  };\n\n  // TODO: consider not making this a jQuery function\n  // TODO: need way to reflow vs. re-initialize\n  /**\n   * The Foundation jQuery method.\n   * @param {String|Array} method - An action to perform on the current jQuery object.\n   */\n  var foundation = function foundation(method) {\n    var type = typeof method === 'undefined' ? 'undefined' : (0, _typeof3['default'])(method),\n        $meta = $('meta.foundation-mq'),\n        $noJS = $('.no-js');\n\n    if (!$meta.length) {\n      $('<meta class=\"foundation-mq\">').appendTo(document.head);\n    }\n    if ($noJS.length) {\n      $noJS.removeClass('no-js');\n    }\n\n    if (type === 'undefined') {\n      //needs to initialize the Foundation object, or an individual plugin.\n      Foundation.MediaQuery._init();\n      Foundation.reflow(this);\n    } else if (type === 'string') {\n      //an individual method to invoke on a plugin or group of plugins\n      var args = Array.prototype.slice.call(arguments, 1); //collect all the arguments, if necessary\n      var plugClass = this.data('zfPlugin'); //determine the class of plugin\n\n      if (plugClass !== undefined && plugClass[method] !== undefined) {\n        //make sure both the class and method exist\n        if (this.length === 1) {\n          //if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n        } else {\n          this.each(function (i, el) {\n            //otherwise loop through the jQuery collection and invoke the method on each\n            plugClass[method].apply($(el).data('zfPlugin'), args);\n          });\n        }\n      } else {\n        //error for no class or no method\n        throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n      }\n    } else {\n      //error for invalid argument type\n      throw new TypeError('We\\'re sorry, ' + type + ' is not a valid parameter. You must use a string representing the method you wish to invoke.');\n    }\n    return this;\n  };\n\n  window.Foundation = Foundation;\n  $.fn.foundation = foundation;\n\n  // Polyfill for requestAnimationFrame\n  (function () {\n    if (!Date.now || !window.Date.now) window.Date.now = Date.now = function () {\n      return new Date().getTime();\n    };\n\n    var vendors = ['webkit', 'moz'];\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    }\n    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n      var lastTime = 0;\n      window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n          callback(lastTime = nextTime);\n        }, nextTime - now);\n      };\n      window.cancelAnimationFrame = clearTimeout;\n    }\n    /**\n     * Polyfill for performance.now, required by rAF\n     */\n    if (!window.performance || !window.performance.now) {\n      window.performance = {\n        start: Date.now(),\n        now: function () {\n          function now() {\n            return Date.now() - this.start;\n          }\n\n          return now;\n        }()\n      };\n    }\n  })();\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== 'function') {\n        // closest thing possible to the ECMAScript 5\n        // internal IsCallable function\n        throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function fNOP() {},\n          fBound = function fBound() {\n        return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      if (this.prototype) {\n        // native functions don't have a prototype\n        fNOP.prototype = this.prototype;\n      }\n      fBound.prototype = new fNOP();\n\n      return fBound;\n    };\n  }\n  // Polyfill to get the name of a function in IE9\n  function functionName(fn) {\n    if (Function.prototype.name === undefined) {\n      var funcNameRegex = /function\\s([^(]{1,})\\(/;\n      var results = funcNameRegex.exec(fn.toString());\n      return results && results.length > 1 ? results[1].trim() : \"\";\n    } else if (fn.prototype === undefined) {\n      return fn.constructor.name;\n    } else {\n      return fn.prototype.constructor.name;\n    }\n  }\n  function parseValue(str) {\n    if (/true/.test(str)) return true;else if (/false/.test(str)) return false;else if (!isNaN(str * 1)) return parseFloat(str);\n    return str;\n  }\n  // Convert PascalCase to kebab-case\n  // Thank you: http://stackoverflow.com/a/8955580\n  function hyphenate(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.core.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.core.js.map","sourcesContent":["!function ($) {\n\n  \"use strict\";\n\n  var FOUNDATION_VERSION = '6.2.2';\n\n  // Global Foundation object\n  // This is attached to the window, or used as a module for AMD/Browserify\n  var Foundation = {\n    version: FOUNDATION_VERSION,\n\n    /**\n     * Stores initialized plugins.\n     */\n    _plugins: {},\n\n    /**\n     * Stores generated unique ids for plugin instances\n     */\n    _uuids: [],\n\n    /**\n     * Returns a boolean for RTL support\n     */\n    rtl: function () {\n      return $('html').attr('dir') === 'rtl';\n    },\n    /**\n     * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n     * @param {Object} plugin - The constructor of the plugin.\n     */\n    plugin: function (plugin, name) {\n      // Object key to use when adding to global Foundation object\n      // Examples: Foundation.Reveal, Foundation.OffCanvas\n      var className = name || functionName(plugin);\n      // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n      // Examples: data-reveal, data-off-canvas\n      var attrName = hyphenate(className);\n\n      // Add to the Foundation object and the plugins list (for reflowing)\n      this._plugins[attrName] = this[className] = plugin;\n    },\n    /**\n     * @function\n     * Populates the _uuids array with pointers to each individual plugin instance.\n     * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n     * Also fires the initialization event for each plugin, consolidating repetitive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @param {String} name - the name of the plugin, passed as a camelCased string.\n     * @fires Plugin#init\n     */\n    registerPlugin: function (plugin, name) {\n      var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n      plugin.uuid = this.GetYoDigits(6, pluginName);\n\n      if (!plugin.$element.attr('data-' + pluginName)) {\n        plugin.$element.attr('data-' + pluginName, plugin.uuid);\n      }\n      if (!plugin.$element.data('zfPlugin')) {\n        plugin.$element.data('zfPlugin', plugin);\n      }\n      /**\n       * Fires when the plugin has initialized.\n       * @event Plugin#init\n       */\n      plugin.$element.trigger('init.zf.' + pluginName);\n\n      this._uuids.push(plugin.uuid);\n\n      return;\n    },\n    /**\n     * @function\n     * Removes the plugins uuid from the _uuids array.\n     * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n     * Also fires the destroyed event for the plugin, consolidating repetitive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @fires Plugin#destroyed\n     */\n    unregisterPlugin: function (plugin) {\n      var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n      this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n      plugin.$element.removeAttr('data-' + pluginName).removeData('zfPlugin')\n      /**\n       * Fires when the plugin has been destroyed.\n       * @event Plugin#destroyed\n       */\n      .trigger('destroyed.zf.' + pluginName);\n      for (var prop in plugin) {\n        plugin[prop] = null; //clean up script to prep for garbage collection.\n      }\n      return;\n    },\n\n    /**\n     * @function\n     * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n     * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n     * @default If no argument is passed, reflow all currently active plugins.\n     */\n    reInit: function (plugins) {\n      var isJQ = plugins instanceof $;\n      try {\n        if (isJQ) {\n          plugins.each(function () {\n            $(this).data('zfPlugin')._init();\n          });\n        } else {\n          var type = typeof plugins,\n              _this = this,\n              fns = {\n            'object': function (plgs) {\n              plgs.forEach(function (p) {\n                p = hyphenate(p);\n                $('[data-' + p + ']').foundation('_init');\n              });\n            },\n            'string': function () {\n              plugins = hyphenate(plugins);\n              $('[data-' + plugins + ']').foundation('_init');\n            },\n            'undefined': function () {\n              this['object'](Object.keys(_this._plugins));\n            }\n          };\n          fns[type](plugins);\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        return plugins;\n      }\n    },\n\n    /**\n     * returns a random base-36 uid with namespacing\n     * @function\n     * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\n     * @param {String} namespace - name of plugin to be incorporated in uid, optional.\n     * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\n     * @returns {String} - unique id\n     */\n    GetYoDigits: function (length, namespace) {\n      length = length || 6;\n      return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)).toString(36).slice(1) + (namespace ? '-' + namespace : '');\n    },\n    /**\n     * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n     * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n     * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n     */\n    reflow: function (elem, plugins) {\n\n      // If plugins is undefined, just grab everything\n      if (typeof plugins === 'undefined') {\n        plugins = Object.keys(this._plugins);\n      }\n      // If plugins is a string, convert it to an array with one item\n      else if (typeof plugins === 'string') {\n          plugins = [plugins];\n        }\n\n      var _this = this;\n\n      // Iterate through each plugin\n      $.each(plugins, function (i, name) {\n        // Get the current plugin\n        var plugin = _this._plugins[name];\n\n        // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n        var $elem = $(elem).find('[data-' + name + ']').addBack('[data-' + name + ']');\n\n        // For each plugin found, initialize it\n        $elem.each(function () {\n          var $el = $(this),\n              opts = {};\n          // Don't double-dip on plugins\n          if ($el.data('zfPlugin')) {\n            console.warn(\"Tried to initialize \" + name + \" on an element that already has a Foundation plugin.\");\n            return;\n          }\n\n          if ($el.attr('data-options')) {\n            var thing = $el.attr('data-options').split(';').forEach(function (e, i) {\n              var opt = e.split(':').map(function (el) {\n                return el.trim();\n              });\n              if (opt[0]) opts[opt[0]] = parseValue(opt[1]);\n            });\n          }\n          try {\n            $el.data('zfPlugin', new plugin($(this), opts));\n          } catch (er) {\n            console.error(er);\n          } finally {\n            return;\n          }\n        });\n      });\n    },\n    getFnName: functionName,\n    transitionend: function ($elem) {\n      var transitions = {\n        'transition': 'transitionend',\n        'WebkitTransition': 'webkitTransitionEnd',\n        'MozTransition': 'transitionend',\n        'OTransition': 'otransitionend'\n      };\n      var elem = document.createElement('div'),\n          end;\n\n      for (var t in transitions) {\n        if (typeof elem.style[t] !== 'undefined') {\n          end = transitions[t];\n        }\n      }\n      if (end) {\n        return end;\n      } else {\n        end = setTimeout(function () {\n          $elem.triggerHandler('transitionend', [$elem]);\n        }, 1);\n        return 'transitionend';\n      }\n    }\n  };\n\n  Foundation.util = {\n    /**\n     * Function for applying a debounce effect to a function call.\n     * @function\n     * @param {Function} func - Function to be called at end of timeout.\n     * @param {Number} delay - Time in ms to delay the call of `func`.\n     * @returns function\n     */\n    throttle: function (func, delay) {\n      var timer = null;\n\n      return function () {\n        var context = this,\n            args = arguments;\n\n        if (timer === null) {\n          timer = setTimeout(function () {\n            func.apply(context, args);\n            timer = null;\n          }, delay);\n        }\n      };\n    }\n  };\n\n  // TODO: consider not making this a jQuery function\n  // TODO: need way to reflow vs. re-initialize\n  /**\n   * The Foundation jQuery method.\n   * @param {String|Array} method - An action to perform on the current jQuery object.\n   */\n  var foundation = function (method) {\n    var type = typeof method,\n        $meta = $('meta.foundation-mq'),\n        $noJS = $('.no-js');\n\n    if (!$meta.length) {\n      $('<meta class=\"foundation-mq\">').appendTo(document.head);\n    }\n    if ($noJS.length) {\n      $noJS.removeClass('no-js');\n    }\n\n    if (type === 'undefined') {\n      //needs to initialize the Foundation object, or an individual plugin.\n      Foundation.MediaQuery._init();\n      Foundation.reflow(this);\n    } else if (type === 'string') {\n      //an individual method to invoke on a plugin or group of plugins\n      var args = Array.prototype.slice.call(arguments, 1); //collect all the arguments, if necessary\n      var plugClass = this.data('zfPlugin'); //determine the class of plugin\n\n      if (plugClass !== undefined && plugClass[method] !== undefined) {\n        //make sure both the class and method exist\n        if (this.length === 1) {\n          //if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n        } else {\n          this.each(function (i, el) {\n            //otherwise loop through the jQuery collection and invoke the method on each\n            plugClass[method].apply($(el).data('zfPlugin'), args);\n          });\n        }\n      } else {\n        //error for no class or no method\n        throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n      }\n    } else {\n      //error for invalid argument type\n      throw new TypeError('We\\'re sorry, ' + type + ' is not a valid parameter. You must use a string representing the method you wish to invoke.');\n    }\n    return this;\n  };\n\n  window.Foundation = Foundation;\n  $.fn.foundation = foundation;\n\n  // Polyfill for requestAnimationFrame\n  (function () {\n    if (!Date.now || !window.Date.now) window.Date.now = Date.now = function () {\n      return new Date().getTime();\n    };\n\n    var vendors = ['webkit', 'moz'];\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    }\n    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n      var lastTime = 0;\n      window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n          callback(lastTime = nextTime);\n        }, nextTime - now);\n      };\n      window.cancelAnimationFrame = clearTimeout;\n    }\n    /**\n     * Polyfill for performance.now, required by rAF\n     */\n    if (!window.performance || !window.performance.now) {\n      window.performance = {\n        start: Date.now(),\n        now: function () {\n          return Date.now() - this.start;\n        }\n      };\n    }\n  })();\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== 'function') {\n        // closest thing possible to the ECMAScript 5\n        // internal IsCallable function\n        throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function () {},\n          fBound = function () {\n        return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      if (this.prototype) {\n        // native functions don't have a prototype\n        fNOP.prototype = this.prototype;\n      }\n      fBound.prototype = new fNOP();\n\n      return fBound;\n    };\n  }\n  // Polyfill to get the name of a function in IE9\n  function functionName(fn) {\n    if (Function.prototype.name === undefined) {\n      var funcNameRegex = /function\\s([^(]{1,})\\(/;\n      var results = funcNameRegex.exec(fn.toString());\n      return results && results.length > 1 ? results[1].trim() : \"\";\n    } else if (fn.prototype === undefined) {\n      return fn.constructor.name;\n    } else {\n      return fn.prototype.constructor.name;\n    }\n  }\n  function parseValue(str) {\n    if (/true/.test(str)) return true;else if (/false/.test(str)) return false;else if (!isNaN(str * 1)) return parseFloat(str);\n    return str;\n  }\n  // Convert PascalCase to kebab-case\n  // Thank you: http://stackoverflow.com/a/8955580\n  function hyphenate(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n}(jQuery);"]},"hash":"10df7cc6a5554e2730d9d37cf8d0124866c02fea"}
