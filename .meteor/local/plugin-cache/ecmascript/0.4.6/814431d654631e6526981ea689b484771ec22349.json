{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/gulp/deploy.js","filenameRelative":"/packages/zurb:foundation-sites/gulp/deploy.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/gulp/deploy.js.map","sourceFileName":"/packages/zurb:foundation-sites/gulp/deploy.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"deploy"},"ignored":false,"code":"var gulp = require('gulp');\nvar filter = require('gulp-filter');\nvar cssnano = require('gulp-cssnano');\nvar rename = require('gulp-rename');\nvar uglify = require('gulp-uglify');\nvar confirm = require('gulp-prompt').confirm;\nvar prompt = require('gulp-prompt').prompt;\nvar rsync = require('gulp-rsync');\nvar replace = require('gulp-replace');\nvar octophant = require('octophant');\nvar sequence = require('run-sequence');\nvar inquirer = require('inquirer');\nvar exec = require('child_process').execSync;\nvar plumber = require('gulp-plumber');\n\nvar VERSIONED_FILES = ['bower.json', 'composer.json', 'docs/pages/installation.md', 'js/foundation.core.js', 'meteor-README.md', 'package.js', 'package.json', 'scss/foundation.scss'];\n\nvar DIST_FILES = ['./_build/assets/css/foundation.css', './_build/assets/css/foundation-flex.css', './_build/assets/css/foundation-rtl.css', '_build/assets/js/foundation.js'];\n\nvar CURRENT_VERSION = require('../package.json').version;\nvar NEXT_VERSION;\n\ngulp.task('deploy', function (cb) {\n  sequence('deploy:prompt', 'deploy:version', 'deploy:dist', 'deploy:plugins', 'deploy:settings', 'deploy:commit', 'deploy:templates', cb);\n});\n\ngulp.task('deploy:prep', function (cb) {\n  sequence('deploy:prompt', 'deploy:version', 'deploy:dist', 'deploy:plugins', 'deploy:settings', cb);\n});\n\ngulp.task('deploy:prompt', function (cb) {\n  inquirer.prompt([{\n    type: 'input',\n    name: 'version',\n    message: 'What version are we moving to? (Current version is ' + CURRENT_VERSION + ')'\n  }], function (res) {\n    NEXT_VERSION = res.version;\n    cb();\n  });\n});\n\n// Bumps the version number in any file that has one\ngulp.task('deploy:version', function () {\n  return gulp.src(VERSIONED_FILES, { base: process.cwd() }).pipe(replace(CURRENT_VERSION, NEXT_VERSION)).pipe(gulp.dest('.'));\n});\n\n// Generates compiled CSS and JS files and puts them in the dist/ folder\ngulp.task('deploy:dist', ['sass:foundation', 'javascript:foundation'], function () {\n  var cssFilter = filter(['*.css'], { restore: true });\n  var jsFilter = filter(['*.js'], { restore: true });\n\n  return gulp.src(DIST_FILES).pipe(plumber()).pipe(cssFilter).pipe(gulp.dest('./dist')).pipe(cssnano()).pipe(rename({ suffix: '.min' })).pipe(gulp.dest('./dist')).pipe(cssFilter.restore).pipe(jsFilter).pipe(gulp.dest('./dist')).pipe(uglify()).pipe(rename({ suffix: '.min' })).pipe(gulp.dest('./dist'));\n});\n\n// Copies standalone JavaScript plugins to dist/ folder\ngulp.task('deploy:plugins', function () {\n  gulp.src('_build/assets/js/plugins/*.js').pipe(gulp.dest('dist/plugins'));\n});\n\n// Generates a settings file\ngulp.task('deploy:settings', function (cb) {\n  var options = {\n    title: 'Foundation for Sites Settings',\n    output: './scss/settings/_settings.scss',\n    groups: {\n      'grid': 'The Grid',\n      'off-canvas': 'Off-canvas',\n      'typography-base': 'Base Typography'\n    },\n    sort: ['global', 'breakpoints', 'grid', 'typography-base', 'typography-helpers'],\n    imports: ['util/util'],\n    _foundationShim: true\n  };\n\n  octophant('./scss', options, cb);\n});\n\n// Writes a commit with the changes to the version numbers\ngulp.task('deploy:commit', function (cb) {\n  exec('git commit -am \"Bump to version \"' + NEXT_VERSION);\n  exec('git tag v' + NEXT_VERSION);\n  exec('git push origin develop --follow-tags');\n  cb();\n});\n\n// Uploads the documentation to the live server\ngulp.task('deploy:docs', ['build'], function () {\n  return gulp.src('./_build/**').pipe(confirm('Make sure everything looks right before you deploy.')).pipe(rsync({\n    root: './_build',\n    hostname: 'deployer@72.32.134.77',\n    destination: '/home/deployer/sites/foundation-sites-6-docs'\n  }));\n});\n\n// This part of the deploy process hasn't been tested! It should be done manually for now\ngulp.task('deploy:templates', function (done) {\n  // exec('git clone https://github.com/zurb/foundation-sites-template');\n  // exec('cp scss/settings/_settings.scss foundation-sites-template/scss/_settings.scss');\n  // exec('cd foundation-sites-template');\n  // exec('git commit -am \"Update settings file to match Foundation \"' + NEXT_VERSION);\n  // exec('git push origin master');\n  // exec('cd ..');\n  // exec('rm -rf foundation-sites-template');\n  //\n  // exec('git clone https://github.com/zurb/foundation-zurb-template');\n  // exec('cp scss/settings/_settings.scss foundation-zurb-template/src/assets/scss/_settings.scss');\n  // exec('cd foundation-zurb-template');\n  // exec('git commit -am \"Update settings file to match Foundation \"' + NEXT_VERSION);\n  // exec('git push origin master');\n  // exec('cd ..');\n  // exec('rm -rf foundation-zurb-template');\n  done();\n});\n\n// The Customizer runs this function to generate files it needs\ngulp.task('deploy:custom', ['sass:foundation', 'javascript:foundation'], function () {\n  gulp.src('./_build/assets/css/foundation.css').pipe(cssnano()).pipe(rename('foundation.min.css')).pipe(gulp.dest('./_build/assets/css'));\n\n  return gulp.src('_build/assets/js/foundation.js').pipe(uglify()).pipe(rename('foundation.min.js')).pipe(gulp.dest('./_build/assets/js'));\n});","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/gulp/deploy.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/gulp/deploy.js.map","sourcesContent":["var gulp = require('gulp');\nvar filter = require('gulp-filter');\nvar cssnano = require('gulp-cssnano');\nvar rename = require('gulp-rename');\nvar uglify = require('gulp-uglify');\nvar confirm = require('gulp-prompt').confirm;\nvar prompt = require('gulp-prompt').prompt;\nvar rsync = require('gulp-rsync');\nvar replace = require('gulp-replace');\nvar octophant = require('octophant');\nvar sequence = require('run-sequence');\nvar inquirer = require('inquirer');\nvar exec = require('child_process').execSync;\nvar plumber = require('gulp-plumber');\n\nvar VERSIONED_FILES = [\n  'bower.json',\n  'composer.json',\n  'docs/pages/installation.md',\n  'js/foundation.core.js',\n  'meteor-README.md',\n  'package.js',\n  'package.json',\n  'scss/foundation.scss'\n];\n\nvar DIST_FILES = [\n  './_build/assets/css/foundation.css',\n  './_build/assets/css/foundation-flex.css',\n  './_build/assets/css/foundation-rtl.css',\n  '_build/assets/js/foundation.js'\n];\n\nvar CURRENT_VERSION = require('../package.json').version;\nvar NEXT_VERSION;\n\ngulp.task('deploy', function(cb) {\n  sequence('deploy:prompt', 'deploy:version', 'deploy:dist', 'deploy:plugins', 'deploy:settings', 'deploy:commit', 'deploy:templates', cb);\n});\n\ngulp.task('deploy:prep', function(cb) {\n  sequence('deploy:prompt', 'deploy:version', 'deploy:dist', 'deploy:plugins', 'deploy:settings', cb);\n});\n\n\ngulp.task('deploy:prompt', function(cb) {\n  inquirer.prompt([{\n    type: 'input',\n    name: 'version',\n    message: 'What version are we moving to? (Current version is ' + CURRENT_VERSION + ')'\n  }], function(res) {\n    NEXT_VERSION = res.version;\n    cb();\n  });\n});\n\n// Bumps the version number in any file that has one\ngulp.task('deploy:version', function() {\n  return gulp.src(VERSIONED_FILES, { base: process.cwd() })\n    .pipe(replace(CURRENT_VERSION, NEXT_VERSION))\n    .pipe(gulp.dest('.'));\n});\n\n// Generates compiled CSS and JS files and puts them in the dist/ folder\ngulp.task('deploy:dist', ['sass:foundation', 'javascript:foundation'], function() {\n  var cssFilter = filter(['*.css'], { restore: true });\n  var jsFilter  = filter(['*.js'], { restore: true });\n\n  return gulp.src(DIST_FILES)\n    .pipe(plumber())\n    .pipe(cssFilter)\n      .pipe(gulp.dest('./dist'))\n      .pipe(cssnano())\n      .pipe(rename({ suffix: '.min' }))\n      .pipe(gulp.dest('./dist'))\n    .pipe(cssFilter.restore)\n    .pipe(jsFilter)\n      .pipe(gulp.dest('./dist'))\n      .pipe(uglify())\n      .pipe(rename({ suffix: '.min' }))\n      .pipe(gulp.dest('./dist'));\n});\n\n// Copies standalone JavaScript plugins to dist/ folder\ngulp.task('deploy:plugins', function() {\n  gulp.src('_build/assets/js/plugins/*.js')\n    .pipe(gulp.dest('dist/plugins'));\n});\n\n// Generates a settings file\ngulp.task('deploy:settings', function(cb) {\n  var options = {\n    title: 'Foundation for Sites Settings',\n    output: './scss/settings/_settings.scss',\n    groups: {\n      'grid': 'The Grid',\n      'off-canvas': 'Off-canvas',\n      'typography-base': 'Base Typography'\n    },\n    sort: [\n      'global',\n      'breakpoints',\n      'grid',\n      'typography-base',\n      'typography-helpers'\n    ],\n    imports: ['util/util'],\n    _foundationShim: true\n  }\n\n  octophant('./scss', options, cb);\n});\n\n// Writes a commit with the changes to the version numbers\ngulp.task('deploy:commit', function(cb) {\n  exec('git commit -am \"Bump to version \"' + NEXT_VERSION);\n  exec('git tag v' + NEXT_VERSION);\n  exec('git push origin develop --follow-tags');\n  cb();\n});\n\n// Uploads the documentation to the live server\ngulp.task('deploy:docs', ['build'], function() {\n  return gulp.src('./_build/**')\n    .pipe(confirm('Make sure everything looks right before you deploy.'))\n    .pipe(rsync({\n      root: './_build',\n      hostname: 'deployer@72.32.134.77',\n      destination: '/home/deployer/sites/foundation-sites-6-docs'\n    }));\n});\n\n// This part of the deploy process hasn't been tested! It should be done manually for now\ngulp.task('deploy:templates', function(done) {\n  // exec('git clone https://github.com/zurb/foundation-sites-template');\n  // exec('cp scss/settings/_settings.scss foundation-sites-template/scss/_settings.scss');\n  // exec('cd foundation-sites-template');\n  // exec('git commit -am \"Update settings file to match Foundation \"' + NEXT_VERSION);\n  // exec('git push origin master');\n  // exec('cd ..');\n  // exec('rm -rf foundation-sites-template');\n  //\n  // exec('git clone https://github.com/zurb/foundation-zurb-template');\n  // exec('cp scss/settings/_settings.scss foundation-zurb-template/src/assets/scss/_settings.scss');\n  // exec('cd foundation-zurb-template');\n  // exec('git commit -am \"Update settings file to match Foundation \"' + NEXT_VERSION);\n  // exec('git push origin master');\n  // exec('cd ..');\n  // exec('rm -rf foundation-zurb-template');\n  done();\n});\n\n// The Customizer runs this function to generate files it needs\ngulp.task('deploy:custom', ['sass:foundation', 'javascript:foundation'], function() {\n  gulp.src('./_build/assets/css/foundation.css')\n      .pipe(cssnano())\n      .pipe(rename('foundation.min.css'))\n      .pipe(gulp.dest('./_build/assets/css'));\n\n  return gulp.src('_build/assets/js/foundation.js')\n      .pipe(uglify())\n      .pipe(rename('foundation.min.js'))\n      .pipe(gulp.dest('./_build/assets/js'));\n});\n"]},"hash":"814431d654631e6526981ea689b484771ec22349"}
