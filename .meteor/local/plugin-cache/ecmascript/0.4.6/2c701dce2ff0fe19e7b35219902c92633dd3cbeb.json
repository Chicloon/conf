{"metadata":{"usedHelpers":["classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/js/foundation.magellan.js","filenameRelative":"/packages/zurb:foundation-sites/js/foundation.magellan.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/js/foundation.magellan.js.map","sourceFileName":"/packages/zurb:foundation-sites/js/foundation.magellan.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.magellan"},"ignored":false,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n!function ($) {\n\n  /**\n   * Magellan module.\n   * @module foundation.magellan\n   */\n\n  var Magellan = function () {\n    /**\n     * Creates a new instance of Magellan.\n     * @class\n     * @fires Magellan#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Magellan(element, options) {\n      (0, _classCallCheck3['default'])(this, Magellan);\n\n      this.$element = element;\n      this.options = $.extend({}, Magellan.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Magellan');\n    }\n\n    /**\n     * Initializes the Magellan plugin and calls functions to get equalizer functioning on load.\n     * @private\n     */\n\n\n    Magellan.prototype._init = function () {\n      function _init() {\n        var id = this.$element[0].id || Foundation.GetYoDigits(6, 'magellan');\n        var _this = this;\n        this.$targets = $('[data-magellan-target]');\n        this.$links = this.$element.find('a');\n        this.$element.attr({\n          'data-resize': id,\n          'data-scroll': id,\n          'id': id\n        });\n        this.$active = $();\n        this.scrollPos = parseInt(window.pageYOffset, 10);\n\n        this._events();\n      }\n\n      return _init;\n    }();\n\n    /**\n     * Calculates an array of pixel values that are the demarcation lines between locations on the page.\n     * Can be invoked if new elements are added or the size of a location changes.\n     * @function\n     */\n\n\n    Magellan.prototype.calcPoints = function () {\n      function calcPoints() {\n        var _this = this,\n            body = document.body,\n            html = document.documentElement;\n\n        this.points = [];\n        this.winHeight = Math.round(Math.max(window.innerHeight, html.clientHeight));\n        this.docHeight = Math.round(Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight));\n\n        this.$targets.each(function () {\n          var $tar = $(this),\n              pt = Math.round($tar.offset().top - _this.options.threshold);\n          $tar.targetPoint = pt;\n          _this.points.push(pt);\n        });\n      }\n\n      return calcPoints;\n    }();\n\n    /**\n     * Initializes events for Magellan.\n     * @private\n     */\n\n\n    Magellan.prototype._events = function () {\n      function _events() {\n        var _this = this,\n            $body = $('html, body'),\n            opts = {\n          duration: _this.options.animationDuration,\n          easing: _this.options.animationEasing\n        };\n        $(window).one('load', function () {\n          if (_this.options.deepLinking) {\n            if (location.hash) {\n              _this.scrollToLoc(location.hash);\n            }\n          }\n          _this.calcPoints();\n          _this._updateActive();\n        });\n\n        this.$element.on({\n          'resizeme.zf.trigger': this.reflow.bind(this),\n          'scrollme.zf.trigger': this._updateActive.bind(this)\n        }).on('click.zf.magellan', 'a[href^=\"#\"]', function (e) {\n          e.preventDefault();\n          var arrival = this.getAttribute('href');\n          _this.scrollToLoc(arrival);\n        });\n      }\n\n      return _events;\n    }();\n\n    /**\n     * Function to scroll to a given location on the page.\n     * @param {String} loc - a properly formatted jQuery id selector. Example: '#foo'\n     * @function\n     */\n\n\n    Magellan.prototype.scrollToLoc = function () {\n      function scrollToLoc(loc) {\n        var scrollPos = Math.round($(loc).offset().top - this.options.threshold / 2 - this.options.barOffset);\n\n        $('html, body').stop(true).animate({ scrollTop: scrollPos }, this.options.animationDuration, this.options.animationEasing);\n      }\n\n      return scrollToLoc;\n    }();\n\n    /**\n     * Calls necessary functions to update Magellan upon DOM change\n     * @function\n     */\n\n\n    Magellan.prototype.reflow = function () {\n      function reflow() {\n        this.calcPoints();\n        this._updateActive();\n      }\n\n      return reflow;\n    }();\n\n    /**\n     * Updates the visibility of an active location link, and updates the url hash for the page, if deepLinking enabled.\n     * @private\n     * @function\n     * @fires Magellan#update\n     */\n\n\n    Magellan.prototype._updateActive = function () {\n      function _updateActive() /*evt, elem, scrollPos*/{\n        var winPos = /*scrollPos ||*/parseInt(window.pageYOffset, 10),\n            curIdx;\n\n        if (winPos + this.winHeight === this.docHeight) {\n          curIdx = this.points.length - 1;\n        } else if (winPos < this.points[0]) {\n          curIdx = 0;\n        } else {\n          var isDown = this.scrollPos < winPos,\n              _this = this,\n              curVisible = this.points.filter(function (p, i) {\n            return isDown ? p - _this.options.barOffset <= winPos : p - _this.options.barOffset - _this.options.threshold <= winPos;\n          });\n          curIdx = curVisible.length ? curVisible.length - 1 : 0;\n        }\n\n        this.$active.removeClass(this.options.activeClass);\n        this.$active = this.$links.eq(curIdx).addClass(this.options.activeClass);\n\n        if (this.options.deepLinking) {\n          var hash = this.$active[0].getAttribute('href');\n          if (window.history.pushState) {\n            window.history.pushState(null, null, hash);\n          } else {\n            window.location.hash = hash;\n          }\n        }\n\n        this.scrollPos = winPos;\n        /**\n         * Fires when magellan is finished updating to the new active element.\n         * @event Magellan#update\n         */\n        this.$element.trigger('update.zf.magellan', [this.$active]);\n      }\n\n      return _updateActive;\n    }();\n\n    /**\n     * Destroys an instance of Magellan and resets the url of the window.\n     * @function\n     */\n\n\n    Magellan.prototype.destroy = function () {\n      function destroy() {\n        this.$element.off('.zf.trigger .zf.magellan').find('.' + this.options.activeClass).removeClass(this.options.activeClass);\n\n        if (this.options.deepLinking) {\n          var hash = this.$active[0].getAttribute('href');\n          window.location.hash.replace(hash, '');\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n\n      return destroy;\n    }();\n\n    return Magellan;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Magellan.defaults = {\n    /**\n     * Amount of time, in ms, the animated scrolling should take between locations.\n     * @option\n     * @example 500\n     */\n    animationDuration: 500,\n    /**\n     * Animation style to use when scrolling between locations.\n     * @option\n     * @example 'ease-in-out'\n     */\n    animationEasing: 'linear',\n    /**\n     * Number of pixels to use as a marker for location changes.\n     * @option\n     * @example 50\n     */\n    threshold: 50,\n    /**\n     * Class applied to the active locations link on the magellan container.\n     * @option\n     * @example 'active'\n     */\n    activeClass: 'active',\n    /**\n     * Allows the script to manipulate the url of the current page, and if supported, alter the history.\n     * @option\n     * @example true\n     */\n    deepLinking: false,\n    /**\n     * Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.\n     * @option\n     * @example 25\n     */\n    barOffset: 0\n  };\n\n  // Window exports\n  Foundation.plugin(Magellan, 'Magellan');\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/js/foundation.magellan.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/js/foundation.magellan.js.map","sourcesContent":["'use strict';\n\n!function($) {\n\n/**\n * Magellan module.\n * @module foundation.magellan\n */\n\nclass Magellan {\n  /**\n   * Creates a new instance of Magellan.\n   * @class\n   * @fires Magellan#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options  = $.extend({}, Magellan.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Magellan');\n  }\n\n  /**\n   * Initializes the Magellan plugin and calls functions to get equalizer functioning on load.\n   * @private\n   */\n  _init() {\n    var id = this.$element[0].id || Foundation.GetYoDigits(6, 'magellan');\n    var _this = this;\n    this.$targets = $('[data-magellan-target]');\n    this.$links = this.$element.find('a');\n    this.$element.attr({\n      'data-resize': id,\n      'data-scroll': id,\n      'id': id\n    });\n    this.$active = $();\n    this.scrollPos = parseInt(window.pageYOffset, 10);\n\n    this._events();\n  }\n\n  /**\n   * Calculates an array of pixel values that are the demarcation lines between locations on the page.\n   * Can be invoked if new elements are added or the size of a location changes.\n   * @function\n   */\n  calcPoints() {\n    var _this = this,\n        body = document.body,\n        html = document.documentElement;\n\n    this.points = [];\n    this.winHeight = Math.round(Math.max(window.innerHeight, html.clientHeight));\n    this.docHeight = Math.round(Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight));\n\n    this.$targets.each(function(){\n      var $tar = $(this),\n          pt = Math.round($tar.offset().top - _this.options.threshold);\n      $tar.targetPoint = pt;\n      _this.points.push(pt);\n    });\n  }\n\n  /**\n   * Initializes events for Magellan.\n   * @private\n   */\n  _events() {\n    var _this = this,\n        $body = $('html, body'),\n        opts = {\n          duration: _this.options.animationDuration,\n          easing:   _this.options.animationEasing\n        };\n    $(window).one('load', function(){\n      if(_this.options.deepLinking){\n        if(location.hash){\n          _this.scrollToLoc(location.hash);\n        }\n      }\n      _this.calcPoints();\n      _this._updateActive();\n    });\n\n    this.$element.on({\n      'resizeme.zf.trigger': this.reflow.bind(this),\n      'scrollme.zf.trigger': this._updateActive.bind(this)\n    }).on('click.zf.magellan', 'a[href^=\"#\"]', function(e) {\n        e.preventDefault();\n        var arrival   = this.getAttribute('href');\n        _this.scrollToLoc(arrival);\n    });\n  }\n\n  /**\n   * Function to scroll to a given location on the page.\n   * @param {String} loc - a properly formatted jQuery id selector. Example: '#foo'\n   * @function\n   */\n  scrollToLoc(loc) {\n    var scrollPos = Math.round($(loc).offset().top - this.options.threshold / 2 - this.options.barOffset);\n\n    $('html, body').stop(true).animate({ scrollTop: scrollPos }, this.options.animationDuration, this.options.animationEasing);\n  }\n\n  /**\n   * Calls necessary functions to update Magellan upon DOM change\n   * @function\n   */\n  reflow() {\n    this.calcPoints();\n    this._updateActive();\n  }\n\n  /**\n   * Updates the visibility of an active location link, and updates the url hash for the page, if deepLinking enabled.\n   * @private\n   * @function\n   * @fires Magellan#update\n   */\n  _updateActive(/*evt, elem, scrollPos*/) {\n    var winPos = /*scrollPos ||*/ parseInt(window.pageYOffset, 10),\n        curIdx;\n\n    if(winPos + this.winHeight === this.docHeight){ curIdx = this.points.length - 1; }\n    else if(winPos < this.points[0]){ curIdx = 0; }\n    else{\n      var isDown = this.scrollPos < winPos,\n          _this = this,\n          curVisible = this.points.filter(function(p, i){\n            return isDown ? p - _this.options.barOffset <= winPos : p - _this.options.barOffset - _this.options.threshold <= winPos;\n          });\n      curIdx = curVisible.length ? curVisible.length - 1 : 0;\n    }\n\n    this.$active.removeClass(this.options.activeClass);\n    this.$active = this.$links.eq(curIdx).addClass(this.options.activeClass);\n\n    if(this.options.deepLinking){\n      var hash = this.$active[0].getAttribute('href');\n      if(window.history.pushState){\n        window.history.pushState(null, null, hash);\n      }else{\n        window.location.hash = hash;\n      }\n    }\n\n    this.scrollPos = winPos;\n    /**\n     * Fires when magellan is finished updating to the new active element.\n     * @event Magellan#update\n     */\n    this.$element.trigger('update.zf.magellan', [this.$active]);\n  }\n\n  /**\n   * Destroys an instance of Magellan and resets the url of the window.\n   * @function\n   */\n  destroy() {\n    this.$element.off('.zf.trigger .zf.magellan')\n        .find(`.${this.options.activeClass}`).removeClass(this.options.activeClass);\n\n    if(this.options.deepLinking){\n      var hash = this.$active[0].getAttribute('href');\n      window.location.hash.replace(hash, '');\n    }\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\n/**\n * Default settings for plugin\n */\nMagellan.defaults = {\n  /**\n   * Amount of time, in ms, the animated scrolling should take between locations.\n   * @option\n   * @example 500\n   */\n  animationDuration: 500,\n  /**\n   * Animation style to use when scrolling between locations.\n   * @option\n   * @example 'ease-in-out'\n   */\n  animationEasing: 'linear',\n  /**\n   * Number of pixels to use as a marker for location changes.\n   * @option\n   * @example 50\n   */\n  threshold: 50,\n  /**\n   * Class applied to the active locations link on the magellan container.\n   * @option\n   * @example 'active'\n   */\n  activeClass: 'active',\n  /**\n   * Allows the script to manipulate the url of the current page, and if supported, alter the history.\n   * @option\n   * @example true\n   */\n  deepLinking: false,\n  /**\n   * Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.\n   * @option\n   * @example 25\n   */\n  barOffset: 0\n}\n\n// Window exports\nFoundation.plugin(Magellan, 'Magellan');\n\n}(jQuery);\n"]},"hash":"2c701dce2ff0fe19e7b35219902c92633dd3cbeb"}
