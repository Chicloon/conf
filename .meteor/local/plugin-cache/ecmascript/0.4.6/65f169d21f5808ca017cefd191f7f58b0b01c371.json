{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/vendor/jquery.autocomplete/scripts/demo.js","filenameRelative":"/packages/zurb:foundation-sites/vendor/jquery.autocomplete/scripts/demo.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/vendor/jquery.autocomplete/scripts/demo.js.map","sourceFileName":"/packages/zurb:foundation-sites/vendor/jquery.autocomplete/scripts/demo.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"demo"},"ignored":false,"code":"/*jslint  browser: true, white: true, plusplus: true */\n/*global $, countries */\n\n$(function () {\n    'use strict';\n\n    var countriesArray = $.map(countries, function (value, key) {\n        return { value: value, data: key };\n    });\n\n    // Setup jQuery ajax mock:\n    $.mockjax({\n        url: '*',\n        responseTime: 2000,\n        response: function () {\n            function response(settings) {\n                var query = settings.data.query,\n                    queryLowerCase = query.toLowerCase(),\n                    re = new RegExp('\\\\b' + $.Autocomplete.utils.escapeRegExChars(queryLowerCase), 'gi'),\n                    suggestions = $.grep(countriesArray, function (country) {\n                    // return country.value.toLowerCase().indexOf(queryLowerCase) === 0;\n                    return re.test(country.value);\n                }),\n                    response = {\n                    query: query,\n                    suggestions: suggestions\n                };\n\n                this.responseText = JSON.stringify(response);\n            }\n\n            return response;\n        }()\n    });\n\n    // Initialize ajax autocomplete:\n    $('#autocomplete-ajax').autocomplete({\n        // serviceUrl: '/autosuggest/service/url',\n        lookup: countriesArray,\n        lookupFilter: function () {\n            function lookupFilter(suggestion, originalQuery, queryLowerCase) {\n                var re = new RegExp('\\\\b' + $.Autocomplete.utils.escapeRegExChars(queryLowerCase), 'gi');\n                return re.test(suggestion.value);\n            }\n\n            return lookupFilter;\n        }(),\n        onSelect: function () {\n            function onSelect(suggestion) {\n                $('#selction-ajax').html('You selected: ' + suggestion.value + ', ' + suggestion.data);\n            }\n\n            return onSelect;\n        }(),\n        onHint: function () {\n            function onHint(hint) {\n                $('#autocomplete-ajax-x').val(hint);\n            }\n\n            return onHint;\n        }(),\n        onInvalidateSelection: function () {\n            function onInvalidateSelection() {\n                $('#selction-ajax').html('You selected: none');\n            }\n\n            return onInvalidateSelection;\n        }()\n    });\n\n    // Initialize autocomplete with local lookup:\n    $('#autocomplete').autocomplete({\n        lookup: countriesArray,\n        minChars: 0,\n        onSelect: function () {\n            function onSelect(suggestion) {\n                $('#selection').html('You selected: ' + suggestion.value + ', ' + suggestion.data);\n            }\n\n            return onSelect;\n        }()\n    });\n\n    // Initialize autocomplete with custom appendTo:\n    $('#autocomplete-custom-append').autocomplete({\n        lookup: countriesArray,\n        appendTo: '#suggestions-container'\n    });\n\n    // Initialize autocomplete with custom appendTo:\n    $('#autocomplete-dynamic').autocomplete({\n        lookup: countriesArray\n    });\n});","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/vendor/jquery.autocomplete/scripts/demo.js"],"names":[],"mappings":";;;AAGA,EAAE,YAAY;AACV;;AAEA,QAAI,iBAAiB,EAAE,GAAF,CAAM,SAAN,EAAiB,UAAU,KAAV,EAAiB,GAAjB,EAAsB;AAAE,eAAO,EAAE,OAAO,KAAT,EAAgB,MAAM,GAAtB,EAAP;AAAqC,KAA9E,CAArB;;;AAGA,MAAE,OAAF,CAAU;AACN,aAAK,GADC;AAEN,sBAAc,IAFR;AAGN;AAAU,8BAAU,QAAV,EAAoB;AAC1B,oBAAI,QAAQ,SAAS,IAAT,CAAc,KAA1B;AAAA,oBACI,iBAAiB,MAAM,WAAN,EADrB;AAAA,oBAEI,KAAK,IAAI,MAAJ,CAAW,QAAQ,EAAE,YAAF,CAAe,KAAf,CAAqB,gBAArB,CAAsC,cAAtC,CAAnB,EAA0E,IAA1E,CAFT;AAAA,oBAGI,cAAc,EAAE,IAAF,CAAO,cAAP,EAAuB,UAAU,OAAV,EAAmB;;AAEpD,2BAAO,GAAG,IAAH,CAAQ,QAAQ,KAAhB,CAAP;AACH,iBAHa,CAHlB;AAAA,oBAOI,WAAW;AACP,2BAAO,KADA;AAEP,iCAAa;AAFN,iBAPf;;AAYA,qBAAK,YAAL,GAAoB,KAAK,SAAL,CAAe,QAAf,CAApB;AACH;;AAdD;AAAA;AAHM,KAAV;;;AAqBA,MAAE,oBAAF,EAAwB,YAAxB,CAAqC;;AAEjC,gBAAQ,cAFyB;AAGjC;AAAc,kCAAS,UAAT,EAAqB,aAArB,EAAoC,cAApC,EAAoD;AAC9D,oBAAI,KAAK,IAAI,MAAJ,CAAW,QAAQ,EAAE,YAAF,CAAe,KAAf,CAAqB,gBAArB,CAAsC,cAAtC,CAAnB,EAA0E,IAA1E,CAAT;AACA,uBAAO,GAAG,IAAH,CAAQ,WAAW,KAAnB,CAAP;AACH;;AAHD;AAAA,WAHiC;AAOjC;AAAU,8BAAS,UAAT,EAAqB;AAC3B,kBAAE,gBAAF,EAAoB,IAApB,CAAyB,mBAAmB,WAAW,KAA9B,GAAsC,IAAtC,GAA6C,WAAW,IAAjF;AACH;;AAFD;AAAA,WAPiC;AAUjC;AAAQ,4BAAU,IAAV,EAAgB;AACpB,kBAAE,sBAAF,EAA0B,GAA1B,CAA8B,IAA9B;AACH;;AAFD;AAAA,WAViC;AAajC;AAAuB,6CAAW;AAC9B,kBAAE,gBAAF,EAAoB,IAApB,CAAyB,oBAAzB;AACH;;AAFD;AAAA;AAbiC,KAArC;;;AAmBA,MAAE,eAAF,EAAmB,YAAnB,CAAgC;AAC5B,gBAAQ,cADoB;AAE5B,kBAAU,CAFkB;AAG5B;AAAU,8BAAU,UAAV,EAAsB;AAC5B,kBAAE,YAAF,EAAgB,IAAhB,CAAqB,mBAAmB,WAAW,KAA9B,GAAsC,IAAtC,GAA6C,WAAW,IAA7E;AACH;;AAFD;AAAA;AAH4B,KAAhC;;;AASA,MAAE,6BAAF,EAAiC,YAAjC,CAA8C;AAC1C,gBAAQ,cADkC;AAE1C,kBAAU;AAFgC,KAA9C;;;AAMA,MAAE,uBAAF,EAA2B,YAA3B,CAAwC;AACpC,gBAAQ;AAD4B,KAAxC;AAGH,CAhED","file":"/packages/zurb:foundation-sites/vendor/jquery.autocomplete/scripts/demo.js.map","sourcesContent":["ï»¿/*jslint  browser: true, white: true, plusplus: true */\n/*global $, countries */\n\n$(function () {\n    'use strict';\n\n    var countriesArray = $.map(countries, function (value, key) { return { value: value, data: key }; });\n\n    // Setup jQuery ajax mock:\n    $.mockjax({\n        url: '*',\n        responseTime: 2000,\n        response: function (settings) {\n            var query = settings.data.query,\n                queryLowerCase = query.toLowerCase(),\n                re = new RegExp('\\\\b' + $.Autocomplete.utils.escapeRegExChars(queryLowerCase), 'gi'),\n                suggestions = $.grep(countriesArray, function (country) {\n                     // return country.value.toLowerCase().indexOf(queryLowerCase) === 0;\n                    return re.test(country.value);\n                }),\n                response = {\n                    query: query,\n                    suggestions: suggestions\n                };\n\n            this.responseText = JSON.stringify(response);\n        }\n    });\n\n    // Initialize ajax autocomplete:\n    $('#autocomplete-ajax').autocomplete({\n        // serviceUrl: '/autosuggest/service/url',\n        lookup: countriesArray,\n        lookupFilter: function(suggestion, originalQuery, queryLowerCase) {\n            var re = new RegExp('\\\\b' + $.Autocomplete.utils.escapeRegExChars(queryLowerCase), 'gi');\n            return re.test(suggestion.value);\n        },\n        onSelect: function(suggestion) {\n            $('#selction-ajax').html('You selected: ' + suggestion.value + ', ' + suggestion.data);\n        },\n        onHint: function (hint) {\n            $('#autocomplete-ajax-x').val(hint);\n        },\n        onInvalidateSelection: function() {\n            $('#selction-ajax').html('You selected: none');\n        }\n    });\n\n    // Initialize autocomplete with local lookup:\n    $('#autocomplete').autocomplete({\n        lookup: countriesArray,\n        minChars: 0,\n        onSelect: function (suggestion) {\n            $('#selection').html('You selected: ' + suggestion.value + ', ' + suggestion.data);\n        }\n    });\n    \n    // Initialize autocomplete with custom appendTo:\n    $('#autocomplete-custom-append').autocomplete({\n        lookup: countriesArray,\n        appendTo: '#suggestions-container'\n    });\n\n    // Initialize autocomplete with custom appendTo:\n    $('#autocomplete-dynamic').autocomplete({\n        lookup: countriesArray\n    });\n});"]},"hash":"65f169d21f5808ca017cefd191f7f58b0b01c371"}
