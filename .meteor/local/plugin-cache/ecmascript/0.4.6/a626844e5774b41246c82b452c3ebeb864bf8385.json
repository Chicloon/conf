{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/vendor/jquery/src/core/access.js","filenameRelative":"/packages/zurb:foundation-sites/vendor/jquery/src/core/access.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/vendor/jquery/src/core/access.js.map","sourceFileName":"/packages/zurb:foundation-sites/vendor/jquery/src/core/access.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"access"},"ignored":false,"code":"define([\"../core\"], function (jQuery) {\n\n\t// Multifunctional method to get and set values of a collection\n\t// The value/s can optionally be executed if it's a function\n\tvar access = function access(elems, fn, key, value, chainable, emptyGet, raw) {\n\t\tvar i = 0,\n\t\t    len = elems.length,\n\t\t    bulk = key == null;\n\n\t\t// Sets many values\n\t\tif (jQuery.type(key) === \"object\") {\n\t\t\tchainable = true;\n\t\t\tfor (i in meteorBabelHelpers.sanitizeForInObject(key)) {\n\t\t\t\taccess(elems, fn, i, key[i], true, emptyGet, raw);\n\t\t\t}\n\n\t\t\t// Sets one value\n\t\t} else if (value !== undefined) {\n\t\t\t\tchainable = true;\n\n\t\t\t\tif (!jQuery.isFunction(value)) {\n\t\t\t\t\traw = true;\n\t\t\t\t}\n\n\t\t\t\tif (bulk) {\n\n\t\t\t\t\t// Bulk operations run against the entire set\n\t\t\t\t\tif (raw) {\n\t\t\t\t\t\tfn.call(elems, value);\n\t\t\t\t\t\tfn = null;\n\n\t\t\t\t\t\t// ...except when executing function values\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbulk = fn;\n\t\t\t\t\t\t\tfn = function fn(elem, key, value) {\n\t\t\t\t\t\t\t\treturn bulk.call(jQuery(elem), value);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (fn) {\n\t\t\t\t\tfor (; i < len; i++) {\n\t\t\t\t\t\tfn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\treturn chainable ? elems :\n\n\t\t// Gets\n\t\tbulk ? fn.call(elems) : len ? fn(elems[0], key) : emptyGet;\n\t};\n\n\treturn access;\n});","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/vendor/jquery/src/core/access.js"],"names":[],"mappings":"AAAA,OAAQ,CACP,SADO,CAAR,EAEG,UAAU,MAAV,EAAmB;;;;AAItB,KAAI,SAAS,SAAT,MAAS,CAAU,KAAV,EAAiB,EAAjB,EAAqB,GAArB,EAA0B,KAA1B,EAAiC,SAAjC,EAA4C,QAA5C,EAAsD,GAAtD,EAA4D;AACxE,MAAI,IAAI,CAAR;AAAA,MACC,MAAM,MAAM,MADb;AAAA,MAEC,OAAO,OAAO,IAFf;;;AAKA,MAAK,OAAO,IAAP,CAAa,GAAb,MAAuB,QAA5B,EAAuC;AACtC,eAAY,IAAZ;AACA,QAAM,CAAN,2CAAW,GAAX,GAAiB;AAChB,WAAQ,KAAR,EAAe,EAAf,EAAmB,CAAnB,EAAsB,IAAK,CAAL,CAAtB,EAAgC,IAAhC,EAAsC,QAAtC,EAAgD,GAAhD;AACA;;;AAGD,GAPD,MAOO,IAAK,UAAU,SAAf,EAA2B;AACjC,gBAAY,IAAZ;;AAEA,QAAK,CAAC,OAAO,UAAP,CAAmB,KAAnB,CAAN,EAAmC;AAClC,WAAM,IAAN;AACA;;AAED,QAAK,IAAL,EAAY;;;AAGX,SAAK,GAAL,EAAW;AACV,SAAG,IAAH,CAAS,KAAT,EAAgB,KAAhB;AACA,WAAK,IAAL;;;AAGA,MALD,MAKO;AACN,cAAO,EAAP;AACA,YAAK,YAAU,IAAV,EAAgB,GAAhB,EAAqB,KAArB,EAA6B;AACjC,eAAO,KAAK,IAAL,CAAW,OAAQ,IAAR,CAAX,EAA2B,KAA3B,CAAP;AACA,QAFD;AAGA;AACD;;AAED,QAAK,EAAL,EAAU;AACT,YAAQ,IAAI,GAAZ,EAAiB,GAAjB,EAAuB;AACtB,SACC,MAAO,CAAP,CADD,EACa,GADb,EACkB,MACjB,KADiB,GAEjB,MAAM,IAAN,CAAY,MAAO,CAAP,CAAZ,EAAwB,CAAxB,EAA2B,GAAI,MAAO,CAAP,CAAJ,EAAgB,GAAhB,CAA3B,CAHD;AAKA;AACD;AACD;;AAED,SAAO,YACN,KADM;;;AAIN,SACC,GAAG,IAAH,CAAS,KAAT,CADD,GAEC,MAAM,GAAI,MAAO,CAAP,CAAJ,EAAgB,GAAhB,CAAN,GAA8B,QANhC;AAOA,EAtDD;;AAwDA,QAAO,MAAP;AAEC,CAhED","file":"/packages/zurb:foundation-sites/vendor/jquery/src/core/access.js.map","sourcesContent":["define( [\n\t\"../core\"\n], function( jQuery ) {\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\nreturn access;\n\n} );\n"]},"hash":"a626844e5774b41246c82b452c3ebeb864bf8385"}
