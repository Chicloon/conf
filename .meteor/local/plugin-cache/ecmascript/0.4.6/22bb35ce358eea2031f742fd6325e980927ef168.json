{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]}],"exports":{"exported":["Registration"],"specifiers":[{"kind":"local","local":"Registration","exported":"default"}]}}},"options":{"filename":"/client/Pages/Registration/Registration.jsx","filenameRelative":"/client/Pages/Registration/Registration.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/Pages/Registration/Registration.jsx.map","sourceFileName":"/client/Pages/Registration/Registration.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"Registration"},"ignored":false,"code":"var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v}});\n\n\n\n//\nParticipants = new Mongo.Collection(\"participants\");\n// Test = new Mongo.Collection (\"test\");\n\nvar Registration = function (_Component) {\n  _inherits(Registration, _Component);\n\n  function Registration() {\n    _classCallCheck(this, Registration);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this));\n\n    _this.state = {\n      subscription: {\n        participants: Meteor.subscribe('allAbstracts')\n      }\n    };\n    return _this;\n  }\n\n  Registration.prototype.participants = function () {\n    function participants() {\n      // console.log(Participants.find().fetch());\n      console.log('test');\n      // console.log(Participants.find());\n      return Participants.find().fetch();\n    }\n\n    return participants;\n  }();\n\n  Registration.prototype.componentWillMount = function () {\n    function componentWillMount() {\n      console.log('this is willMount');\n      console.log('Meteor user', Meteor.user());\n      console.log('Participants', this.participants());\n      this.state = {\n        currentUser: Meteor.user()\n      };\n      console.log('this state currentUser', this.state.currentUser);\n    }\n\n    return componentWillMount;\n  }();\n\n  Registration.prototype.componentWillUnmount = function () {\n    function componentWillUnmount() {\n      this.state.subscription.userEmail.stop();\n    }\n\n    return componentWillUnmount;\n  }();\n\n  Registration.prototype.addAbstract = function () {\n    function addAbstract(event) {\n      event.preventDefault();\n\n      var participant = {\n        title: this.refs.title.value,\n        authors: this.refs.authors.value,\n        section: this.refs.section.value,\n        abstract: this.refs.abstract.value,\n        organization: this.refs.organization.value\n      };\n      // console.log (participant);\n      // console.log(Meteor.userId());\n      // console.log (Meteor.user().emails[0].address);\n      // Participants.insert(participant);\n      Meteor.call('addParticipant', participant);\n    }\n\n    return addAbstract;\n  }();\n\n  Registration.prototype.render = function () {\n    function render() {\n      var styles = {\n        maxWidth: '90%',\n        margin: '0 auto'\n      };\n\n      // console.log (this.state.currentUser);\n      // console.log(this.participants());\n      return React.createElement(\n        'div',\n        null,\n        React.createElement(\n          'div',\n          { className: 'grid-block' },\n          React.createElement(\n            'div',\n            { className: 'grid-container', style: styles },\n            React.createElement(\n              'h1',\n              null,\n              'Registration page'\n            ),\n            React.createElement(\n              'p',\n              null,\n              'Please fill the registration form'\n            ),\n            React.createElement(\n              'form',\n              { onSubmit: this.addAbstract.bind(this) },\n              React.createElement(\n                'label',\n                null,\n                ' Abstract title',\n                React.createElement('input', { ref: 'title', type: 'text', placeholder: '.medium-6.columns' })\n              ),\n              React.createElement(\n                'label',\n                null,\n                ' Authors',\n                React.createElement('input', { ref: 'authors', type: 'text', placeholder: '.medium-6.columns' })\n              ),\n              React.createElement(\n                'label',\n                null,\n                ' Organization',\n                React.createElement('input', { ref: 'organization', type: 'text', placeholder: 'Organization' })\n              ),\n              React.createElement(\n                'label',\n                null,\n                ' Select section',\n                React.createElement(\n                  'select',\n                  { ref: 'section' },\n                  React.createElement('option', { value: '' }),\n                  React.createElement(\n                    'option',\n                    { value: 'biology' },\n                    'Biology'\n                  ),\n                  React.createElement(\n                    'option',\n                    { value: 'physics' },\n                    'Physics'\n                  ),\n                  React.createElement(\n                    'option',\n                    { value: 'chemistry' },\n                    'Chemistry'\n                  )\n                )\n              ),\n              React.createElement(\n                'label',\n                null,\n                ' Abstract',\n                React.createElement('textarea', { ref: 'abstract', placeholder: 'None', rows: '10', cols: '45' })\n              ),\n              React.createElement('input', { className: 'success button', type: 'submit', placeholder: 'submit' })\n            )\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return Registration;\n}(Component);\n\nmodule.export(\"default\",exports.default=(Registration));","ast":null,"map":{"version":3,"sources":["/client/Pages/Registration/Registration.jsx"],"names":[],"mappings":";;;AAAA,OAAO,KAAP,IAAe,SAAf,QAA+B,OAA/B;;AAEA,eAAe,IAAI,MAAM,UAAV,CAAsB,cAAtB,CAAf;;;IAGqB,Y;;;AACnB,0BAAc;AAAA;;AAAA,iDACZ,qBADY;;AAEV,UAAK,KAAL,GAAa;AACX,oBAAc;AACZ,sBAAc,OAAO,SAAP,CAAiB,cAAjB;AADF;AADH,KAAb;AAFU;AAOX;;yBAEH,Y;4BAAc;;AAEZ,cAAQ,GAAR,CAAY,MAAZ;;AAEA,aAAO,aAAa,IAAb,GAAoB,KAApB,EAAP;AACD;;;;;yBAED,kB;kCAAqB;AACnB,cAAQ,GAAR,CAAY,mBAAZ;AACA,cAAQ,GAAR,CAAY,aAAZ,EAA2B,OAAO,IAAP,EAA3B;AACA,cAAQ,GAAR,CAAY,cAAZ,EAA4B,KAAK,YAAL,EAA5B;AACA,WAAK,KAAL,GAAa;AACX,qBAAa,OAAO,IAAP;AADF,OAAb;AAGA,cAAQ,GAAR,CAAY,wBAAZ,EAAsC,KAAK,KAAL,CAAW,WAAjD;AACD;;;;;yBACD,oB;oCAAuB;AACrB,WAAK,KAAL,CAAW,YAAX,CAAwB,SAAxB,CAAkC,IAAlC;AACD;;;;;yBAGD,W;yBAAY,K,EAAM;AAChB,YAAM,cAAN;;AAEA,UAAI,cAAc;AAChB,eAAQ,KAAK,IAAL,CAAU,KAAV,CAAgB,KADR;AAEhB,iBAAU,KAAK,IAAL,CAAU,OAAV,CAAkB,KAFZ;AAGhB,iBAAS,KAAK,IAAL,CAAU,OAAV,CAAkB,KAHX;AAIhB,kBAAW,KAAK,IAAL,CAAU,QAAV,CAAmB,KAJd;AAKhB,sBAAe,KAAK,IAAL,CAAU,YAAV,CAAuB;AALtB,OAAlB;;;;;AAWA,aAAO,IAAP,CAAY,gBAAZ,EAA8B,WAA9B;AACD;;;;;yBAGC,M;sBAAS;AACP,UAAI,SAAS;AACX,kBAAU,KADC;AAEX,gBAAQ;AAFG,OAAb;;;;AAOE,aACI;AAAA;AAAA;AACE;AAAA;AAAA,YAAK,WAAU,YAAf;AACE;AAAA;AAAA,cAAK,WAAU,gBAAf,EAAgC,OAAO,MAAvC;AACE;AAAA;AAAA;AAAA;AAAA,aADF;AAEE;AAAA;AAAA;AAAA;AAAA,aAFF;AAKQ;AAAA;AAAA,gBAAM,UAAU,KAAK,WAAL,CAAiB,IAAjB,CAAsB,IAAtB,CAAhB;AACE;AAAA;AAAA;AAAA;AACE,+CAAO,KAAI,OAAX,EAAmB,MAAK,MAAxB,EAA+B,aAAY,mBAA3C;AADF,eADF;AAII;AAAA;AAAA;AAAA;AACI,+CAAO,KAAI,SAAX,EAAqB,MAAK,MAA1B,EAAiC,aAAY,mBAA7C;AADJ,eAJJ;AAOI;AAAA;AAAA;AAAA;AACI,+CAAO,KAAI,cAAX,EAA0B,MAAK,MAA/B,EAAsC,aAAY,cAAlD;AADJ,eAPJ;AAUI;AAAA;AAAA;AAAA;AACE;AAAA;AAAA,oBAAQ,KAAI,SAAZ;AACE,kDAAQ,OAAM,EAAd,GADF;AAEE;AAAA;AAAA,sBAAQ,OAAM,SAAd;AAAA;AAAA,mBAFF;AAGE;AAAA;AAAA,sBAAQ,OAAM,SAAd;AAAA;AAAA,mBAHF;AAIE;AAAA;AAAA,sBAAQ,OAAM,WAAd;AAAA;AAAA;AAJF;AADF,eAVJ;AAkBI;AAAA;AAAA;AAAA;AACK,kDAAU,KAAI,UAAd,EAAyB,aAAY,MAArC,EAA4C,MAAK,IAAjD,EAAsD,MAAK,IAA3D;AADL,eAlBJ;AAsBI,6CAAO,WAAU,gBAAjB,EAAkC,MAAK,QAAvC,EAAgD,aAAY,QAA5D;AAtBJ;AALR;AADF;AADF,OADJ;AAoCH;;;;;;EA7FqC,S;;eAArB,Y","file":"/client/Pages/Registration/Registration.jsx.map","sourcesContent":["import React, {Component} from 'react';\n//\nParticipants = new Mongo.Collection (\"participants\");\n// Test = new Mongo.Collection (\"test\");\n\nexport default class Registration extends Component {\n  constructor() {\n    super();\n      this.state = {\n        subscription: {\n          participants: Meteor.subscribe('allAbstracts')\n        }\n      }\n    }\n\n  participants(){\n    // console.log(Participants.find().fetch());\n    console.log('test');\n    // console.log(Participants.find());\n    return Participants.find().fetch();\n  }\n\n  componentWillMount() {\n    console.log('this is willMount');\n    console.log('Meteor user', Meteor.user());\n    console.log('Participants', this.participants());\n    this.state = {\n      currentUser: Meteor.user()\n    };\n    console.log('this state currentUser', this.state.currentUser);\n  }\n  componentWillUnmount() {\n    this.state.subscription.userEmail.stop();\n  }\n\n\n  addAbstract(event){\n    event.preventDefault();\n\n    var participant = {\n      title : this.refs.title.value,\n      authors : this.refs.authors.value,\n      section: this.refs.section.value,\n      abstract : this.refs.abstract.value,\n      organization : this.refs.organization.value,\n    };\n    // console.log (participant);\n    // console.log(Meteor.userId());\n    // console.log (Meteor.user().emails[0].address);\n    // Participants.insert(participant);\n    Meteor.call('addParticipant', participant)\n  }\n\n\n    render() {\n      var styles = {\n        maxWidth: '90%',\n        margin: '0 auto'\n      };\n\n      // console.log (this.state.currentUser);\n      // console.log(this.participants());\n        return (\n            <div>\n              <div className=\"grid-block\">\n                <div className=\"grid-container\" style={styles}>\n                  <h1>Registration page</h1>\n                  <p>\n                    Please fill the registration form\n                  </p>\n                        <form onSubmit={this.addAbstract.bind(this)}>\n                          <label> Abstract title\n                            <input ref=\"title\" type=\"text\" placeholder=\".medium-6.columns\"/>\n                          </label>\n                            <label> Authors\n                                <input ref=\"authors\" type=\"text\" placeholder=\".medium-6.columns\"/>\n                            </label>\n                            <label> Organization\n                                <input ref=\"organization\" type=\"text\" placeholder=\"Organization\" />\n                            </label>\n                            <label> Select section\n                              <select ref=\"section\">\n                                <option value=\"\"></option>\n                                <option value=\"biology\">Biology</option>\n                                <option value=\"physics\">Physics</option>\n                                <option value=\"chemistry\">Chemistry</option>\n                              </select>\n                            </label>\n                            <label> Abstract\n                                 <textarea ref=\"abstract\" placeholder=\"None\" rows=\"10\" cols=\"45\"></textarea>\n                            </label>\n\n                            <input className=\"success button\" type=\"submit\" placeholder=\"submit\"/>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"hash":"22bb35ce358eea2031f742fd6325e980927ef168"}
