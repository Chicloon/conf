{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.responsiveMenu.js","filenameRelative":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.responsiveMenu.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.responsiveMenu.js.map","sourceFileName":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.responsiveMenu.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.responsiveMenu"},"ignored":false,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n!function ($) {\n\n  /**\n   * ResponsiveMenu module.\n   * @module foundation.responsiveMenu\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.accordionMenu\n   * @requires foundation.util.drilldown\n   * @requires foundation.util.dropdown-menu\n   */\n\n  var ResponsiveMenu = function () {\n    /**\n     * Creates a new instance of a responsive menu.\n     * @class\n     * @fires ResponsiveMenu#init\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function ResponsiveMenu(element, options) {\n      _classCallCheck(this, ResponsiveMenu);\n\n      this.$element = $(element);\n      this.rules = this.$element.data('responsive-menu');\n      this.currentMq = null;\n      this.currentPlugin = null;\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveMenu');\n    }\n\n    /**\n     * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\n     * @function\n     * @private\n     */\n\n    _createClass(ResponsiveMenu, [{\n      key: '_init',\n      value: function () {\n        function _init() {\n          // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\n          if (typeof this.rules === 'string') {\n            var rulesTree = {};\n\n            // Parse rules from \"classes\" pulled from data attribute\n            var rules = this.rules.split(' ');\n\n            // Iterate through every rule found\n            for (var i = 0; i < rules.length; i++) {\n              var rule = rules[i].split('-');\n              var ruleSize = rule.length > 1 ? rule[0] : 'small';\n              var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n              if (MenuPlugins[rulePlugin] !== null) {\n                rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n              }\n            }\n\n            this.rules = rulesTree;\n          }\n\n          if (!$.isEmptyObject(this.rules)) {\n            this._checkMediaQueries();\n          }\n        }\n\n        return _init;\n      }()\n\n      /**\n       * Initializes events for the Menu.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function () {\n        function _events() {\n          var _this = this;\n\n          $(window).on('changed.zf.mediaquery', function () {\n            _this._checkMediaQueries();\n          });\n          // $(window).on('resize.zf.ResponsiveMenu', function() {\n          //   _this._checkMediaQueries();\n          // });\n        }\n\n        return _events;\n      }()\n\n      /**\n       * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_checkMediaQueries',\n      value: function () {\n        function _checkMediaQueries() {\n          var matchedMq,\n              _this = this;\n          // Iterate through each rule and find the last matching rule\n          $.each(this.rules, function (key) {\n            if (Foundation.MediaQuery.atLeast(key)) {\n              matchedMq = key;\n            }\n          });\n\n          // No match? No dice\n          if (!matchedMq) return;\n\n          // Plugin already initialized? We good\n          if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n          // Remove existing plugin-specific CSS classes\n          $.each(MenuPlugins, function (key, value) {\n            _this.$element.removeClass(value.cssClass);\n          });\n\n          // Add the CSS class for the new plugin\n          this.$element.addClass(this.rules[matchedMq].cssClass);\n\n          // Create an instance of the new plugin\n          if (this.currentPlugin) this.currentPlugin.destroy();\n          this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n        }\n\n        return _checkMediaQueries;\n      }()\n\n      /**\n       * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function () {\n        function destroy() {\n          this.currentPlugin.destroy();\n          $(window).off('.zf.ResponsiveMenu');\n          Foundation.unregisterPlugin(this);\n        }\n\n        return destroy;\n      }()\n    }]);\n\n    return ResponsiveMenu;\n  }();\n\n  ResponsiveMenu.defaults = {};\n\n  // The plugin matches the plugin classes with these plugin instances.\n  var MenuPlugins = {\n    dropdown: {\n      cssClass: 'dropdown',\n      plugin: Foundation._plugins['dropdown-menu'] || null\n    },\n    drilldown: {\n      cssClass: 'drilldown',\n      plugin: Foundation._plugins['drilldown'] || null\n    },\n    accordion: {\n      cssClass: 'accordion-menu',\n      plugin: Foundation._plugins['accordion-menu'] || null\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveMenu, 'ResponsiveMenu');\n}(jQuery);","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.responsiveMenu.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/_build/assets/js/plugins/foundation.responsiveMenu.js.map","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * ResponsiveMenu module.\n   * @module foundation.responsiveMenu\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.accordionMenu\n   * @requires foundation.util.drilldown\n   * @requires foundation.util.dropdown-menu\n   */\n\n  var ResponsiveMenu = function () {\n    /**\n     * Creates a new instance of a responsive menu.\n     * @class\n     * @fires ResponsiveMenu#init\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function ResponsiveMenu(element, options) {\n      _classCallCheck(this, ResponsiveMenu);\n\n      this.$element = $(element);\n      this.rules = this.$element.data('responsive-menu');\n      this.currentMq = null;\n      this.currentPlugin = null;\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveMenu');\n    }\n\n    /**\n     * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\n     * @function\n     * @private\n     */\n\n\n    _createClass(ResponsiveMenu, [{\n      key: '_init',\n      value: function _init() {\n        // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\n        if (typeof this.rules === 'string') {\n          var rulesTree = {};\n\n          // Parse rules from \"classes\" pulled from data attribute\n          var rules = this.rules.split(' ');\n\n          // Iterate through every rule found\n          for (var i = 0; i < rules.length; i++) {\n            var rule = rules[i].split('-');\n            var ruleSize = rule.length > 1 ? rule[0] : 'small';\n            var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n            if (MenuPlugins[rulePlugin] !== null) {\n              rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n            }\n          }\n\n          this.rules = rulesTree;\n        }\n\n        if (!$.isEmptyObject(this.rules)) {\n          this._checkMediaQueries();\n        }\n      }\n\n      /**\n       * Initializes events for the Menu.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', function () {\n          _this._checkMediaQueries();\n        });\n        // $(window).on('resize.zf.ResponsiveMenu', function() {\n        //   _this._checkMediaQueries();\n        // });\n      }\n\n      /**\n       * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_checkMediaQueries',\n      value: function _checkMediaQueries() {\n        var matchedMq,\n            _this = this;\n        // Iterate through each rule and find the last matching rule\n        $.each(this.rules, function (key) {\n          if (Foundation.MediaQuery.atLeast(key)) {\n            matchedMq = key;\n          }\n        });\n\n        // No match? No dice\n        if (!matchedMq) return;\n\n        // Plugin already initialized? We good\n        if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n        // Remove existing plugin-specific CSS classes\n        $.each(MenuPlugins, function (key, value) {\n          _this.$element.removeClass(value.cssClass);\n        });\n\n        // Add the CSS class for the new plugin\n        this.$element.addClass(this.rules[matchedMq].cssClass);\n\n        // Create an instance of the new plugin\n        if (this.currentPlugin) this.currentPlugin.destroy();\n        this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n      }\n\n      /**\n       * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.currentPlugin.destroy();\n        $(window).off('.zf.ResponsiveMenu');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveMenu;\n  }();\n\n  ResponsiveMenu.defaults = {};\n\n  // The plugin matches the plugin classes with these plugin instances.\n  var MenuPlugins = {\n    dropdown: {\n      cssClass: 'dropdown',\n      plugin: Foundation._plugins['dropdown-menu'] || null\n    },\n    drilldown: {\n      cssClass: 'drilldown',\n      plugin: Foundation._plugins['drilldown'] || null\n    },\n    accordion: {\n      cssClass: 'accordion-menu',\n      plugin: Foundation._plugins['accordion-menu'] || null\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveMenu, 'ResponsiveMenu');\n}(jQuery);"]},"hash":"d3cf94966d9457ca5c2c04fab525a1648947f3f3"}
