{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/customizer/lib/js.js","filenameRelative":"/packages/zurb:foundation-sites/customizer/lib/js.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/customizer/lib/js.js.map","sourceFileName":"/packages/zurb:foundation-sites/customizer/lib/js.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"js"},"ignored":false,"code":"var empty = require('is-empty-object');\nvar unique = require('array-uniq');\n\n/**\n * Creates an array of file paths that can be passed to `gulp.src()`.\n * @param {Object} config - Customizer configuration file.\n * @param {String[]} modules - Modules to include in the file list.\n * @returns {String[]} Array of file paths.\n */\nmodule.exports = function (config, modules) {\n  var files = ['core'];\n  var utils = ['mediaQuery'];\n  var libraries = [];\n\n  if (empty(modules)) {\n    modules = Object.keys(config);\n  }\n\n  for (var i in meteorBabelHelpers.sanitizeForInObject(modules)) {\n    var name = modules[i];\n\n    // Check if the module has JS files\n    if (config[name] && config[name].js) {\n      libraries.push(config[name].js);\n\n      // Check if the module has dependencies\n      if (config[name].js_utils) {\n        utils = utils.concat(config[name].js_utils);\n      }\n    }\n  }\n\n  // Prune duplicate entries from the list of utility files\n  utils = unique(utils).map(function (name) {\n    return 'util.' + name;\n  });\n\n  // Combine foundation.core.js, utilities, and plugins into one array\n  files = files.concat(utils, libraries);\n\n  // Format the modules as paths\n  return files.map(function (file) {\n    return 'js/foundation.' + file + '.js';\n  });\n};","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/customizer/lib/js.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,QAAQ,iBAAR,CAAZ;AACA,IAAI,SAAS,QAAQ,YAAR,CAAb;;;;;;;;AAQA,OAAO,OAAP,GAAiB,UAAS,MAAT,EAAiB,OAAjB,EAA0B;AACzC,MAAI,QAAQ,CAAC,MAAD,CAAZ;AACA,MAAI,QAAQ,CAAC,YAAD,CAAZ;AACA,MAAI,YAAY,EAAhB;;AAEA,MAAI,MAAM,OAAN,CAAJ,EAAoB;AAClB,cAAU,OAAO,IAAP,CAAY,MAAZ,CAAV;AACD;;AAED,OAAK,IAAI,CAAT,2CAAc,OAAd,GAAuB;AACrB,QAAI,OAAO,QAAQ,CAAR,CAAX;;;AAGA,QAAI,OAAO,IAAP,KAAgB,OAAO,IAAP,EAAa,EAAjC,EAAqC;AACnC,gBAAU,IAAV,CAAe,OAAO,IAAP,EAAa,EAA5B;;;AAGA,UAAI,OAAO,IAAP,EAAa,QAAjB,EAA2B;AACzB,gBAAQ,MAAM,MAAN,CAAa,OAAO,IAAP,EAAa,QAA1B,CAAR;AACD;AACF;AACF;;;AAGD,UAAQ,OAAO,KAAP,EAAc,GAAd,CAAkB,UAAS,IAAT,EAAe;AACvC,WAAO,UAAU,IAAjB;AACD,GAFO,CAAR;;;AAKA,UAAQ,MAAM,MAAN,CAAa,KAAb,EAAoB,SAApB,CAAR;;;AAGA,SAAO,MAAM,GAAN,CAAU,UAAS,IAAT,EAAe;AAC9B,WAAO,mBAAmB,IAAnB,GAA0B,KAAjC;AACD,GAFM,CAAP;AAGD,CAnCD","file":"/packages/zurb:foundation-sites/customizer/lib/js.js.map","sourcesContent":["var empty = require('is-empty-object');\nvar unique = require('array-uniq');\n\n/**\n * Creates an array of file paths that can be passed to `gulp.src()`.\n * @param {Object} config - Customizer configuration file.\n * @param {String[]} modules - Modules to include in the file list.\n * @returns {String[]} Array of file paths.\n */\nmodule.exports = function(config, modules) {\n  var files = ['core'];\n  var utils = ['mediaQuery'];\n  var libraries = [];\n\n  if (empty(modules)) {\n    modules = Object.keys(config);\n  }\n\n  for (var i in modules) {\n    var name = modules[i];\n\n    // Check if the module has JS files\n    if (config[name] && config[name].js) {\n      libraries.push(config[name].js);\n\n      // Check if the module has dependencies\n      if (config[name].js_utils) {\n        utils = utils.concat(config[name].js_utils);\n      }\n    }\n  }\n\n  // Prune duplicate entries from the list of utility files\n  utils = unique(utils).map(function(name) {\n    return 'util.' + name;\n  });\n\n  // Combine foundation.core.js, utilities, and plugins into one array\n  files = files.concat(utils, libraries);\n\n  // Format the modules as paths\n  return files.map(function(file) {\n    return 'js/foundation.' + file + '.js';\n  });\n}\n"]},"hash":"6246fd4ab043dcbfb73a7c03846b9b0f04715dfe"}
