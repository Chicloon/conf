{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/test/javascript/components/toggler.js","filenameRelative":"/packages/zurb:foundation-sites/test/javascript/components/toggler.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/test/javascript/components/toggler.js.map","sourceFileName":"/packages/zurb:foundation-sites/test/javascript/components/toggler.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"toggler"},"ignored":false,"code":"describe('Toggler', function () {\n  var plugin;\n  var $html;\n\n  afterEach(function () {\n    plugin.destroy();\n    $html.remove();\n  });\n\n  describe('constructor()', function () {\n    it('stores the element and plugin options', function () {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin.$element.should.be.an('object');\n      plugin.options.should.be.an('object');\n    });\n  });\n\n  describe('init()', function () {\n    it('stores the class defined on the data-toggler attribute', function () {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin.className.should.equal('class');\n    });\n\n    it('stores the class defined on the data-toggler attribute (with leading dot)', function () {\n      $html = $('<div id=\"toggler\" data-toggler=\".class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin.className.should.equal('class');\n    });\n\n    it('stores defined animation classes', function () {\n      $html = $('<div id=\"toggler\" data-toggler data-animate=\"fade-in fade-out\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin.animationIn.should.equal('fade-in');\n      plugin.animationOut.should.equal('fade-out');\n    });\n\n    it('adds Aria attributes to click triggers', function () {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      var $triggers = $('\\n        <a data-open=\"toggler\">Open</a>\\n        <a data-close=\"toggler\">Close</a>\\n        <a data-toggle=\"toggler\">Toggle</a>\\n        ').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      $('[data-open]').should.have.attr('aria-controls', 'toggler');\n      $('[data-close]').should.have.attr('aria-controls', 'toggler');\n      $('[data-toggle]').should.have.attr('aria-controls', 'toggler');\n\n      $triggers.remove();\n    });\n\n    it('sets aria-expanded to true if the element is visible', function () {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      $('#toggler').should.have.attr('aria-expanded', 'true');\n    });\n\n    it('sets aria-expanded to false if the element is invisible', function () {\n      var $css = $('<style>#toggler { display: none }</style>').appendTo('body');\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      $('#toggler').should.have.attr('aria-expanded', 'false');\n      $css.remove();\n    });\n  });\n\n  describe('toggle()', function () {\n    it('calls Toggler._toggleClass() if the element toggles with a class');\n    it('calls Toggler._toggleAnimate() if the element toggles with animation');\n  });\n\n  describe('toggleClass()', function () {\n    it('toggles a class on the element', function () {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin._toggleClass();\n      $('#toggler').should.have['class']('class');\n\n      plugin._toggleClass();\n      $('#toggler').should.not.have['class']('class');\n    });\n\n    it('updates aria-expanded after the class is toggled', function () {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin._toggleClass();\n      $('#toggler').should.have.attr('aria-expanded', 'true');\n\n      plugin._toggleClass();\n      $('#toggler').should.have.attr('aria-expanded', 'false');\n    });\n  });\n\n  // [TODO] Re-enable this if you can get it working in PhantomJS\n  xdescribe('toggleAnimate()', function () {\n    it('animates an invisible element in', function (done) {\n      var $css = $('<style>#toggler { display: none; }</style>').appendTo('body');\n      $html = $('<div id=\"toggler\" data-toggler data-animate=\"fade-in fade-out\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      $html.on('on.zf.toggler', function () {\n        $('#toggler').should.be.visible;\n        $('#toggler').should.have.attr('aria-expanded', 'true');\n        $css.remove();\n        done();\n      });\n\n      plugin._toggleAnimate();\n    });\n\n    it('animates an visible element out', function (done) {\n      $html = $('<div id=\"toggler\" data-toggler data-animate=\"fade-in fade-out\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      $html.on('off.zf.toggler', function () {\n        $('#toggler').should.be.hidden;\n        $('#toggler').should.have.attr('aria-expanded', 'false');\n        done();\n      });\n\n      plugin._toggleAnimate();\n    });\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/test/javascript/components/toggler.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/test/javascript/components/toggler.js.map","sourcesContent":["describe('Toggler', function() {\n  var plugin;\n  var $html;\n\n  afterEach(function() {\n    plugin.destroy();\n    $html.remove();\n  });\n\n  describe('constructor()', function() {\n    it('stores the element and plugin options', function() {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin.$element.should.be.an('object');\n      plugin.options.should.be.an('object');\n    });\n  });\n\n  describe('init()', function() {\n    it('stores the class defined on the data-toggler attribute', function() {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin.className.should.equal('class');\n    });\n\n    it('stores the class defined on the data-toggler attribute (with leading dot)', function() {\n      $html = $('<div id=\"toggler\" data-toggler=\".class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin.className.should.equal('class');\n    });\n\n    it('stores defined animation classes', function() {\n      $html = $('<div id=\"toggler\" data-toggler data-animate=\"fade-in fade-out\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin.animationIn.should.equal('fade-in');\n      plugin.animationOut.should.equal('fade-out');\n    });\n\n    it('adds Aria attributes to click triggers', function() {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      var $triggers = $(`\n        <a data-open=\"toggler\">Open</a>\n        <a data-close=\"toggler\">Close</a>\n        <a data-toggle=\"toggler\">Toggle</a>\n        `).appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      $('[data-open]').should.have.attr('aria-controls', 'toggler');\n      $('[data-close]').should.have.attr('aria-controls', 'toggler');\n      $('[data-toggle]').should.have.attr('aria-controls', 'toggler');\n\n      $triggers.remove();\n    });\n\n    it('sets aria-expanded to true if the element is visible', function() {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      $('#toggler').should.have.attr('aria-expanded', 'true');\n    });\n\n    it('sets aria-expanded to false if the element is invisible', function() {\n      var $css = $('<style>#toggler { display: none }</style>').appendTo('body');\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      $('#toggler').should.have.attr('aria-expanded', 'false');\n      $css.remove();\n    });\n  });\n\n  describe('toggle()', function() {\n    it('calls Toggler._toggleClass() if the element toggles with a class');\n    it('calls Toggler._toggleAnimate() if the element toggles with animation');\n  });\n\n  describe('toggleClass()', function() {\n    it('toggles a class on the element', function() {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin._toggleClass();\n      $('#toggler').should.have.class('class');\n\n      plugin._toggleClass();\n      $('#toggler').should.not.have.class('class');\n    });\n\n    it('updates aria-expanded after the class is toggled', function() {\n      $html = $('<div id=\"toggler\" data-toggler=\"class\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      plugin._toggleClass();\n      $('#toggler').should.have.attr('aria-expanded', 'true');\n\n      plugin._toggleClass();\n      $('#toggler').should.have.attr('aria-expanded', 'false');\n    });\n  });\n\n  // [TODO] Re-enable this if you can get it working in PhantomJS\n  xdescribe('toggleAnimate()', function() {\n    it('animates an invisible element in', function(done) {\n      var $css = $('<style>#toggler { display: none; }</style>').appendTo('body');\n      $html = $('<div id=\"toggler\" data-toggler data-animate=\"fade-in fade-out\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      $html.on('on.zf.toggler', function() {\n        $('#toggler').should.be.visible;\n        $('#toggler').should.have.attr('aria-expanded', 'true');\n        $css.remove();\n        done();\n      });\n\n      plugin._toggleAnimate();\n    });\n\n    it('animates an visible element out', function(done) {\n      $html = $('<div id=\"toggler\" data-toggler data-animate=\"fade-in fade-out\"></div>').appendTo('body');\n      plugin = new Foundation.Toggler($html, {});\n\n      $html.on('off.zf.toggler', function() {\n        $('#toggler').should.be.hidden;\n        $('#toggler').should.have.attr('aria-expanded', 'false');\n        done();\n      });\n\n      plugin._toggleAnimate();\n    });\n  });\n});\n"]},"hash":"2a7f4b677e46dd194b92f6ab21ada39ff193b3c8"}
