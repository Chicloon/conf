{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/vendor/jquery.cookie/jquery.cookie.js","filenameRelative":"/packages/zurb:foundation-sites/vendor/jquery.cookie/jquery.cookie.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/vendor/jquery.cookie/jquery.cookie.js.map","sourceFileName":"/packages/zurb:foundation-sites/vendor/jquery.cookie/jquery.cookie.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"jquery.cookie"},"ignored":false,"code":"var _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/*!\n * jQuery Cookie Plugin v1.4.1\n * https://github.com/carhartl/jquery-cookie\n *\n * Copyright 2013 Klaus Hartl\n * Released under the MIT license\n */\n(function (factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD\n\t\tdefine(['jquery'], factory);\n\t} else if ((typeof exports === 'undefined' ? 'undefined' : (0, _typeof3['default'])(exports)) === 'object') {\n\t\t// CommonJS\n\t\tfactory(require('jquery'));\n\t} else {\n\t\t// Browser globals\n\t\tfactory(jQuery);\n\t}\n})(function ($) {\n\n\tvar pluses = /\\+/g;\n\n\tfunction encode(s) {\n\t\treturn config.raw ? s : encodeURIComponent(s);\n\t}\n\n\tfunction decode(s) {\n\t\treturn config.raw ? s : decodeURIComponent(s);\n\t}\n\n\tfunction stringifyCookieValue(value) {\n\t\treturn encode(config.json ? JSON.stringify(value) : String(value));\n\t}\n\n\tfunction parseCookieValue(s) {\n\t\tif (s.indexOf('\"') === 0) {\n\t\t\t// This is a quoted cookie as according to RFC2068, unescape...\n\t\t\ts = s.slice(1, -1).replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, '\\\\');\n\t\t}\n\n\t\ttry {\n\t\t\t// Replace server-side written pluses with spaces.\n\t\t\t// If we can't decode the cookie, ignore it, it's unusable.\n\t\t\t// If we can't parse the cookie, ignore it, it's unusable.\n\t\t\ts = decodeURIComponent(s.replace(pluses, ' '));\n\t\t\treturn config.json ? JSON.parse(s) : s;\n\t\t} catch (e) {}\n\t}\n\n\tfunction read(s, converter) {\n\t\tvar value = config.raw ? s : parseCookieValue(s);\n\t\treturn $.isFunction(converter) ? converter(value) : value;\n\t}\n\n\tvar config = $.cookie = function (key, value, options) {\n\n\t\t// Write\n\n\t\tif (value !== undefined && !$.isFunction(value)) {\n\t\t\toptions = $.extend({}, config.defaults, options);\n\n\t\t\tif (typeof options.expires === 'number') {\n\t\t\t\tvar days = options.expires,\n\t\t\t\t    t = options.expires = new Date();\n\t\t\t\tt.setTime(+t + days * 864e+5);\n\t\t\t}\n\n\t\t\treturn document.cookie = [encode(key), '=', stringifyCookieValue(value), options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE\n\t\t\toptions.path ? '; path=' + options.path : '', options.domain ? '; domain=' + options.domain : '', options.secure ? '; secure' : ''].join('');\n\t\t}\n\n\t\t// Read\n\n\t\tvar result = key ? undefined : {};\n\n\t\t// To prevent the for loop in the first place assign an empty array\n\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t// calling $.cookie().\n\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\n\t\tfor (var i = 0, l = cookies.length; i < l; i++) {\n\t\t\tvar parts = cookies[i].split('=');\n\t\t\tvar name = decode(parts.shift());\n\t\t\tvar cookie = parts.join('=');\n\n\t\t\tif (key && key === name) {\n\t\t\t\t// If second argument (value) is a function it's a converter...\n\t\t\t\tresult = read(cookie, value);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Prevent storing a cookie that we couldn't decode.\n\t\t\tif (!key && (cookie = read(cookie)) !== undefined) {\n\t\t\t\tresult[name] = cookie;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tconfig.defaults = {};\n\n\t$.removeCookie = function (key, options) {\n\t\tif ($.cookie(key) === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Must not alter options, thus extending a fresh object...\n\t\t$.cookie(key, '', $.extend({}, options, { expires: -1 }));\n\t\treturn !$.cookie(key);\n\t};\n});","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/vendor/jquery.cookie/jquery.cookie.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/vendor/jquery.cookie/jquery.cookie.js.map","sourcesContent":["/*!\n * jQuery Cookie Plugin v1.4.1\n * https://github.com/carhartl/jquery-cookie\n *\n * Copyright 2013 Klaus Hartl\n * Released under the MIT license\n */\n(function (factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD\n\t\tdefine(['jquery'], factory);\n\t} else if (typeof exports === 'object') {\n\t\t// CommonJS\n\t\tfactory(require('jquery'));\n\t} else {\n\t\t// Browser globals\n\t\tfactory(jQuery);\n\t}\n}(function ($) {\n\n\tvar pluses = /\\+/g;\n\n\tfunction encode(s) {\n\t\treturn config.raw ? s : encodeURIComponent(s);\n\t}\n\n\tfunction decode(s) {\n\t\treturn config.raw ? s : decodeURIComponent(s);\n\t}\n\n\tfunction stringifyCookieValue(value) {\n\t\treturn encode(config.json ? JSON.stringify(value) : String(value));\n\t}\n\n\tfunction parseCookieValue(s) {\n\t\tif (s.indexOf('\"') === 0) {\n\t\t\t// This is a quoted cookie as according to RFC2068, unescape...\n\t\t\ts = s.slice(1, -1).replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, '\\\\');\n\t\t}\n\n\t\ttry {\n\t\t\t// Replace server-side written pluses with spaces.\n\t\t\t// If we can't decode the cookie, ignore it, it's unusable.\n\t\t\t// If we can't parse the cookie, ignore it, it's unusable.\n\t\t\ts = decodeURIComponent(s.replace(pluses, ' '));\n\t\t\treturn config.json ? JSON.parse(s) : s;\n\t\t} catch(e) {}\n\t}\n\n\tfunction read(s, converter) {\n\t\tvar value = config.raw ? s : parseCookieValue(s);\n\t\treturn $.isFunction(converter) ? converter(value) : value;\n\t}\n\n\tvar config = $.cookie = function (key, value, options) {\n\n\t\t// Write\n\n\t\tif (value !== undefined && !$.isFunction(value)) {\n\t\t\toptions = $.extend({}, config.defaults, options);\n\n\t\t\tif (typeof options.expires === 'number') {\n\t\t\t\tvar days = options.expires, t = options.expires = new Date();\n\t\t\t\tt.setTime(+t + days * 864e+5);\n\t\t\t}\n\n\t\t\treturn (document.cookie = [\n\t\t\t\tencode(key), '=', stringifyCookieValue(value),\n\t\t\t\toptions.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE\n\t\t\t\toptions.path    ? '; path=' + options.path : '',\n\t\t\t\toptions.domain  ? '; domain=' + options.domain : '',\n\t\t\t\toptions.secure  ? '; secure' : ''\n\t\t\t].join(''));\n\t\t}\n\n\t\t// Read\n\n\t\tvar result = key ? undefined : {};\n\n\t\t// To prevent the for loop in the first place assign an empty array\n\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t// calling $.cookie().\n\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\n\t\tfor (var i = 0, l = cookies.length; i < l; i++) {\n\t\t\tvar parts = cookies[i].split('=');\n\t\t\tvar name = decode(parts.shift());\n\t\t\tvar cookie = parts.join('=');\n\n\t\t\tif (key && key === name) {\n\t\t\t\t// If second argument (value) is a function it's a converter...\n\t\t\t\tresult = read(cookie, value);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Prevent storing a cookie that we couldn't decode.\n\t\t\tif (!key && (cookie = read(cookie)) !== undefined) {\n\t\t\t\tresult[name] = cookie;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tconfig.defaults = {};\n\n\t$.removeCookie = function (key, options) {\n\t\tif ($.cookie(key) === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Must not alter options, thus extending a fresh object...\n\t\t$.cookie(key, '', $.extend({}, options, { expires: -1 }));\n\t\treturn !$.cookie(key);\n\t};\n\n}));\n"]},"hash":"82f74dd43c3fde1398912ad94aee25d7a2e46227"}
