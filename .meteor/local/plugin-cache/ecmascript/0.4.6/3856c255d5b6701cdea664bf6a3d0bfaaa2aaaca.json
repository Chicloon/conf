{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/zurb:foundation-sites/js/foundation.util.triggers.js","filenameRelative":"/packages/zurb:foundation-sites/js/foundation.util.triggers.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/zurb:foundation-sites/js/foundation.util.triggers.js.map","sourceFileName":"/packages/zurb:foundation-sites/js/foundation.util.triggers.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.util.triggers"},"ignored":false,"code":"'use strict';\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n!function ($) {\n\n  var MutationObserver = function () {\n    var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n    for (var i = 0; i < prefixes.length; i++) {\n      if (prefixes[i] + 'MutationObserver' in window) {\n        return window[prefixes[i] + 'MutationObserver'];\n      }\n    }\n    return false;\n  }();\n\n  var triggers = function triggers(el, type) {\n    el.data(type).split(' ').forEach(function (id) {\n      $('#' + id)[type === 'close' ? 'trigger' : 'triggerHandler'](type + '.zf.trigger', [el]);\n    });\n  };\n  // Elements with [data-open] will reveal a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-open]', function () {\n    triggers($(this), 'open');\n  });\n\n  // Elements with [data-close] will close a plugin that supports it when clicked.\n  // If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\n  $(document).on('click.zf.trigger', '[data-close]', function () {\n    var id = $(this).data('close');\n    if (id) {\n      triggers($(this), 'close');\n    } else {\n      $(this).trigger('close.zf.trigger');\n    }\n  });\n\n  // Elements with [data-toggle] will toggle a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-toggle]', function () {\n    triggers($(this), 'toggle');\n  });\n\n  // Elements with [data-closable] will respond to close.zf.trigger events.\n  $(document).on('close.zf.trigger', '[data-closable]', function (e) {\n    e.stopPropagation();\n    var animation = $(this).data('closable');\n\n    if (animation !== '') {\n      Foundation.Motion.animateOut($(this), animation, function () {\n        $(this).trigger('closed.zf');\n      });\n    } else {\n      $(this).fadeOut().trigger('closed.zf');\n    }\n  });\n\n  $(document).on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', function () {\n    var id = $(this).data('toggle-focus');\n    $('#' + id).triggerHandler('toggle.zf.trigger', [$(this)]);\n  });\n\n  /**\n  * Fires once after all other scripts have loaded\n  * @function\n  * @private\n  */\n  $(window).load(function () {\n    checkListeners();\n  });\n\n  function checkListeners() {\n    eventsListener();\n    resizeListener();\n    scrollListener();\n    closemeListener();\n  }\n\n  //******** only fires this function once on load, if there's something to watch ********\n  function closemeListener(pluginName) {\n    var yetiBoxes = $('[data-yeti-box]'),\n        plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n    if (pluginName) {\n      if (typeof pluginName === 'string') {\n        plugNames.push(pluginName);\n      } else if ((typeof pluginName === 'undefined' ? 'undefined' : (0, _typeof3['default'])(pluginName)) === 'object' && typeof pluginName[0] === 'string') {\n        plugNames.concat(pluginName);\n      } else {\n        console.error('Plugin names must be strings');\n      }\n    }\n    if (yetiBoxes.length) {\n      var listeners = plugNames.map(function (name) {\n        return 'closeme.zf.' + name;\n      }).join(' ');\n\n      $(window).off(listeners).on(listeners, function (e, pluginId) {\n        var plugin = e.namespace.split('.')[0];\n        var plugins = $('[data-' + plugin + ']').not('[data-yeti-box=\"' + pluginId + '\"]');\n\n        plugins.each(function () {\n          var _this = $(this);\n\n          _this.triggerHandler('close.zf.trigger', [_this]);\n        });\n      });\n    }\n  }\n\n  function resizeListener(debounce) {\n    var timer = void 0,\n        $nodes = $('[data-resize]');\n    if ($nodes.length) {\n      $(window).off('resize.zf.trigger').on('resize.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('resizeme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a resize event\n          $nodes.attr('data-events', \"resize\");\n        }, debounce || 10); //default time to emit resize event\n      });\n    }\n  }\n\n  function scrollListener(debounce) {\n    var timer = void 0,\n        $nodes = $('[data-scroll]');\n    if ($nodes.length) {\n      $(window).off('scroll.zf.trigger').on('scroll.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('scrollme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a scroll event\n          $nodes.attr('data-events', \"scroll\");\n        }, debounce || 10); //default time to emit scroll event\n      });\n    }\n  }\n\n  function eventsListener() {\n    if (!MutationObserver) {\n      return false;\n    }\n    var nodes = document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');\n\n    //element callback\n    var listeningElementsMutation = function listeningElementsMutation(mutationRecordsList) {\n      var $target = $(mutationRecordsList[0].target);\n      //trigger the event handler for the element depending on type\n      switch ($target.attr(\"data-events\")) {\n\n        case \"resize\":\n          $target.triggerHandler('resizeme.zf.trigger', [$target]);\n          break;\n\n        case \"scroll\":\n          $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n          break;\n\n        // case \"mutate\" :\n        // console.log('mutate', $target);\n        // $target.triggerHandler('mutate.zf.trigger');\n        //\n        // //make sure we don't get stuck in an infinite loop from sloppy codeing\n        // if ($target.index('[data-mutate]') == $(\"[data-mutate]\").length-1) {\n        //   domMutationObserver();\n        // }\n        // break;\n\n        default:\n          return false;\n        //nothing\n      }\n    };\n\n    if (nodes.length) {\n      //for each element that needs to listen for resizing, scrolling, (or coming soon mutation) add a single observer\n      for (var i = 0; i <= nodes.length - 1; i++) {\n        var elementObserver = new MutationObserver(listeningElementsMutation);\n        elementObserver.observe(nodes[i], { attributes: true, childList: false, characterData: false, subtree: false, attributeFilter: [\"data-events\"] });\n      }\n    }\n  }\n\n  // ------------------------------------\n\n  // [PH]\n  // Foundation.CheckWatchers = checkWatchers;\n  Foundation.IHearYou = checkListeners;\n  // Foundation.ISeeYou = scrollListener;\n  // Foundation.IFeelYou = closemeListener;\n}(jQuery);\n\n// function domMutationObserver(debounce) {\n//   // !!! This is coming soon and needs more work; not active  !!! //\n//   var timer,\n//   nodes = document.querySelectorAll('[data-mutate]');\n//   //\n//   if (nodes.length) {\n//     // var MutationObserver = (function () {\n//     //   var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n//     //   for (var i=0; i < prefixes.length; i++) {\n//     //     if (prefixes[i] + 'MutationObserver' in window) {\n//     //       return window[prefixes[i] + 'MutationObserver'];\n//     //     }\n//     //   }\n//     //   return false;\n//     // }());\n//\n//\n//     //for the body, we need to listen for all changes effecting the style and class attributes\n//     var bodyObserver = new MutationObserver(bodyMutation);\n//     bodyObserver.observe(document.body, { attributes: true, childList: true, characterData: false, subtree:true, attributeFilter:[\"style\", \"class\"]});\n//\n//\n//     //body callback\n//     function bodyMutation(mutate) {\n//       //trigger all listening elements and signal a mutation event\n//       if (timer) { clearTimeout(timer); }\n//\n//       timer = setTimeout(function() {\n//         bodyObserver.disconnect();\n//         $('[data-mutate]').attr('data-events',\"mutate\");\n//       }, debounce || 150);\n//     }\n//   }\n// }","ast":null,"map":{"version":3,"sources":["/packages/zurb:foundation-sites/js/foundation.util.triggers.js"],"names":[],"mappings":"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","file":"/packages/zurb:foundation-sites/js/foundation.util.triggers.js.map","sourcesContent":["'use strict';\n\n!function($) {\n\nconst MutationObserver = (function () {\n  var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n  for (var i=0; i < prefixes.length; i++) {\n    if (`${prefixes[i]}MutationObserver` in window) {\n      return window[`${prefixes[i]}MutationObserver`];\n    }\n  }\n  return false;\n}());\n\nconst triggers = (el, type) => {\n  el.data(type).split(' ').forEach(id => {\n    $(`#${id}`)[ type === 'close' ? 'trigger' : 'triggerHandler'](`${type}.zf.trigger`, [el]);\n  });\n};\n// Elements with [data-open] will reveal a plugin that supports it when clicked.\n$(document).on('click.zf.trigger', '[data-open]', function() {\n  triggers($(this), 'open');\n});\n\n// Elements with [data-close] will close a plugin that supports it when clicked.\n// If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\n$(document).on('click.zf.trigger', '[data-close]', function() {\n  let id = $(this).data('close');\n  if (id) {\n    triggers($(this), 'close');\n  }\n  else {\n    $(this).trigger('close.zf.trigger');\n  }\n});\n\n// Elements with [data-toggle] will toggle a plugin that supports it when clicked.\n$(document).on('click.zf.trigger', '[data-toggle]', function() {\n  triggers($(this), 'toggle');\n});\n\n// Elements with [data-closable] will respond to close.zf.trigger events.\n$(document).on('close.zf.trigger', '[data-closable]', function(e){\n  e.stopPropagation();\n  let animation = $(this).data('closable');\n\n  if(animation !== ''){\n    Foundation.Motion.animateOut($(this), animation, function() {\n      $(this).trigger('closed.zf');\n    });\n  }else{\n    $(this).fadeOut().trigger('closed.zf');\n  }\n});\n\n$(document).on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', function() {\n  let id = $(this).data('toggle-focus');\n  $(`#${id}`).triggerHandler('toggle.zf.trigger', [$(this)]);\n});\n\n/**\n* Fires once after all other scripts have loaded\n* @function\n* @private\n*/\n$(window).load(() => {\n  checkListeners();\n});\n\nfunction checkListeners() {\n  eventsListener();\n  resizeListener();\n  scrollListener();\n  closemeListener();\n}\n\n//******** only fires this function once on load, if there's something to watch ********\nfunction closemeListener(pluginName) {\n  var yetiBoxes = $('[data-yeti-box]'),\n      plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n  if(pluginName){\n    if(typeof pluginName === 'string'){\n      plugNames.push(pluginName);\n    }else if(typeof pluginName === 'object' && typeof pluginName[0] === 'string'){\n      plugNames.concat(pluginName);\n    }else{\n      console.error('Plugin names must be strings');\n    }\n  }\n  if(yetiBoxes.length){\n    let listeners = plugNames.map((name) => {\n      return `closeme.zf.${name}`;\n    }).join(' ');\n\n    $(window).off(listeners).on(listeners, function(e, pluginId){\n      let plugin = e.namespace.split('.')[0];\n      let plugins = $(`[data-${plugin}]`).not(`[data-yeti-box=\"${pluginId}\"]`);\n\n      plugins.each(function(){\n        let _this = $(this);\n\n        _this.triggerHandler('close.zf.trigger', [_this]);\n      });\n    });\n  }\n}\n\nfunction resizeListener(debounce){\n  let timer,\n      $nodes = $('[data-resize]');\n  if($nodes.length){\n    $(window).off('resize.zf.trigger')\n    .on('resize.zf.trigger', function(e) {\n      if (timer) { clearTimeout(timer); }\n\n      timer = setTimeout(function(){\n\n        if(!MutationObserver){//fallback for IE 9\n          $nodes.each(function(){\n            $(this).triggerHandler('resizeme.zf.trigger');\n          });\n        }\n        //trigger all listening elements and signal a resize event\n        $nodes.attr('data-events', \"resize\");\n      }, debounce || 10);//default time to emit resize event\n    });\n  }\n}\n\nfunction scrollListener(debounce){\n  let timer,\n      $nodes = $('[data-scroll]');\n  if($nodes.length){\n    $(window).off('scroll.zf.trigger')\n    .on('scroll.zf.trigger', function(e){\n      if(timer){ clearTimeout(timer); }\n\n      timer = setTimeout(function(){\n\n        if(!MutationObserver){//fallback for IE 9\n          $nodes.each(function(){\n            $(this).triggerHandler('scrollme.zf.trigger');\n          });\n        }\n        //trigger all listening elements and signal a scroll event\n        $nodes.attr('data-events', \"scroll\");\n      }, debounce || 10);//default time to emit scroll event\n    });\n  }\n}\n\nfunction eventsListener() {\n  if(!MutationObserver){ return false; }\n  let nodes = document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');\n\n  //element callback\n  var listeningElementsMutation = function(mutationRecordsList) {\n    var $target = $(mutationRecordsList[0].target);\n    //trigger the event handler for the element depending on type\n    switch ($target.attr(\"data-events\")) {\n\n      case \"resize\" :\n      $target.triggerHandler('resizeme.zf.trigger', [$target]);\n      break;\n\n      case \"scroll\" :\n      $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n      break;\n\n      // case \"mutate\" :\n      // console.log('mutate', $target);\n      // $target.triggerHandler('mutate.zf.trigger');\n      //\n      // //make sure we don't get stuck in an infinite loop from sloppy codeing\n      // if ($target.index('[data-mutate]') == $(\"[data-mutate]\").length-1) {\n      //   domMutationObserver();\n      // }\n      // break;\n\n      default :\n      return false;\n      //nothing\n    }\n  }\n\n  if(nodes.length){\n    //for each element that needs to listen for resizing, scrolling, (or coming soon mutation) add a single observer\n    for (var i = 0; i <= nodes.length-1; i++) {\n      let elementObserver = new MutationObserver(listeningElementsMutation);\n      elementObserver.observe(nodes[i], { attributes: true, childList: false, characterData: false, subtree:false, attributeFilter:[\"data-events\"]});\n    }\n  }\n}\n\n// ------------------------------------\n\n// [PH]\n// Foundation.CheckWatchers = checkWatchers;\nFoundation.IHearYou = checkListeners;\n// Foundation.ISeeYou = scrollListener;\n// Foundation.IFeelYou = closemeListener;\n\n}(jQuery);\n\n// function domMutationObserver(debounce) {\n//   // !!! This is coming soon and needs more work; not active  !!! //\n//   var timer,\n//   nodes = document.querySelectorAll('[data-mutate]');\n//   //\n//   if (nodes.length) {\n//     // var MutationObserver = (function () {\n//     //   var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n//     //   for (var i=0; i < prefixes.length; i++) {\n//     //     if (prefixes[i] + 'MutationObserver' in window) {\n//     //       return window[prefixes[i] + 'MutationObserver'];\n//     //     }\n//     //   }\n//     //   return false;\n//     // }());\n//\n//\n//     //for the body, we need to listen for all changes effecting the style and class attributes\n//     var bodyObserver = new MutationObserver(bodyMutation);\n//     bodyObserver.observe(document.body, { attributes: true, childList: true, characterData: false, subtree:true, attributeFilter:[\"style\", \"class\"]});\n//\n//\n//     //body callback\n//     function bodyMutation(mutate) {\n//       //trigger all listening elements and signal a mutation event\n//       if (timer) { clearTimeout(timer); }\n//\n//       timer = setTimeout(function() {\n//         bodyObserver.disconnect();\n//         $('[data-mutate]').attr('data-events',\"mutate\");\n//       }, debounce || 150);\n//     }\n//   }\n// }\n"]},"hash":"3856c255d5b6701cdea664bf6a3d0bfaaa2aaaca"}
