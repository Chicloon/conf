{"version":3,"sources":["meteor://ğŸ’»app/server/methods.js","meteor://ğŸ’»app/server/publish.js","meteor://ğŸ’»app/server/main.js"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,OAAP,CAAgB;AACd,gBADc,0BACC,IADD,EACO;;;;AAInB,iBAAa,MAAb,CAAoB;AAClB,aAAQ,KAAK,KADK;AAElB,eAAU,KAAK,OAFG;AAGlB,eAAS,KAAK,OAHI;AAIlB,gBAAW,KAAK,QAJE;AAKlB,oBAAe,KAAK,YALF;AAMlB,iBAAW,IAAI,IAAJ,EANO;AAOlB,YAAM,OAAO,MAAP;AAPY,KAApB;AASD;AAda,CAAhB,+E;;;;;;;;;;;ACAA,QAAQ,GAAR,CAAY,YAAZ;;AAEA,eAAe,IAAI,MAAM,UAAV,CAAsB,cAAtB,CAAf;;AAEA,OAAO,OAAP,CAAe,cAAf,EAA+B,YAAW;AACxC,SAAO,aAAa,IAAb,EAAP;AACD,CAFD,+E;;;;;;;;;;;ACJA,SAAS,MAAT,QAAuB,eAAvB;;AAEA,OAAO,OAAP,CAAe,YAAM;;AAEpB,CAFD,+E","file":"/app.js","sourcesContent":["Meteor.methods ({\n  addParticipant(item) {\n    // if(!Meteor.userId()) {\n    //   throw new Meteor.Error('not authorized');\n    // }\n    Participants.insert({\n      title : item.title,\n      authors : item.authors,\n      section: item.section,\n      abstract : item.abstract,\n      organization : item.organization,\n      createdAt: new Date(),\n      user: Meteor.userId()\n    });\n  },\n});\n","console.log(\"I'm a live\");\n\nParticipants = new Mongo.Collection (\"participants\");\n\nMeteor.publish(\"allAbstracts\", function (){\n  return Participants.find();\n});\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}