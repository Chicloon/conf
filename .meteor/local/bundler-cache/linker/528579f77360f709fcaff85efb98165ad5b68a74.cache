[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"server\":{\"methods.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// server/methods.js                                                        //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nMeteor.methods({                                                            // 1\n  addParticipant: function addParticipant(item) {                           // 2\n    // if(!Meteor.userId()) {                                               //\n    //   throw new Meteor.Error('not authorized');                          //\n    // }                                                                    //\n    Participants.insert({                                                   // 6\n      title: item.title,                                                    // 7\n      authors: item.authors,                                                // 8\n      section: item.section,                                                // 9\n      abstract: item.abstract,                                              // 10\n      organization: item.organization,                                      // 11\n      createdAt: new Date(),                                                // 12\n      user: Meteor.userId()                                                 // 13\n    });                                                                     // 6\n  }                                                                         // 15\n});                                                                         // 1\n//////////////////////////////////////////////////////////////////////////////\n\n},\"publish.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// server/publish.js                                                        //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nconsole.log(\"I'm a live\");                                                  // 1\n                                                                            //\nParticipants = new Mongo.Collection(\"participants\");                        // 3\n                                                                            //\nMeteor.publish(\"allAbstracts\", function () {                                // 5\n  return Participants.find();                                               // 6\n});                                                                         // 7\n//////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":[\"meteor/meteor\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// server/main.js                                                           //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});\n                                                                            //\nMeteor.startup(function () {                                                // 3\n  // code to run on server at startup                                       //\n});                                                                         // 5\n//////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./server/methods.js\");\nrequire(\"./server/publish.js\");\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/server/methods.js","/server/publish.js","/server/main.js"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,OAAP,CAAgB;AACd,gBADc,0BACC,IADD,EACO;;;;AAInB,iBAAa,MAAb,CAAoB;AAClB,aAAQ,KAAK,KADK;AAElB,eAAU,KAAK,OAFG;AAGlB,eAAS,KAAK,OAHI;AAIlB,gBAAW,KAAK,QAJE;AAKlB,oBAAe,KAAK,YALF;AAMlB,iBAAW,IAAI,IAAJ,EANO;AAOlB,YAAM,OAAO,MAAP;AAPY,KAApB;AASD;AAda,CAAhB,+E;;;;;;;;;;;ACAA,QAAQ,GAAR,CAAY,YAAZ;;AAEA,eAAe,IAAI,MAAM,UAAV,CAAsB,cAAtB,CAAf;;AAEA,OAAO,OAAP,CAAe,cAAf,EAA+B,YAAW;AACxC,SAAO,aAAa,IAAb,EAAP;AACD,CAFD,+E;;;;;;;;;;;ACJA,SAAS,MAAT,QAAuB,eAAvB;;AAEA,OAAO,OAAP,CAAe,YAAM;;AAEpB,CAFD,+E","file":"/app.js","sourcesContent":["Meteor.methods ({\n  addParticipant(item) {\n    // if(!Meteor.userId()) {\n    //   throw new Meteor.Error('not authorized');\n    // }\n    Participants.insert({\n      title : item.title,\n      authors : item.authors,\n      section: item.section,\n      abstract : item.abstract,\n      organization : item.organization,\n      createdAt: new Date(),\n      user: Meteor.userId()\n    });\n  },\n});\n","console.log(\"I'm a live\");\n\nParticipants = new Mongo.Collection (\"participants\");\n\nMeteor.publish(\"allAbstracts\", function (){\n  return Participants.find();\n});\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}}]